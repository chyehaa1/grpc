// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: src/proto/grpc/channelz/channelz.proto
// Protobuf C++ Version: 6.31.0

#include "src/proto/grpc/channelz/channelz.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace grpc {
namespace channelz {
namespace v1 {

inline constexpr SubchannelRef::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        subchannel_id_{::int64_t{0}} {}

template <typename>
PROTOBUF_CONSTEXPR SubchannelRef::SubchannelRef(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(SubchannelRef_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct SubchannelRefDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SubchannelRefDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SubchannelRefDefaultTypeInternal() {}
  union {
    SubchannelRef _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SubchannelRefDefaultTypeInternal _SubchannelRef_default_instance_;

inline constexpr SocketRef::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        socket_id_{::int64_t{0}} {}

template <typename>
PROTOBUF_CONSTEXPR SocketRef::SocketRef(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(SocketRef_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct SocketRefDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SocketRefDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SocketRefDefaultTypeInternal() {}
  union {
    SocketRef _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SocketRefDefaultTypeInternal _SocketRef_default_instance_;

inline constexpr SocketOptionTcpInfo::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        tcpi_state_{0u},
        tcpi_ca_state_{0u},
        tcpi_retransmits_{0u},
        tcpi_probes_{0u},
        tcpi_backoff_{0u},
        tcpi_options_{0u},
        tcpi_snd_wscale_{0u},
        tcpi_rcv_wscale_{0u},
        tcpi_rto_{0u},
        tcpi_ato_{0u},
        tcpi_snd_mss_{0u},
        tcpi_rcv_mss_{0u},
        tcpi_unacked_{0u},
        tcpi_sacked_{0u},
        tcpi_lost_{0u},
        tcpi_retrans_{0u},
        tcpi_fackets_{0u},
        tcpi_last_data_sent_{0u},
        tcpi_last_ack_sent_{0u},
        tcpi_last_data_recv_{0u},
        tcpi_last_ack_recv_{0u},
        tcpi_pmtu_{0u},
        tcpi_rcv_ssthresh_{0u},
        tcpi_rtt_{0u},
        tcpi_rttvar_{0u},
        tcpi_snd_ssthresh_{0u},
        tcpi_snd_cwnd_{0u},
        tcpi_advmss_{0u},
        tcpi_reordering_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR SocketOptionTcpInfo::SocketOptionTcpInfo(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(SocketOptionTcpInfo_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct SocketOptionTcpInfoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SocketOptionTcpInfoDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SocketOptionTcpInfoDefaultTypeInternal() {}
  union {
    SocketOptionTcpInfo _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SocketOptionTcpInfoDefaultTypeInternal _SocketOptionTcpInfo_default_instance_;

inline constexpr ServerRef::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        server_id_{::int64_t{0}} {}

template <typename>
PROTOBUF_CONSTEXPR ServerRef::ServerRef(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(ServerRef_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ServerRefDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ServerRefDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ServerRefDefaultTypeInternal() {}
  union {
    ServerRef _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ServerRefDefaultTypeInternal _ServerRef_default_instance_;

inline constexpr Security_Tls::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        local_certificate_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        remote_certificate_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        cipher_suite_{},
        _oneof_case_{} {}

template <typename>
PROTOBUF_CONSTEXPR Security_Tls::Security_Tls(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(Security_Tls_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct Security_TlsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Security_TlsDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Security_TlsDefaultTypeInternal() {}
  union {
    Security_Tls _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Security_TlsDefaultTypeInternal _Security_Tls_default_instance_;

inline constexpr GetTopChannelsRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        start_channel_id_{::int64_t{0}},
        max_results_{::int64_t{0}} {}

template <typename>
PROTOBUF_CONSTEXPR GetTopChannelsRequest::GetTopChannelsRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(GetTopChannelsRequest_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct GetTopChannelsRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetTopChannelsRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetTopChannelsRequestDefaultTypeInternal() {}
  union {
    GetTopChannelsRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetTopChannelsRequestDefaultTypeInternal _GetTopChannelsRequest_default_instance_;

inline constexpr GetSubchannelRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        subchannel_id_{::int64_t{0}} {}

template <typename>
PROTOBUF_CONSTEXPR GetSubchannelRequest::GetSubchannelRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(GetSubchannelRequest_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct GetSubchannelRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetSubchannelRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetSubchannelRequestDefaultTypeInternal() {}
  union {
    GetSubchannelRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetSubchannelRequestDefaultTypeInternal _GetSubchannelRequest_default_instance_;

inline constexpr GetSocketRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        socket_id_{::int64_t{0}},
        summary_{false} {}

template <typename>
PROTOBUF_CONSTEXPR GetSocketRequest::GetSocketRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(GetSocketRequest_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct GetSocketRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetSocketRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetSocketRequestDefaultTypeInternal() {}
  union {
    GetSocketRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetSocketRequestDefaultTypeInternal _GetSocketRequest_default_instance_;

inline constexpr GetServersRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        start_server_id_{::int64_t{0}},
        max_results_{::int64_t{0}} {}

template <typename>
PROTOBUF_CONSTEXPR GetServersRequest::GetServersRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(GetServersRequest_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct GetServersRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetServersRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetServersRequestDefaultTypeInternal() {}
  union {
    GetServersRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetServersRequestDefaultTypeInternal _GetServersRequest_default_instance_;

inline constexpr GetServerSocketsRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        server_id_{::int64_t{0}},
        start_socket_id_{::int64_t{0}},
        max_results_{::int64_t{0}} {}

template <typename>
PROTOBUF_CONSTEXPR GetServerSocketsRequest::GetServerSocketsRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(GetServerSocketsRequest_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct GetServerSocketsRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetServerSocketsRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetServerSocketsRequestDefaultTypeInternal() {}
  union {
    GetServerSocketsRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetServerSocketsRequestDefaultTypeInternal _GetServerSocketsRequest_default_instance_;

inline constexpr GetServerRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        server_id_{::int64_t{0}} {}

template <typename>
PROTOBUF_CONSTEXPR GetServerRequest::GetServerRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(GetServerRequest_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct GetServerRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetServerRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetServerRequestDefaultTypeInternal() {}
  union {
    GetServerRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetServerRequestDefaultTypeInternal _GetServerRequest_default_instance_;

inline constexpr GetChannelRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        channel_id_{::int64_t{0}} {}

template <typename>
PROTOBUF_CONSTEXPR GetChannelRequest::GetChannelRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(GetChannelRequest_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct GetChannelRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetChannelRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetChannelRequestDefaultTypeInternal() {}
  union {
    GetChannelRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetChannelRequestDefaultTypeInternal _GetChannelRequest_default_instance_;

inline constexpr ChannelRef::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        channel_id_{::int64_t{0}} {}

template <typename>
PROTOBUF_CONSTEXPR ChannelRef::ChannelRef(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(ChannelRef_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ChannelRefDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ChannelRefDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ChannelRefDefaultTypeInternal() {}
  union {
    ChannelRef _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ChannelRefDefaultTypeInternal _ChannelRef_default_instance_;

inline constexpr ChannelConnectivityState::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        state_{static_cast< ::grpc::channelz::v1::ChannelConnectivityState_State >(0)} {}

template <typename>
PROTOBUF_CONSTEXPR ChannelConnectivityState::ChannelConnectivityState(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(ChannelConnectivityState_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ChannelConnectivityStateDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ChannelConnectivityStateDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ChannelConnectivityStateDefaultTypeInternal() {}
  union {
    ChannelConnectivityState _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ChannelConnectivityStateDefaultTypeInternal _ChannelConnectivityState_default_instance_;

inline constexpr Address_UdsAddress::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        filename_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()) {}

template <typename>
PROTOBUF_CONSTEXPR Address_UdsAddress::Address_UdsAddress(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(Address_UdsAddress_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct Address_UdsAddressDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Address_UdsAddressDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Address_UdsAddressDefaultTypeInternal() {}
  union {
    Address_UdsAddress _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Address_UdsAddressDefaultTypeInternal _Address_UdsAddress_default_instance_;

inline constexpr Address_TcpIpAddress::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        ip_address_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        port_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Address_TcpIpAddress::Address_TcpIpAddress(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(Address_TcpIpAddress_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct Address_TcpIpAddressDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Address_TcpIpAddressDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Address_TcpIpAddressDefaultTypeInternal() {}
  union {
    Address_TcpIpAddress _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Address_TcpIpAddressDefaultTypeInternal _Address_TcpIpAddress_default_instance_;

inline constexpr SocketOptionTimeout::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        duration_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR SocketOptionTimeout::SocketOptionTimeout(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(SocketOptionTimeout_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct SocketOptionTimeoutDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SocketOptionTimeoutDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SocketOptionTimeoutDefaultTypeInternal() {}
  union {
    SocketOptionTimeout _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SocketOptionTimeoutDefaultTypeInternal _SocketOptionTimeout_default_instance_;

inline constexpr SocketOptionLinger::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        duration_{nullptr},
        active_{false} {}

template <typename>
PROTOBUF_CONSTEXPR SocketOptionLinger::SocketOptionLinger(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(SocketOptionLinger_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct SocketOptionLingerDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SocketOptionLingerDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SocketOptionLingerDefaultTypeInternal() {}
  union {
    SocketOptionLinger _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SocketOptionLingerDefaultTypeInternal _SocketOptionLinger_default_instance_;

inline constexpr SocketOption::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        value_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        additional_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR SocketOption::SocketOption(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(SocketOption_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct SocketOptionDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SocketOptionDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SocketOptionDefaultTypeInternal() {}
  union {
    SocketOption _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SocketOptionDefaultTypeInternal _SocketOption_default_instance_;

inline constexpr Security_OtherSecurity::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        value_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR Security_OtherSecurity::Security_OtherSecurity(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(Security_OtherSecurity_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct Security_OtherSecurityDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Security_OtherSecurityDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Security_OtherSecurityDefaultTypeInternal() {}
  union {
    Security_OtherSecurity _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Security_OtherSecurityDefaultTypeInternal _Security_OtherSecurity_default_instance_;

inline constexpr GetServerSocketsResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        socket_ref_{},
        end_{false} {}

template <typename>
PROTOBUF_CONSTEXPR GetServerSocketsResponse::GetServerSocketsResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(GetServerSocketsResponse_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct GetServerSocketsResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetServerSocketsResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetServerSocketsResponseDefaultTypeInternal() {}
  union {
    GetServerSocketsResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetServerSocketsResponseDefaultTypeInternal _GetServerSocketsResponse_default_instance_;

inline constexpr ChannelTraceEvent::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        description_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        timestamp_{nullptr},
        severity_{static_cast< ::grpc::channelz::v1::ChannelTraceEvent_Severity >(0)},
        child_ref_{},
        _oneof_case_{} {}

template <typename>
PROTOBUF_CONSTEXPR ChannelTraceEvent::ChannelTraceEvent(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(ChannelTraceEvent_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ChannelTraceEventDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ChannelTraceEventDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ChannelTraceEventDefaultTypeInternal() {}
  union {
    ChannelTraceEvent _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ChannelTraceEventDefaultTypeInternal _ChannelTraceEvent_default_instance_;

inline constexpr Address_OtherAddress::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        value_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR Address_OtherAddress::Address_OtherAddress(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(Address_OtherAddress_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct Address_OtherAddressDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Address_OtherAddressDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Address_OtherAddressDefaultTypeInternal() {}
  union {
    Address_OtherAddress _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Address_OtherAddressDefaultTypeInternal _Address_OtherAddress_default_instance_;

inline constexpr SocketData::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        option_{},
        last_local_stream_created_timestamp_{nullptr},
        last_remote_stream_created_timestamp_{nullptr},
        last_message_sent_timestamp_{nullptr},
        last_message_received_timestamp_{nullptr},
        local_flow_control_window_{nullptr},
        remote_flow_control_window_{nullptr},
        streams_started_{::int64_t{0}},
        streams_succeeded_{::int64_t{0}},
        streams_failed_{::int64_t{0}},
        messages_sent_{::int64_t{0}},
        messages_received_{::int64_t{0}},
        keep_alives_sent_{::int64_t{0}} {}

template <typename>
PROTOBUF_CONSTEXPR SocketData::SocketData(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(SocketData_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct SocketDataDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SocketDataDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SocketDataDefaultTypeInternal() {}
  union {
    SocketData _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SocketDataDefaultTypeInternal _SocketData_default_instance_;

inline constexpr Security::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : model_{},
        _cached_size_{0},
        _oneof_case_{} {}

template <typename>
PROTOBUF_CONSTEXPR Security::Security(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(Security_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct SecurityDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SecurityDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SecurityDefaultTypeInternal() {}
  union {
    Security _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SecurityDefaultTypeInternal _Security_default_instance_;

inline constexpr ChannelTrace::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        events_{},
        creation_timestamp_{nullptr},
        num_events_logged_{::int64_t{0}} {}

template <typename>
PROTOBUF_CONSTEXPR ChannelTrace::ChannelTrace(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(ChannelTrace_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ChannelTraceDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ChannelTraceDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ChannelTraceDefaultTypeInternal() {}
  union {
    ChannelTrace _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ChannelTraceDefaultTypeInternal _ChannelTrace_default_instance_;

inline constexpr Address::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : address_{},
        _cached_size_{0},
        _oneof_case_{} {}

template <typename>
PROTOBUF_CONSTEXPR Address::Address(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(Address_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct AddressDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AddressDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~AddressDefaultTypeInternal() {}
  union {
    Address _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AddressDefaultTypeInternal _Address_default_instance_;

inline constexpr Socket::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        remote_name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        ref_{nullptr},
        data_{nullptr},
        local_{nullptr},
        remote_{nullptr},
        security_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR Socket::Socket(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(Socket_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct SocketDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SocketDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SocketDefaultTypeInternal() {}
  union {
    Socket _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SocketDefaultTypeInternal _Socket_default_instance_;

inline constexpr ServerData::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        trace_{nullptr},
        last_call_started_timestamp_{nullptr},
        calls_started_{::int64_t{0}},
        calls_succeeded_{::int64_t{0}},
        calls_failed_{::int64_t{0}} {}

template <typename>
PROTOBUF_CONSTEXPR ServerData::ServerData(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(ServerData_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ServerDataDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ServerDataDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ServerDataDefaultTypeInternal() {}
  union {
    ServerData _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ServerDataDefaultTypeInternal _ServerData_default_instance_;

inline constexpr ChannelData::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        target_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        state_{nullptr},
        trace_{nullptr},
        last_call_started_timestamp_{nullptr},
        calls_started_{::int64_t{0}},
        calls_succeeded_{::int64_t{0}},
        calls_failed_{::int64_t{0}} {}

template <typename>
PROTOBUF_CONSTEXPR ChannelData::ChannelData(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(ChannelData_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ChannelDataDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ChannelDataDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ChannelDataDefaultTypeInternal() {}
  union {
    ChannelData _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ChannelDataDefaultTypeInternal _ChannelData_default_instance_;

inline constexpr Subchannel::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        channel_ref_{},
        subchannel_ref_{},
        socket_ref_{},
        ref_{nullptr},
        data_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR Subchannel::Subchannel(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(Subchannel_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct SubchannelDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SubchannelDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SubchannelDefaultTypeInternal() {}
  union {
    Subchannel _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SubchannelDefaultTypeInternal _Subchannel_default_instance_;

inline constexpr Server::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        listen_socket_{},
        ref_{nullptr},
        data_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR Server::Server(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(Server_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ServerDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ServerDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ServerDefaultTypeInternal() {}
  union {
    Server _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ServerDefaultTypeInternal _Server_default_instance_;

inline constexpr GetSocketResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        socket_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR GetSocketResponse::GetSocketResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(GetSocketResponse_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct GetSocketResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetSocketResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetSocketResponseDefaultTypeInternal() {}
  union {
    GetSocketResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetSocketResponseDefaultTypeInternal _GetSocketResponse_default_instance_;

inline constexpr Channel::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        channel_ref_{},
        subchannel_ref_{},
        socket_ref_{},
        ref_{nullptr},
        data_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR Channel::Channel(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(Channel_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ChannelDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ChannelDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ChannelDefaultTypeInternal() {}
  union {
    Channel _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ChannelDefaultTypeInternal _Channel_default_instance_;

inline constexpr GetTopChannelsResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        channel_{},
        end_{false} {}

template <typename>
PROTOBUF_CONSTEXPR GetTopChannelsResponse::GetTopChannelsResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(GetTopChannelsResponse_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct GetTopChannelsResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetTopChannelsResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetTopChannelsResponseDefaultTypeInternal() {}
  union {
    GetTopChannelsResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetTopChannelsResponseDefaultTypeInternal _GetTopChannelsResponse_default_instance_;

inline constexpr GetSubchannelResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        subchannel_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR GetSubchannelResponse::GetSubchannelResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(GetSubchannelResponse_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct GetSubchannelResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetSubchannelResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetSubchannelResponseDefaultTypeInternal() {}
  union {
    GetSubchannelResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetSubchannelResponseDefaultTypeInternal _GetSubchannelResponse_default_instance_;

inline constexpr GetServersResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        server_{},
        end_{false} {}

template <typename>
PROTOBUF_CONSTEXPR GetServersResponse::GetServersResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(GetServersResponse_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct GetServersResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetServersResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetServersResponseDefaultTypeInternal() {}
  union {
    GetServersResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetServersResponseDefaultTypeInternal _GetServersResponse_default_instance_;

inline constexpr GetServerResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        server_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR GetServerResponse::GetServerResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(GetServerResponse_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct GetServerResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetServerResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetServerResponseDefaultTypeInternal() {}
  union {
    GetServerResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetServerResponseDefaultTypeInternal _GetServerResponse_default_instance_;

inline constexpr GetChannelResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        channel_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR GetChannelResponse::GetChannelResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(GetChannelResponse_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct GetChannelResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetChannelResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetChannelResponseDefaultTypeInternal() {}
  union {
    GetChannelResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetChannelResponseDefaultTypeInternal _GetChannelResponse_default_instance_;
}  // namespace v1
}  // namespace channelz
}  // namespace grpc
static const ::_pb::EnumDescriptor* PROTOBUF_NONNULL
    file_level_enum_descriptors_src_2fproto_2fgrpc_2fchannelz_2fchannelz_2eproto[2];
static constexpr const ::_pb::ServiceDescriptor *PROTOBUF_NONNULL *PROTOBUF_NULLABLE
    file_level_service_descriptors_src_2fproto_2fgrpc_2fchannelz_2fchannelz_2eproto = nullptr;
const ::uint32_t
    TableStruct_src_2fproto_2fgrpc_2fchannelz_2fchannelz_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::grpc::channelz::v1::Channel, _impl_._has_bits_),
        8, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::grpc::channelz::v1::Channel, _impl_.ref_),
        PROTOBUF_FIELD_OFFSET(::grpc::channelz::v1::Channel, _impl_.data_),
        PROTOBUF_FIELD_OFFSET(::grpc::channelz::v1::Channel, _impl_.channel_ref_),
        PROTOBUF_FIELD_OFFSET(::grpc::channelz::v1::Channel, _impl_.subchannel_ref_),
        PROTOBUF_FIELD_OFFSET(::grpc::channelz::v1::Channel, _impl_.socket_ref_),
        0,
        1,
        ~0u,
        ~0u,
        ~0u,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::grpc::channelz::v1::Subchannel, _impl_._has_bits_),
        8, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::grpc::channelz::v1::Subchannel, _impl_.ref_),
        PROTOBUF_FIELD_OFFSET(::grpc::channelz::v1::Subchannel, _impl_.data_),
        PROTOBUF_FIELD_OFFSET(::grpc::channelz::v1::Subchannel, _impl_.channel_ref_),
        PROTOBUF_FIELD_OFFSET(::grpc::channelz::v1::Subchannel, _impl_.subchannel_ref_),
        PROTOBUF_FIELD_OFFSET(::grpc::channelz::v1::Subchannel, _impl_.socket_ref_),
        0,
        1,
        ~0u,
        ~0u,
        ~0u,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::grpc::channelz::v1::ChannelConnectivityState, _impl_._has_bits_),
        4, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::grpc::channelz::v1::ChannelConnectivityState, _impl_.state_),
        0,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::grpc::channelz::v1::ChannelData, _impl_._has_bits_),
        10, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::grpc::channelz::v1::ChannelData, _impl_.state_),
        PROTOBUF_FIELD_OFFSET(::grpc::channelz::v1::ChannelData, _impl_.target_),
        PROTOBUF_FIELD_OFFSET(::grpc::channelz::v1::ChannelData, _impl_.trace_),
        PROTOBUF_FIELD_OFFSET(::grpc::channelz::v1::ChannelData, _impl_.calls_started_),
        PROTOBUF_FIELD_OFFSET(::grpc::channelz::v1::ChannelData, _impl_.calls_succeeded_),
        PROTOBUF_FIELD_OFFSET(::grpc::channelz::v1::ChannelData, _impl_.calls_failed_),
        PROTOBUF_FIELD_OFFSET(::grpc::channelz::v1::ChannelData, _impl_.last_call_started_timestamp_),
        1,
        0,
        2,
        4,
        5,
        6,
        3,
        0x085, // bitmap
        PROTOBUF_FIELD_OFFSET(::grpc::channelz::v1::ChannelTraceEvent, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::grpc::channelz::v1::ChannelTraceEvent, _impl_._oneof_case_[0]),
        10, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::grpc::channelz::v1::ChannelTraceEvent, _impl_.description_),
        PROTOBUF_FIELD_OFFSET(::grpc::channelz::v1::ChannelTraceEvent, _impl_.severity_),
        PROTOBUF_FIELD_OFFSET(::grpc::channelz::v1::ChannelTraceEvent, _impl_.timestamp_),
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        PROTOBUF_FIELD_OFFSET(::grpc::channelz::v1::ChannelTraceEvent, _impl_.child_ref_),
        0,
        2,
        1,
        ~0u,
        ~0u,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::grpc::channelz::v1::ChannelTrace, _impl_._has_bits_),
        6, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::grpc::channelz::v1::ChannelTrace, _impl_.num_events_logged_),
        PROTOBUF_FIELD_OFFSET(::grpc::channelz::v1::ChannelTrace, _impl_.creation_timestamp_),
        PROTOBUF_FIELD_OFFSET(::grpc::channelz::v1::ChannelTrace, _impl_.events_),
        1,
        0,
        ~0u,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::grpc::channelz::v1::ChannelRef, _impl_._has_bits_),
        5, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::grpc::channelz::v1::ChannelRef, _impl_.channel_id_),
        PROTOBUF_FIELD_OFFSET(::grpc::channelz::v1::ChannelRef, _impl_.name_),
        1,
        0,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::grpc::channelz::v1::SubchannelRef, _impl_._has_bits_),
        5, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::grpc::channelz::v1::SubchannelRef, _impl_.subchannel_id_),
        PROTOBUF_FIELD_OFFSET(::grpc::channelz::v1::SubchannelRef, _impl_.name_),
        1,
        0,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::grpc::channelz::v1::SocketRef, _impl_._has_bits_),
        5, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::grpc::channelz::v1::SocketRef, _impl_.socket_id_),
        PROTOBUF_FIELD_OFFSET(::grpc::channelz::v1::SocketRef, _impl_.name_),
        1,
        0,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::grpc::channelz::v1::ServerRef, _impl_._has_bits_),
        5, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::grpc::channelz::v1::ServerRef, _impl_.server_id_),
        PROTOBUF_FIELD_OFFSET(::grpc::channelz::v1::ServerRef, _impl_.name_),
        1,
        0,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::grpc::channelz::v1::Server, _impl_._has_bits_),
        6, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::grpc::channelz::v1::Server, _impl_.ref_),
        PROTOBUF_FIELD_OFFSET(::grpc::channelz::v1::Server, _impl_.data_),
        PROTOBUF_FIELD_OFFSET(::grpc::channelz::v1::Server, _impl_.listen_socket_),
        0,
        1,
        ~0u,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::grpc::channelz::v1::ServerData, _impl_._has_bits_),
        8, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::grpc::channelz::v1::ServerData, _impl_.trace_),
        PROTOBUF_FIELD_OFFSET(::grpc::channelz::v1::ServerData, _impl_.calls_started_),
        PROTOBUF_FIELD_OFFSET(::grpc::channelz::v1::ServerData, _impl_.calls_succeeded_),
        PROTOBUF_FIELD_OFFSET(::grpc::channelz::v1::ServerData, _impl_.calls_failed_),
        PROTOBUF_FIELD_OFFSET(::grpc::channelz::v1::ServerData, _impl_.last_call_started_timestamp_),
        0,
        2,
        3,
        4,
        1,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::grpc::channelz::v1::Socket, _impl_._has_bits_),
        9, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::grpc::channelz::v1::Socket, _impl_.ref_),
        PROTOBUF_FIELD_OFFSET(::grpc::channelz::v1::Socket, _impl_.data_),
        PROTOBUF_FIELD_OFFSET(::grpc::channelz::v1::Socket, _impl_.local_),
        PROTOBUF_FIELD_OFFSET(::grpc::channelz::v1::Socket, _impl_.remote_),
        PROTOBUF_FIELD_OFFSET(::grpc::channelz::v1::Socket, _impl_.security_),
        PROTOBUF_FIELD_OFFSET(::grpc::channelz::v1::Socket, _impl_.remote_name_),
        1,
        2,
        3,
        4,
        5,
        0,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::grpc::channelz::v1::SocketData, _impl_._has_bits_),
        16, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::grpc::channelz::v1::SocketData, _impl_.streams_started_),
        PROTOBUF_FIELD_OFFSET(::grpc::channelz::v1::SocketData, _impl_.streams_succeeded_),
        PROTOBUF_FIELD_OFFSET(::grpc::channelz::v1::SocketData, _impl_.streams_failed_),
        PROTOBUF_FIELD_OFFSET(::grpc::channelz::v1::SocketData, _impl_.messages_sent_),
        PROTOBUF_FIELD_OFFSET(::grpc::channelz::v1::SocketData, _impl_.messages_received_),
        PROTOBUF_FIELD_OFFSET(::grpc::channelz::v1::SocketData, _impl_.keep_alives_sent_),
        PROTOBUF_FIELD_OFFSET(::grpc::channelz::v1::SocketData, _impl_.last_local_stream_created_timestamp_),
        PROTOBUF_FIELD_OFFSET(::grpc::channelz::v1::SocketData, _impl_.last_remote_stream_created_timestamp_),
        PROTOBUF_FIELD_OFFSET(::grpc::channelz::v1::SocketData, _impl_.last_message_sent_timestamp_),
        PROTOBUF_FIELD_OFFSET(::grpc::channelz::v1::SocketData, _impl_.last_message_received_timestamp_),
        PROTOBUF_FIELD_OFFSET(::grpc::channelz::v1::SocketData, _impl_.local_flow_control_window_),
        PROTOBUF_FIELD_OFFSET(::grpc::channelz::v1::SocketData, _impl_.remote_flow_control_window_),
        PROTOBUF_FIELD_OFFSET(::grpc::channelz::v1::SocketData, _impl_.option_),
        6,
        7,
        8,
        9,
        10,
        11,
        0,
        1,
        2,
        3,
        4,
        5,
        ~0u,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::grpc::channelz::v1::Address_TcpIpAddress, _impl_._has_bits_),
        5, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::grpc::channelz::v1::Address_TcpIpAddress, _impl_.ip_address_),
        PROTOBUF_FIELD_OFFSET(::grpc::channelz::v1::Address_TcpIpAddress, _impl_.port_),
        0,
        1,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::grpc::channelz::v1::Address_UdsAddress, _impl_._has_bits_),
        4, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::grpc::channelz::v1::Address_UdsAddress, _impl_.filename_),
        0,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::grpc::channelz::v1::Address_OtherAddress, _impl_._has_bits_),
        5, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::grpc::channelz::v1::Address_OtherAddress, _impl_.name_),
        PROTOBUF_FIELD_OFFSET(::grpc::channelz::v1::Address_OtherAddress, _impl_.value_),
        0,
        1,
        0x004, // bitmap
        PROTOBUF_FIELD_OFFSET(::grpc::channelz::v1::Address, _impl_._oneof_case_[0]),
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        PROTOBUF_FIELD_OFFSET(::grpc::channelz::v1::Address, _impl_.address_),
        0x085, // bitmap
        PROTOBUF_FIELD_OFFSET(::grpc::channelz::v1::Security_Tls, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::grpc::channelz::v1::Security_Tls, _impl_._oneof_case_[0]),
        9, // hasbit index offset
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        PROTOBUF_FIELD_OFFSET(::grpc::channelz::v1::Security_Tls, _impl_.local_certificate_),
        PROTOBUF_FIELD_OFFSET(::grpc::channelz::v1::Security_Tls, _impl_.remote_certificate_),
        PROTOBUF_FIELD_OFFSET(::grpc::channelz::v1::Security_Tls, _impl_.cipher_suite_),
        ~0u,
        ~0u,
        0,
        1,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::grpc::channelz::v1::Security_OtherSecurity, _impl_._has_bits_),
        5, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::grpc::channelz::v1::Security_OtherSecurity, _impl_.name_),
        PROTOBUF_FIELD_OFFSET(::grpc::channelz::v1::Security_OtherSecurity, _impl_.value_),
        0,
        1,
        0x004, // bitmap
        PROTOBUF_FIELD_OFFSET(::grpc::channelz::v1::Security, _impl_._oneof_case_[0]),
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        PROTOBUF_FIELD_OFFSET(::grpc::channelz::v1::Security, _impl_.model_),
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::grpc::channelz::v1::SocketOption, _impl_._has_bits_),
        6, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::grpc::channelz::v1::SocketOption, _impl_.name_),
        PROTOBUF_FIELD_OFFSET(::grpc::channelz::v1::SocketOption, _impl_.value_),
        PROTOBUF_FIELD_OFFSET(::grpc::channelz::v1::SocketOption, _impl_.additional_),
        0,
        1,
        2,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::grpc::channelz::v1::SocketOptionTimeout, _impl_._has_bits_),
        4, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::grpc::channelz::v1::SocketOptionTimeout, _impl_.duration_),
        0,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::grpc::channelz::v1::SocketOptionLinger, _impl_._has_bits_),
        5, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::grpc::channelz::v1::SocketOptionLinger, _impl_.active_),
        PROTOBUF_FIELD_OFFSET(::grpc::channelz::v1::SocketOptionLinger, _impl_.duration_),
        1,
        0,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::grpc::channelz::v1::SocketOptionTcpInfo, _impl_._has_bits_),
        32, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::grpc::channelz::v1::SocketOptionTcpInfo, _impl_.tcpi_state_),
        PROTOBUF_FIELD_OFFSET(::grpc::channelz::v1::SocketOptionTcpInfo, _impl_.tcpi_ca_state_),
        PROTOBUF_FIELD_OFFSET(::grpc::channelz::v1::SocketOptionTcpInfo, _impl_.tcpi_retransmits_),
        PROTOBUF_FIELD_OFFSET(::grpc::channelz::v1::SocketOptionTcpInfo, _impl_.tcpi_probes_),
        PROTOBUF_FIELD_OFFSET(::grpc::channelz::v1::SocketOptionTcpInfo, _impl_.tcpi_backoff_),
        PROTOBUF_FIELD_OFFSET(::grpc::channelz::v1::SocketOptionTcpInfo, _impl_.tcpi_options_),
        PROTOBUF_FIELD_OFFSET(::grpc::channelz::v1::SocketOptionTcpInfo, _impl_.tcpi_snd_wscale_),
        PROTOBUF_FIELD_OFFSET(::grpc::channelz::v1::SocketOptionTcpInfo, _impl_.tcpi_rcv_wscale_),
        PROTOBUF_FIELD_OFFSET(::grpc::channelz::v1::SocketOptionTcpInfo, _impl_.tcpi_rto_),
        PROTOBUF_FIELD_OFFSET(::grpc::channelz::v1::SocketOptionTcpInfo, _impl_.tcpi_ato_),
        PROTOBUF_FIELD_OFFSET(::grpc::channelz::v1::SocketOptionTcpInfo, _impl_.tcpi_snd_mss_),
        PROTOBUF_FIELD_OFFSET(::grpc::channelz::v1::SocketOptionTcpInfo, _impl_.tcpi_rcv_mss_),
        PROTOBUF_FIELD_OFFSET(::grpc::channelz::v1::SocketOptionTcpInfo, _impl_.tcpi_unacked_),
        PROTOBUF_FIELD_OFFSET(::grpc::channelz::v1::SocketOptionTcpInfo, _impl_.tcpi_sacked_),
        PROTOBUF_FIELD_OFFSET(::grpc::channelz::v1::SocketOptionTcpInfo, _impl_.tcpi_lost_),
        PROTOBUF_FIELD_OFFSET(::grpc::channelz::v1::SocketOptionTcpInfo, _impl_.tcpi_retrans_),
        PROTOBUF_FIELD_OFFSET(::grpc::channelz::v1::SocketOptionTcpInfo, _impl_.tcpi_fackets_),
        PROTOBUF_FIELD_OFFSET(::grpc::channelz::v1::SocketOptionTcpInfo, _impl_.tcpi_last_data_sent_),
        PROTOBUF_FIELD_OFFSET(::grpc::channelz::v1::SocketOptionTcpInfo, _impl_.tcpi_last_ack_sent_),
        PROTOBUF_FIELD_OFFSET(::grpc::channelz::v1::SocketOptionTcpInfo, _impl_.tcpi_last_data_recv_),
        PROTOBUF_FIELD_OFFSET(::grpc::channelz::v1::SocketOptionTcpInfo, _impl_.tcpi_last_ack_recv_),
        PROTOBUF_FIELD_OFFSET(::grpc::channelz::v1::SocketOptionTcpInfo, _impl_.tcpi_pmtu_),
        PROTOBUF_FIELD_OFFSET(::grpc::channelz::v1::SocketOptionTcpInfo, _impl_.tcpi_rcv_ssthresh_),
        PROTOBUF_FIELD_OFFSET(::grpc::channelz::v1::SocketOptionTcpInfo, _impl_.tcpi_rtt_),
        PROTOBUF_FIELD_OFFSET(::grpc::channelz::v1::SocketOptionTcpInfo, _impl_.tcpi_rttvar_),
        PROTOBUF_FIELD_OFFSET(::grpc::channelz::v1::SocketOptionTcpInfo, _impl_.tcpi_snd_ssthresh_),
        PROTOBUF_FIELD_OFFSET(::grpc::channelz::v1::SocketOptionTcpInfo, _impl_.tcpi_snd_cwnd_),
        PROTOBUF_FIELD_OFFSET(::grpc::channelz::v1::SocketOptionTcpInfo, _impl_.tcpi_advmss_),
        PROTOBUF_FIELD_OFFSET(::grpc::channelz::v1::SocketOptionTcpInfo, _impl_.tcpi_reordering_),
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        16,
        17,
        18,
        19,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        28,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::grpc::channelz::v1::GetTopChannelsRequest, _impl_._has_bits_),
        5, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::grpc::channelz::v1::GetTopChannelsRequest, _impl_.start_channel_id_),
        PROTOBUF_FIELD_OFFSET(::grpc::channelz::v1::GetTopChannelsRequest, _impl_.max_results_),
        0,
        1,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::grpc::channelz::v1::GetTopChannelsResponse, _impl_._has_bits_),
        5, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::grpc::channelz::v1::GetTopChannelsResponse, _impl_.channel_),
        PROTOBUF_FIELD_OFFSET(::grpc::channelz::v1::GetTopChannelsResponse, _impl_.end_),
        ~0u,
        0,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::grpc::channelz::v1::GetServersRequest, _impl_._has_bits_),
        5, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::grpc::channelz::v1::GetServersRequest, _impl_.start_server_id_),
        PROTOBUF_FIELD_OFFSET(::grpc::channelz::v1::GetServersRequest, _impl_.max_results_),
        0,
        1,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::grpc::channelz::v1::GetServersResponse, _impl_._has_bits_),
        5, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::grpc::channelz::v1::GetServersResponse, _impl_.server_),
        PROTOBUF_FIELD_OFFSET(::grpc::channelz::v1::GetServersResponse, _impl_.end_),
        ~0u,
        0,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::grpc::channelz::v1::GetServerRequest, _impl_._has_bits_),
        4, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::grpc::channelz::v1::GetServerRequest, _impl_.server_id_),
        0,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::grpc::channelz::v1::GetServerResponse, _impl_._has_bits_),
        4, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::grpc::channelz::v1::GetServerResponse, _impl_.server_),
        0,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::grpc::channelz::v1::GetServerSocketsRequest, _impl_._has_bits_),
        6, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::grpc::channelz::v1::GetServerSocketsRequest, _impl_.server_id_),
        PROTOBUF_FIELD_OFFSET(::grpc::channelz::v1::GetServerSocketsRequest, _impl_.start_socket_id_),
        PROTOBUF_FIELD_OFFSET(::grpc::channelz::v1::GetServerSocketsRequest, _impl_.max_results_),
        0,
        1,
        2,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::grpc::channelz::v1::GetServerSocketsResponse, _impl_._has_bits_),
        5, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::grpc::channelz::v1::GetServerSocketsResponse, _impl_.socket_ref_),
        PROTOBUF_FIELD_OFFSET(::grpc::channelz::v1::GetServerSocketsResponse, _impl_.end_),
        ~0u,
        0,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::grpc::channelz::v1::GetChannelRequest, _impl_._has_bits_),
        4, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::grpc::channelz::v1::GetChannelRequest, _impl_.channel_id_),
        0,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::grpc::channelz::v1::GetChannelResponse, _impl_._has_bits_),
        4, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::grpc::channelz::v1::GetChannelResponse, _impl_.channel_),
        0,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::grpc::channelz::v1::GetSubchannelRequest, _impl_._has_bits_),
        4, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::grpc::channelz::v1::GetSubchannelRequest, _impl_.subchannel_id_),
        0,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::grpc::channelz::v1::GetSubchannelResponse, _impl_._has_bits_),
        4, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::grpc::channelz::v1::GetSubchannelResponse, _impl_.subchannel_),
        0,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::grpc::channelz::v1::GetSocketRequest, _impl_._has_bits_),
        5, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::grpc::channelz::v1::GetSocketRequest, _impl_.socket_id_),
        PROTOBUF_FIELD_OFFSET(::grpc::channelz::v1::GetSocketRequest, _impl_.summary_),
        0,
        1,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::grpc::channelz::v1::GetSocketResponse, _impl_._has_bits_),
        4, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::grpc::channelz::v1::GetSocketResponse, _impl_.socket_),
        0,
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, sizeof(::grpc::channelz::v1::Channel)},
        {13, sizeof(::grpc::channelz::v1::Subchannel)},
        {26, sizeof(::grpc::channelz::v1::ChannelConnectivityState)},
        {31, sizeof(::grpc::channelz::v1::ChannelData)},
        {48, sizeof(::grpc::channelz::v1::ChannelTraceEvent)},
        {63, sizeof(::grpc::channelz::v1::ChannelTrace)},
        {72, sizeof(::grpc::channelz::v1::ChannelRef)},
        {79, sizeof(::grpc::channelz::v1::SubchannelRef)},
        {86, sizeof(::grpc::channelz::v1::SocketRef)},
        {93, sizeof(::grpc::channelz::v1::ServerRef)},
        {100, sizeof(::grpc::channelz::v1::Server)},
        {109, sizeof(::grpc::channelz::v1::ServerData)},
        {122, sizeof(::grpc::channelz::v1::Socket)},
        {137, sizeof(::grpc::channelz::v1::SocketData)},
        {166, sizeof(::grpc::channelz::v1::Address_TcpIpAddress)},
        {173, sizeof(::grpc::channelz::v1::Address_UdsAddress)},
        {178, sizeof(::grpc::channelz::v1::Address_OtherAddress)},
        {185, sizeof(::grpc::channelz::v1::Address)},
        {191, sizeof(::grpc::channelz::v1::Security_Tls)},
        {204, sizeof(::grpc::channelz::v1::Security_OtherSecurity)},
        {211, sizeof(::grpc::channelz::v1::Security)},
        {216, sizeof(::grpc::channelz::v1::SocketOption)},
        {225, sizeof(::grpc::channelz::v1::SocketOptionTimeout)},
        {230, sizeof(::grpc::channelz::v1::SocketOptionLinger)},
        {237, sizeof(::grpc::channelz::v1::SocketOptionTcpInfo)},
        {298, sizeof(::grpc::channelz::v1::GetTopChannelsRequest)},
        {305, sizeof(::grpc::channelz::v1::GetTopChannelsResponse)},
        {312, sizeof(::grpc::channelz::v1::GetServersRequest)},
        {319, sizeof(::grpc::channelz::v1::GetServersResponse)},
        {326, sizeof(::grpc::channelz::v1::GetServerRequest)},
        {331, sizeof(::grpc::channelz::v1::GetServerResponse)},
        {336, sizeof(::grpc::channelz::v1::GetServerSocketsRequest)},
        {345, sizeof(::grpc::channelz::v1::GetServerSocketsResponse)},
        {352, sizeof(::grpc::channelz::v1::GetChannelRequest)},
        {357, sizeof(::grpc::channelz::v1::GetChannelResponse)},
        {362, sizeof(::grpc::channelz::v1::GetSubchannelRequest)},
        {367, sizeof(::grpc::channelz::v1::GetSubchannelResponse)},
        {372, sizeof(::grpc::channelz::v1::GetSocketRequest)},
        {379, sizeof(::grpc::channelz::v1::GetSocketResponse)},
};
static const ::_pb::Message* PROTOBUF_NONNULL const file_default_instances[] = {
    &::grpc::channelz::v1::_Channel_default_instance_._instance,
    &::grpc::channelz::v1::_Subchannel_default_instance_._instance,
    &::grpc::channelz::v1::_ChannelConnectivityState_default_instance_._instance,
    &::grpc::channelz::v1::_ChannelData_default_instance_._instance,
    &::grpc::channelz::v1::_ChannelTraceEvent_default_instance_._instance,
    &::grpc::channelz::v1::_ChannelTrace_default_instance_._instance,
    &::grpc::channelz::v1::_ChannelRef_default_instance_._instance,
    &::grpc::channelz::v1::_SubchannelRef_default_instance_._instance,
    &::grpc::channelz::v1::_SocketRef_default_instance_._instance,
    &::grpc::channelz::v1::_ServerRef_default_instance_._instance,
    &::grpc::channelz::v1::_Server_default_instance_._instance,
    &::grpc::channelz::v1::_ServerData_default_instance_._instance,
    &::grpc::channelz::v1::_Socket_default_instance_._instance,
    &::grpc::channelz::v1::_SocketData_default_instance_._instance,
    &::grpc::channelz::v1::_Address_TcpIpAddress_default_instance_._instance,
    &::grpc::channelz::v1::_Address_UdsAddress_default_instance_._instance,
    &::grpc::channelz::v1::_Address_OtherAddress_default_instance_._instance,
    &::grpc::channelz::v1::_Address_default_instance_._instance,
    &::grpc::channelz::v1::_Security_Tls_default_instance_._instance,
    &::grpc::channelz::v1::_Security_OtherSecurity_default_instance_._instance,
    &::grpc::channelz::v1::_Security_default_instance_._instance,
    &::grpc::channelz::v1::_SocketOption_default_instance_._instance,
    &::grpc::channelz::v1::_SocketOptionTimeout_default_instance_._instance,
    &::grpc::channelz::v1::_SocketOptionLinger_default_instance_._instance,
    &::grpc::channelz::v1::_SocketOptionTcpInfo_default_instance_._instance,
    &::grpc::channelz::v1::_GetTopChannelsRequest_default_instance_._instance,
    &::grpc::channelz::v1::_GetTopChannelsResponse_default_instance_._instance,
    &::grpc::channelz::v1::_GetServersRequest_default_instance_._instance,
    &::grpc::channelz::v1::_GetServersResponse_default_instance_._instance,
    &::grpc::channelz::v1::_GetServerRequest_default_instance_._instance,
    &::grpc::channelz::v1::_GetServerResponse_default_instance_._instance,
    &::grpc::channelz::v1::_GetServerSocketsRequest_default_instance_._instance,
    &::grpc::channelz::v1::_GetServerSocketsResponse_default_instance_._instance,
    &::grpc::channelz::v1::_GetChannelRequest_default_instance_._instance,
    &::grpc::channelz::v1::_GetChannelResponse_default_instance_._instance,
    &::grpc::channelz::v1::_GetSubchannelRequest_default_instance_._instance,
    &::grpc::channelz::v1::_GetSubchannelResponse_default_instance_._instance,
    &::grpc::channelz::v1::_GetSocketRequest_default_instance_._instance,
    &::grpc::channelz::v1::_GetSocketResponse_default_instance_._instance,
};
const char descriptor_table_protodef_src_2fproto_2fgrpc_2fchannelz_2fchannelz_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n&src/proto/grpc/channelz/channelz.proto"
    "\022\020grpc.channelz.v1\032\031google/protobuf/any."
    "proto\032\036google/protobuf/duration.proto\032\037g"
    "oogle/protobuf/timestamp.proto\032\036google/p"
    "rotobuf/wrappers.proto\"\376\001\n\007Channel\022)\n\003re"
    "f\030\001 \001(\0132\034.grpc.channelz.v1.ChannelRef\022+\n"
    "\004data\030\002 \001(\0132\035.grpc.channelz.v1.ChannelDa"
    "ta\0221\n\013channel_ref\030\003 \003(\0132\034.grpc.channelz."
    "v1.ChannelRef\0227\n\016subchannel_ref\030\004 \003(\0132\037."
    "grpc.channelz.v1.SubchannelRef\022/\n\nsocket"
    "_ref\030\005 \003(\0132\033.grpc.channelz.v1.SocketRef\""
    "\204\002\n\nSubchannel\022,\n\003ref\030\001 \001(\0132\037.grpc.chann"
    "elz.v1.SubchannelRef\022+\n\004data\030\002 \001(\0132\035.grp"
    "c.channelz.v1.ChannelData\0221\n\013channel_ref"
    "\030\003 \003(\0132\034.grpc.channelz.v1.ChannelRef\0227\n\016"
    "subchannel_ref\030\004 \003(\0132\037.grpc.channelz.v1."
    "SubchannelRef\022/\n\nsocket_ref\030\005 \003(\0132\033.grpc"
    ".channelz.v1.SocketRef\"\273\001\n\030ChannelConnec"
    "tivityState\022\?\n\005state\030\001 \001(\01620.grpc.channe"
    "lz.v1.ChannelConnectivityState.State\"^\n\005"
    "State\022\013\n\007UNKNOWN\020\000\022\010\n\004IDLE\020\001\022\016\n\nCONNECTI"
    "NG\020\002\022\t\n\005READY\020\003\022\025\n\021TRANSIENT_FAILURE\020\004\022\014"
    "\n\010SHUTDOWN\020\005\"\216\002\n\013ChannelData\0229\n\005state\030\001 "
    "\001(\0132*.grpc.channelz.v1.ChannelConnectivi"
    "tyState\022\016\n\006target\030\002 \001(\t\022-\n\005trace\030\003 \001(\0132\036"
    ".grpc.channelz.v1.ChannelTrace\022\025\n\rcalls_"
    "started\030\004 \001(\003\022\027\n\017calls_succeeded\030\005 \001(\003\022\024"
    "\n\014calls_failed\030\006 \001(\003\022\?\n\033last_call_starte"
    "d_timestamp\030\007 \001(\0132\032.google.protobuf.Time"
    "stamp\"\333\002\n\021ChannelTraceEvent\022\023\n\013descripti"
    "on\030\001 \001(\t\022>\n\010severity\030\002 \001(\0162,.grpc.channe"
    "lz.v1.ChannelTraceEvent.Severity\022-\n\ttime"
    "stamp\030\003 \001(\0132\032.google.protobuf.Timestamp\022"
    "3\n\013channel_ref\030\004 \001(\0132\034.grpc.channelz.v1."
    "ChannelRefH\000\0229\n\016subchannel_ref\030\005 \001(\0132\037.g"
    "rpc.channelz.v1.SubchannelRefH\000\"E\n\010Sever"
    "ity\022\016\n\nCT_UNKNOWN\020\000\022\013\n\007CT_INFO\020\001\022\016\n\nCT_W"
    "ARNING\020\002\022\014\n\010CT_ERROR\020\003B\013\n\tchild_ref\"\226\001\n\014"
    "ChannelTrace\022\031\n\021num_events_logged\030\001 \001(\003\022"
    "6\n\022creation_timestamp\030\002 \001(\0132\032.google.pro"
    "tobuf.Timestamp\0223\n\006events\030\003 \003(\0132#.grpc.c"
    "hannelz.v1.ChannelTraceEvent\"R\n\nChannelR"
    "ef\022\022\n\nchannel_id\030\001 \001(\003\022\014\n\004name\030\002 \001(\tJ\004\010\003"
    "\020\004J\004\010\004\020\005J\004\010\005\020\006J\004\010\006\020\007J\004\010\007\020\010J\004\010\010\020\t\"X\n\rSubc"
    "hannelRef\022\025\n\rsubchannel_id\030\007 \001(\003\022\014\n\004name"
    "\030\010 \001(\tJ\004\010\001\020\002J\004\010\002\020\003J\004\010\003\020\004J\004\010\004\020\005J\004\010\005\020\006J\004\010\006"
    "\020\007\"P\n\tSocketRef\022\021\n\tsocket_id\030\003 \001(\003\022\014\n\004na"
    "me\030\004 \001(\tJ\004\010\001\020\002J\004\010\002\020\003J\004\010\005\020\006J\004\010\006\020\007J\004\010\007\020\010J\004"
    "\010\010\020\t\"P\n\tServerRef\022\021\n\tserver_id\030\005 \001(\003\022\014\n\004"
    "name\030\006 \001(\tJ\004\010\001\020\002J\004\010\002\020\003J\004\010\003\020\004J\004\010\004\020\005J\004\010\007\020\010"
    "J\004\010\010\020\t\"\222\001\n\006Server\022(\n\003ref\030\001 \001(\0132\033.grpc.ch"
    "annelz.v1.ServerRef\022*\n\004data\030\002 \001(\0132\034.grpc"
    ".channelz.v1.ServerData\0222\n\rlisten_socket"
    "\030\003 \003(\0132\033.grpc.channelz.v1.SocketRef\"\302\001\n\n"
    "ServerData\022-\n\005trace\030\001 \001(\0132\036.grpc.channel"
    "z.v1.ChannelTrace\022\025\n\rcalls_started\030\002 \001(\003"
    "\022\027\n\017calls_succeeded\030\003 \001(\003\022\024\n\014calls_faile"
    "d\030\004 \001(\003\022\?\n\033last_call_started_timestamp\030\005"
    " \001(\0132\032.google.protobuf.Timestamp\"\366\001\n\006Soc"
    "ket\022(\n\003ref\030\001 \001(\0132\033.grpc.channelz.v1.Sock"
    "etRef\022*\n\004data\030\002 \001(\0132\034.grpc.channelz.v1.S"
    "ocketData\022(\n\005local\030\003 \001(\0132\031.grpc.channelz"
    ".v1.Address\022)\n\006remote\030\004 \001(\0132\031.grpc.chann"
    "elz.v1.Address\022,\n\010security\030\005 \001(\0132\032.grpc."
    "channelz.v1.Security\022\023\n\013remote_name\030\006 \001("
    "\t\"\356\004\n\nSocketData\022\027\n\017streams_started\030\001 \001("
    "\003\022\031\n\021streams_succeeded\030\002 \001(\003\022\026\n\016streams_"
    "failed\030\003 \001(\003\022\025\n\rmessages_sent\030\004 \001(\003\022\031\n\021m"
    "essages_received\030\005 \001(\003\022\030\n\020keep_alives_se"
    "nt\030\006 \001(\003\022G\n#last_local_stream_created_ti"
    "mestamp\030\007 \001(\0132\032.google.protobuf.Timestam"
    "p\022H\n$last_remote_stream_created_timestam"
    "p\030\010 \001(\0132\032.google.protobuf.Timestamp\022\?\n\033l"
    "ast_message_sent_timestamp\030\t \001(\0132\032.googl"
    "e.protobuf.Timestamp\022C\n\037last_message_rec"
    "eived_timestamp\030\n \001(\0132\032.google.protobuf."
    "Timestamp\022>\n\031local_flow_control_window\030\013"
    " \001(\0132\033.google.protobuf.Int64Value\022\?\n\032rem"
    "ote_flow_control_window\030\014 \001(\0132\033.google.p"
    "rotobuf.Int64Value\022.\n\006option\030\r \003(\0132\036.grp"
    "c.channelz.v1.SocketOption\"\350\002\n\007Address\022\?"
    "\n\rtcpip_address\030\001 \001(\0132&.grpc.channelz.v1"
    ".Address.TcpIpAddressH\000\022;\n\013uds_address\030\002"
    " \001(\0132$.grpc.channelz.v1.Address.UdsAddre"
    "ssH\000\022\?\n\rother_address\030\003 \001(\0132&.grpc.chann"
    "elz.v1.Address.OtherAddressH\000\0320\n\014TcpIpAd"
    "dress\022\022\n\nip_address\030\001 \001(\014\022\014\n\004port\030\002 \001(\005\032"
    "\036\n\nUdsAddress\022\020\n\010filename\030\001 \001(\t\032A\n\014Other"
    "Address\022\014\n\004name\030\001 \001(\t\022#\n\005value\030\002 \001(\0132\024.g"
    "oogle.protobuf.AnyB\t\n\007address\"\276\002\n\010Securi"
    "ty\022-\n\003tls\030\001 \001(\0132\036.grpc.channelz.v1.Secur"
    "ity.TlsH\000\0229\n\005other\030\002 \001(\0132(.grpc.channelz"
    ".v1.Security.OtherSecurityH\000\032{\n\003Tls\022\027\n\rs"
    "tandard_name\030\001 \001(\tH\000\022\024\n\nother_name\030\002 \001(\t"
    "H\000\022\031\n\021local_certificate\030\003 \001(\014\022\032\n\022remote_"
    "certificate\030\004 \001(\014B\016\n\014cipher_suite\032B\n\rOth"
    "erSecurity\022\014\n\004name\030\001 \001(\t\022#\n\005value\030\002 \001(\0132"
    "\024.google.protobuf.AnyB\007\n\005model\"U\n\014Socket"
    "Option\022\014\n\004name\030\001 \001(\t\022\r\n\005value\030\002 \001(\t\022(\n\na"
    "dditional\030\003 \001(\0132\024.google.protobuf.Any\"B\n"
    "\023SocketOptionTimeout\022+\n\010duration\030\001 \001(\0132\031"
    ".google.protobuf.Duration\"Q\n\022SocketOptio"
    "nLinger\022\016\n\006active\030\001 \001(\010\022+\n\010duration\030\002 \001("
    "\0132\031.google.protobuf.Duration\"\256\005\n\023SocketO"
    "ptionTcpInfo\022\022\n\ntcpi_state\030\001 \001(\r\022\025\n\rtcpi"
    "_ca_state\030\002 \001(\r\022\030\n\020tcpi_retransmits\030\003 \001("
    "\r\022\023\n\013tcpi_probes\030\004 \001(\r\022\024\n\014tcpi_backoff\030\005"
    " \001(\r\022\024\n\014tcpi_options\030\006 \001(\r\022\027\n\017tcpi_snd_w"
    "scale\030\007 \001(\r\022\027\n\017tcpi_rcv_wscale\030\010 \001(\r\022\020\n\010"
    "tcpi_rto\030\t \001(\r\022\020\n\010tcpi_ato\030\n \001(\r\022\024\n\014tcpi"
    "_snd_mss\030\013 \001(\r\022\024\n\014tcpi_rcv_mss\030\014 \001(\r\022\024\n\014"
    "tcpi_unacked\030\r \001(\r\022\023\n\013tcpi_sacked\030\016 \001(\r\022"
    "\021\n\ttcpi_lost\030\017 \001(\r\022\024\n\014tcpi_retrans\030\020 \001(\r"
    "\022\024\n\014tcpi_fackets\030\021 \001(\r\022\033\n\023tcpi_last_data"
    "_sent\030\022 \001(\r\022\032\n\022tcpi_last_ack_sent\030\023 \001(\r\022"
    "\033\n\023tcpi_last_data_recv\030\024 \001(\r\022\032\n\022tcpi_las"
    "t_ack_recv\030\025 \001(\r\022\021\n\ttcpi_pmtu\030\026 \001(\r\022\031\n\021t"
    "cpi_rcv_ssthresh\030\027 \001(\r\022\020\n\010tcpi_rtt\030\030 \001(\r"
    "\022\023\n\013tcpi_rttvar\030\031 \001(\r\022\031\n\021tcpi_snd_ssthre"
    "sh\030\032 \001(\r\022\025\n\rtcpi_snd_cwnd\030\033 \001(\r\022\023\n\013tcpi_"
    "advmss\030\034 \001(\r\022\027\n\017tcpi_reordering\030\035 \001(\r\"F\n"
    "\025GetTopChannelsRequest\022\030\n\020start_channel_"
    "id\030\001 \001(\003\022\023\n\013max_results\030\002 \001(\003\"Q\n\026GetTopC"
    "hannelsResponse\022*\n\007channel\030\001 \003(\0132\031.grpc."
    "channelz.v1.Channel\022\013\n\003end\030\002 \001(\010\"A\n\021GetS"
    "erversRequest\022\027\n\017start_server_id\030\001 \001(\003\022\023"
    "\n\013max_results\030\002 \001(\003\"K\n\022GetServersRespons"
    "e\022(\n\006server\030\001 \003(\0132\030.grpc.channelz.v1.Ser"
    "ver\022\013\n\003end\030\002 \001(\010\"%\n\020GetServerRequest\022\021\n\t"
    "server_id\030\001 \001(\003\"=\n\021GetServerResponse\022(\n\006"
    "server\030\001 \001(\0132\030.grpc.channelz.v1.Server\"Z"
    "\n\027GetServerSocketsRequest\022\021\n\tserver_id\030\001"
    " \001(\003\022\027\n\017start_socket_id\030\002 \001(\003\022\023\n\013max_res"
    "ults\030\003 \001(\003\"X\n\030GetServerSocketsResponse\022/"
    "\n\nsocket_ref\030\001 \003(\0132\033.grpc.channelz.v1.So"
    "cketRef\022\013\n\003end\030\002 \001(\010\"\'\n\021GetChannelReques"
    "t\022\022\n\nchannel_id\030\001 \001(\003\"@\n\022GetChannelRespo"
    "nse\022*\n\007channel\030\001 \001(\0132\031.grpc.channelz.v1."
    "Channel\"-\n\024GetSubchannelRequest\022\025\n\rsubch"
    "annel_id\030\001 \001(\003\"I\n\025GetSubchannelResponse\022"
    "0\n\nsubchannel\030\001 \001(\0132\034.grpc.channelz.v1.S"
    "ubchannel\"6\n\020GetSocketRequest\022\021\n\tsocket_"
    "id\030\001 \001(\003\022\017\n\007summary\030\002 \001(\010\"=\n\021GetSocketRe"
    "sponse\022(\n\006socket\030\001 \001(\0132\030.grpc.channelz.v"
    "1.Socket2\232\005\n\010Channelz\022c\n\016GetTopChannels\022"
    "\'.grpc.channelz.v1.GetTopChannelsRequest"
    "\032(.grpc.channelz.v1.GetTopChannelsRespon"
    "se\022W\n\nGetServers\022#.grpc.channelz.v1.GetS"
    "erversRequest\032$.grpc.channelz.v1.GetServ"
    "ersResponse\022T\n\tGetServer\022\".grpc.channelz"
    ".v1.GetServerRequest\032#.grpc.channelz.v1."
    "GetServerResponse\022i\n\020GetServerSockets\022)."
    "grpc.channelz.v1.GetServerSocketsRequest"
    "\032*.grpc.channelz.v1.GetServerSocketsResp"
    "onse\022W\n\nGetChannel\022#.grpc.channelz.v1.Ge"
    "tChannelRequest\032$.grpc.channelz.v1.GetCh"
    "annelResponse\022`\n\rGetSubchannel\022&.grpc.ch"
    "annelz.v1.GetSubchannelRequest\032\'.grpc.ch"
    "annelz.v1.GetSubchannelResponse\022T\n\tGetSo"
    "cket\022\".grpc.channelz.v1.GetSocketRequest"
    "\032#.grpc.channelz.v1.GetSocketResponseBX\n"
    "\023io.grpc.channelz.v1B\rChannelzProtoP\001Z0g"
    "oogle.golang.org/grpc/channelz/grpc_chan"
    "nelz_v1b\006proto3"
};
static const ::_pbi::DescriptorTable* PROTOBUF_NONNULL const
    descriptor_table_src_2fproto_2fgrpc_2fchannelz_2fchannelz_2eproto_deps[4] = {
        &::descriptor_table_google_2fprotobuf_2fany_2eproto,
        &::descriptor_table_google_2fprotobuf_2fduration_2eproto,
        &::descriptor_table_google_2fprotobuf_2ftimestamp_2eproto,
        &::descriptor_table_google_2fprotobuf_2fwrappers_2eproto,
};
static ::absl::once_flag descriptor_table_src_2fproto_2fgrpc_2fchannelz_2fchannelz_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_src_2fproto_2fgrpc_2fchannelz_2fchannelz_2eproto = {
    false,
    false,
    6535,
    descriptor_table_protodef_src_2fproto_2fgrpc_2fchannelz_2fchannelz_2eproto,
    "src/proto/grpc/channelz/channelz.proto",
    &descriptor_table_src_2fproto_2fgrpc_2fchannelz_2fchannelz_2eproto_once,
    descriptor_table_src_2fproto_2fgrpc_2fchannelz_2fchannelz_2eproto_deps,
    4,
    39,
    schemas,
    file_default_instances,
    TableStruct_src_2fproto_2fgrpc_2fchannelz_2fchannelz_2eproto::offsets,
    file_level_enum_descriptors_src_2fproto_2fgrpc_2fchannelz_2fchannelz_2eproto,
    file_level_service_descriptors_src_2fproto_2fgrpc_2fchannelz_2fchannelz_2eproto,
};
namespace grpc {
namespace channelz {
namespace v1 {
const ::google::protobuf::EnumDescriptor* PROTOBUF_NONNULL ChannelConnectivityState_State_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_src_2fproto_2fgrpc_2fchannelz_2fchannelz_2eproto);
  return file_level_enum_descriptors_src_2fproto_2fgrpc_2fchannelz_2fchannelz_2eproto[0];
}
PROTOBUF_CONSTINIT const uint32_t ChannelConnectivityState_State_internal_data_[] = {
    393216u, 0u, };
const ::google::protobuf::EnumDescriptor* PROTOBUF_NONNULL ChannelTraceEvent_Severity_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_src_2fproto_2fgrpc_2fchannelz_2fchannelz_2eproto);
  return file_level_enum_descriptors_src_2fproto_2fgrpc_2fchannelz_2fchannelz_2eproto[1];
}
PROTOBUF_CONSTINIT const uint32_t ChannelTraceEvent_Severity_internal_data_[] = {
    262144u, 0u, };
// ===================================================================

class Channel::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<Channel>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(Channel, _impl_._has_bits_);
};

Channel::Channel(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, Channel_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc.channelz.v1.Channel)
}
PROTOBUF_NDEBUG_INLINE Channel::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::grpc::channelz::v1::Channel& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        channel_ref_{visibility, arena, from.channel_ref_},
        subchannel_ref_{visibility, arena, from.subchannel_ref_},
        socket_ref_{visibility, arena, from.socket_ref_} {}

Channel::Channel(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const Channel& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, Channel_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Channel* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.ref_ = ((cached_has_bits & 0x00000001u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.ref_)
                : nullptr;
  _impl_.data_ = ((cached_has_bits & 0x00000002u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.data_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:grpc.channelz.v1.Channel)
}
PROTOBUF_NDEBUG_INLINE Channel::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        channel_ref_{visibility, arena},
        subchannel_ref_{visibility, arena},
        socket_ref_{visibility, arena} {}

inline void Channel::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, ref_),
           0,
           offsetof(Impl_, data_) -
               offsetof(Impl_, ref_) +
               sizeof(Impl_::data_));
}
Channel::~Channel() {
  // @@protoc_insertion_point(destructor:grpc.channelz.v1.Channel)
  SharedDtor(*this);
}
inline void Channel::SharedDtor(MessageLite& self) {
  Channel& this_ = static_cast<Channel&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.ref_;
  delete this_._impl_.data_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL Channel::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) Channel(arena);
}
constexpr auto Channel::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(Channel, _impl_.channel_ref_) +
          decltype(Channel::_impl_.channel_ref_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(Channel, _impl_.subchannel_ref_) +
          decltype(Channel::_impl_.subchannel_ref_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(Channel, _impl_.socket_ref_) +
          decltype(Channel::_impl_.socket_ref_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(Channel), alignof(Channel), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&Channel::PlacementNew_,
                                 sizeof(Channel),
                                 alignof(Channel));
  }
}
constexpr auto Channel::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_Channel_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &Channel::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<Channel>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &Channel::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<Channel>(), &Channel::ByteSizeLong,
              &Channel::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(Channel, _impl_._cached_size_),
          false,
      },
      &Channel::kDescriptorMethods,
      &descriptor_table_src_2fproto_2fgrpc_2fchannelz_2fchannelz_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull Channel_class_data_ =
        Channel::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
Channel::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&Channel_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(Channel_class_data_.tc_table);
  return Channel_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 5, 0, 2>
Channel::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Channel, _impl_._has_bits_),
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    5,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    Channel_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::grpc::channelz::v1::Channel>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .grpc.channelz.v1.ChannelRef ref = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(Channel, _impl_.ref_)}},
    // .grpc.channelz.v1.ChannelData data = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 1, PROTOBUF_FIELD_OFFSET(Channel, _impl_.data_)}},
    // repeated .grpc.channelz.v1.ChannelRef channel_ref = 3;
    {::_pbi::TcParser::FastMtR1,
     {26, 63, 2, PROTOBUF_FIELD_OFFSET(Channel, _impl_.channel_ref_)}},
    // repeated .grpc.channelz.v1.SubchannelRef subchannel_ref = 4;
    {::_pbi::TcParser::FastMtR1,
     {34, 63, 3, PROTOBUF_FIELD_OFFSET(Channel, _impl_.subchannel_ref_)}},
    // repeated .grpc.channelz.v1.SocketRef socket_ref = 5;
    {::_pbi::TcParser::FastMtR1,
     {42, 63, 4, PROTOBUF_FIELD_OFFSET(Channel, _impl_.socket_ref_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // .grpc.channelz.v1.ChannelRef ref = 1;
    {PROTOBUF_FIELD_OFFSET(Channel, _impl_.ref_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .grpc.channelz.v1.ChannelData data = 2;
    {PROTOBUF_FIELD_OFFSET(Channel, _impl_.data_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .grpc.channelz.v1.ChannelRef channel_ref = 3;
    {PROTOBUF_FIELD_OFFSET(Channel, _impl_.channel_ref_), -1, 2,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .grpc.channelz.v1.SubchannelRef subchannel_ref = 4;
    {PROTOBUF_FIELD_OFFSET(Channel, _impl_.subchannel_ref_), -1, 3,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .grpc.channelz.v1.SocketRef socket_ref = 5;
    {PROTOBUF_FIELD_OFFSET(Channel, _impl_.socket_ref_), -1, 4,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::grpc::channelz::v1::ChannelRef>()},
      {::_pbi::TcParser::GetTable<::grpc::channelz::v1::ChannelData>()},
      {::_pbi::TcParser::GetTable<::grpc::channelz::v1::ChannelRef>()},
      {::_pbi::TcParser::GetTable<::grpc::channelz::v1::SubchannelRef>()},
      {::_pbi::TcParser::GetTable<::grpc::channelz::v1::SocketRef>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void Channel::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc.channelz.v1.Channel)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.channel_ref_.Clear();
  _impl_.subchannel_ref_.Clear();
  _impl_.socket_ref_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      ABSL_DCHECK(_impl_.ref_ != nullptr);
      _impl_.ref_->Clear();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(_impl_.data_ != nullptr);
      _impl_.data_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL Channel::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const Channel& this_ = static_cast<const Channel&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL Channel::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const Channel& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:grpc.channelz.v1.Channel)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // .grpc.channelz.v1.ChannelRef ref = 1;
  if ((cached_has_bits & 0x00000001u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *this_._impl_.ref_, this_._impl_.ref_->GetCachedSize(), target,
        stream);
  }

  // .grpc.channelz.v1.ChannelData data = 2;
  if ((cached_has_bits & 0x00000002u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, *this_._impl_.data_, this_._impl_.data_->GetCachedSize(), target,
        stream);
  }

  // repeated .grpc.channelz.v1.ChannelRef channel_ref = 3;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this_._internal_channel_ref_size());
       i < n; i++) {
    const auto& repfield = this_._internal_channel_ref().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            3, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  // repeated .grpc.channelz.v1.SubchannelRef subchannel_ref = 4;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this_._internal_subchannel_ref_size());
       i < n; i++) {
    const auto& repfield = this_._internal_subchannel_ref().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            4, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  // repeated .grpc.channelz.v1.SocketRef socket_ref = 5;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this_._internal_socket_ref_size());
       i < n; i++) {
    const auto& repfield = this_._internal_socket_ref().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            5, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc.channelz.v1.Channel)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t Channel::ByteSizeLong(const MessageLite& base) {
  const Channel& this_ = static_cast<const Channel&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t Channel::ByteSizeLong() const {
  const Channel& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:grpc.channelz.v1.Channel)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated .grpc.channelz.v1.ChannelRef channel_ref = 3;
    {
      total_size += 1UL * this_._internal_channel_ref_size();
      for (const auto& msg : this_._internal_channel_ref()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
    // repeated .grpc.channelz.v1.SubchannelRef subchannel_ref = 4;
    {
      total_size += 1UL * this_._internal_subchannel_ref_size();
      for (const auto& msg : this_._internal_subchannel_ref()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
    // repeated .grpc.channelz.v1.SocketRef socket_ref = 5;
    {
      total_size += 1UL * this_._internal_socket_ref_size();
      for (const auto& msg : this_._internal_socket_ref()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
  }
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    // .grpc.channelz.v1.ChannelRef ref = 1;
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.ref_);
    }
    // .grpc.channelz.v1.ChannelData data = 2;
    if ((cached_has_bits & 0x00000002u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.data_);
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void Channel::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Channel*>(&to_msg);
  auto& from = static_cast<const Channel&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:grpc.channelz.v1.Channel)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_channel_ref()->MergeFrom(
      from._internal_channel_ref());
  _this->_internal_mutable_subchannel_ref()->MergeFrom(
      from._internal_subchannel_ref());
  _this->_internal_mutable_socket_ref()->MergeFrom(
      from._internal_socket_ref());
  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      ABSL_DCHECK(from._impl_.ref_ != nullptr);
      if (_this->_impl_.ref_ == nullptr) {
        _this->_impl_.ref_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.ref_);
      } else {
        _this->_impl_.ref_->MergeFrom(*from._impl_.ref_);
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(from._impl_.data_ != nullptr);
      if (_this->_impl_.data_ == nullptr) {
        _this->_impl_.data_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.data_);
      } else {
        _this->_impl_.data_->MergeFrom(*from._impl_.data_);
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Channel::CopyFrom(const Channel& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc.channelz.v1.Channel)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Channel::InternalSwap(Channel* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.channel_ref_.InternalSwap(&other->_impl_.channel_ref_);
  _impl_.subchannel_ref_.InternalSwap(&other->_impl_.subchannel_ref_);
  _impl_.socket_ref_.InternalSwap(&other->_impl_.socket_ref_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Channel, _impl_.data_)
      + sizeof(Channel::_impl_.data_)
      - PROTOBUF_FIELD_OFFSET(Channel, _impl_.ref_)>(
          reinterpret_cast<char*>(&_impl_.ref_),
          reinterpret_cast<char*>(&other->_impl_.ref_));
}

::google::protobuf::Metadata Channel::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Subchannel::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<Subchannel>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(Subchannel, _impl_._has_bits_);
};

Subchannel::Subchannel(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, Subchannel_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc.channelz.v1.Subchannel)
}
PROTOBUF_NDEBUG_INLINE Subchannel::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::grpc::channelz::v1::Subchannel& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        channel_ref_{visibility, arena, from.channel_ref_},
        subchannel_ref_{visibility, arena, from.subchannel_ref_},
        socket_ref_{visibility, arena, from.socket_ref_} {}

Subchannel::Subchannel(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const Subchannel& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, Subchannel_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Subchannel* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.ref_ = ((cached_has_bits & 0x00000001u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.ref_)
                : nullptr;
  _impl_.data_ = ((cached_has_bits & 0x00000002u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.data_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:grpc.channelz.v1.Subchannel)
}
PROTOBUF_NDEBUG_INLINE Subchannel::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        channel_ref_{visibility, arena},
        subchannel_ref_{visibility, arena},
        socket_ref_{visibility, arena} {}

inline void Subchannel::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, ref_),
           0,
           offsetof(Impl_, data_) -
               offsetof(Impl_, ref_) +
               sizeof(Impl_::data_));
}
Subchannel::~Subchannel() {
  // @@protoc_insertion_point(destructor:grpc.channelz.v1.Subchannel)
  SharedDtor(*this);
}
inline void Subchannel::SharedDtor(MessageLite& self) {
  Subchannel& this_ = static_cast<Subchannel&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.ref_;
  delete this_._impl_.data_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL Subchannel::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) Subchannel(arena);
}
constexpr auto Subchannel::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(Subchannel, _impl_.channel_ref_) +
          decltype(Subchannel::_impl_.channel_ref_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(Subchannel, _impl_.subchannel_ref_) +
          decltype(Subchannel::_impl_.subchannel_ref_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(Subchannel, _impl_.socket_ref_) +
          decltype(Subchannel::_impl_.socket_ref_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(Subchannel), alignof(Subchannel), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&Subchannel::PlacementNew_,
                                 sizeof(Subchannel),
                                 alignof(Subchannel));
  }
}
constexpr auto Subchannel::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_Subchannel_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &Subchannel::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<Subchannel>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &Subchannel::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<Subchannel>(), &Subchannel::ByteSizeLong,
              &Subchannel::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(Subchannel, _impl_._cached_size_),
          false,
      },
      &Subchannel::kDescriptorMethods,
      &descriptor_table_src_2fproto_2fgrpc_2fchannelz_2fchannelz_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull Subchannel_class_data_ =
        Subchannel::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
Subchannel::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&Subchannel_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(Subchannel_class_data_.tc_table);
  return Subchannel_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 5, 0, 2>
Subchannel::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Subchannel, _impl_._has_bits_),
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    5,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    Subchannel_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::grpc::channelz::v1::Subchannel>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .grpc.channelz.v1.SubchannelRef ref = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(Subchannel, _impl_.ref_)}},
    // .grpc.channelz.v1.ChannelData data = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 1, PROTOBUF_FIELD_OFFSET(Subchannel, _impl_.data_)}},
    // repeated .grpc.channelz.v1.ChannelRef channel_ref = 3;
    {::_pbi::TcParser::FastMtR1,
     {26, 63, 2, PROTOBUF_FIELD_OFFSET(Subchannel, _impl_.channel_ref_)}},
    // repeated .grpc.channelz.v1.SubchannelRef subchannel_ref = 4;
    {::_pbi::TcParser::FastMtR1,
     {34, 63, 3, PROTOBUF_FIELD_OFFSET(Subchannel, _impl_.subchannel_ref_)}},
    // repeated .grpc.channelz.v1.SocketRef socket_ref = 5;
    {::_pbi::TcParser::FastMtR1,
     {42, 63, 4, PROTOBUF_FIELD_OFFSET(Subchannel, _impl_.socket_ref_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // .grpc.channelz.v1.SubchannelRef ref = 1;
    {PROTOBUF_FIELD_OFFSET(Subchannel, _impl_.ref_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .grpc.channelz.v1.ChannelData data = 2;
    {PROTOBUF_FIELD_OFFSET(Subchannel, _impl_.data_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .grpc.channelz.v1.ChannelRef channel_ref = 3;
    {PROTOBUF_FIELD_OFFSET(Subchannel, _impl_.channel_ref_), -1, 2,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .grpc.channelz.v1.SubchannelRef subchannel_ref = 4;
    {PROTOBUF_FIELD_OFFSET(Subchannel, _impl_.subchannel_ref_), -1, 3,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .grpc.channelz.v1.SocketRef socket_ref = 5;
    {PROTOBUF_FIELD_OFFSET(Subchannel, _impl_.socket_ref_), -1, 4,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::grpc::channelz::v1::SubchannelRef>()},
      {::_pbi::TcParser::GetTable<::grpc::channelz::v1::ChannelData>()},
      {::_pbi::TcParser::GetTable<::grpc::channelz::v1::ChannelRef>()},
      {::_pbi::TcParser::GetTable<::grpc::channelz::v1::SubchannelRef>()},
      {::_pbi::TcParser::GetTable<::grpc::channelz::v1::SocketRef>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void Subchannel::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc.channelz.v1.Subchannel)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.channel_ref_.Clear();
  _impl_.subchannel_ref_.Clear();
  _impl_.socket_ref_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      ABSL_DCHECK(_impl_.ref_ != nullptr);
      _impl_.ref_->Clear();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(_impl_.data_ != nullptr);
      _impl_.data_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL Subchannel::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const Subchannel& this_ = static_cast<const Subchannel&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL Subchannel::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const Subchannel& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:grpc.channelz.v1.Subchannel)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // .grpc.channelz.v1.SubchannelRef ref = 1;
  if ((cached_has_bits & 0x00000001u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *this_._impl_.ref_, this_._impl_.ref_->GetCachedSize(), target,
        stream);
  }

  // .grpc.channelz.v1.ChannelData data = 2;
  if ((cached_has_bits & 0x00000002u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, *this_._impl_.data_, this_._impl_.data_->GetCachedSize(), target,
        stream);
  }

  // repeated .grpc.channelz.v1.ChannelRef channel_ref = 3;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this_._internal_channel_ref_size());
       i < n; i++) {
    const auto& repfield = this_._internal_channel_ref().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            3, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  // repeated .grpc.channelz.v1.SubchannelRef subchannel_ref = 4;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this_._internal_subchannel_ref_size());
       i < n; i++) {
    const auto& repfield = this_._internal_subchannel_ref().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            4, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  // repeated .grpc.channelz.v1.SocketRef socket_ref = 5;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this_._internal_socket_ref_size());
       i < n; i++) {
    const auto& repfield = this_._internal_socket_ref().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            5, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc.channelz.v1.Subchannel)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t Subchannel::ByteSizeLong(const MessageLite& base) {
  const Subchannel& this_ = static_cast<const Subchannel&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t Subchannel::ByteSizeLong() const {
  const Subchannel& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:grpc.channelz.v1.Subchannel)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated .grpc.channelz.v1.ChannelRef channel_ref = 3;
    {
      total_size += 1UL * this_._internal_channel_ref_size();
      for (const auto& msg : this_._internal_channel_ref()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
    // repeated .grpc.channelz.v1.SubchannelRef subchannel_ref = 4;
    {
      total_size += 1UL * this_._internal_subchannel_ref_size();
      for (const auto& msg : this_._internal_subchannel_ref()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
    // repeated .grpc.channelz.v1.SocketRef socket_ref = 5;
    {
      total_size += 1UL * this_._internal_socket_ref_size();
      for (const auto& msg : this_._internal_socket_ref()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
  }
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    // .grpc.channelz.v1.SubchannelRef ref = 1;
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.ref_);
    }
    // .grpc.channelz.v1.ChannelData data = 2;
    if ((cached_has_bits & 0x00000002u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.data_);
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void Subchannel::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Subchannel*>(&to_msg);
  auto& from = static_cast<const Subchannel&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:grpc.channelz.v1.Subchannel)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_channel_ref()->MergeFrom(
      from._internal_channel_ref());
  _this->_internal_mutable_subchannel_ref()->MergeFrom(
      from._internal_subchannel_ref());
  _this->_internal_mutable_socket_ref()->MergeFrom(
      from._internal_socket_ref());
  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      ABSL_DCHECK(from._impl_.ref_ != nullptr);
      if (_this->_impl_.ref_ == nullptr) {
        _this->_impl_.ref_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.ref_);
      } else {
        _this->_impl_.ref_->MergeFrom(*from._impl_.ref_);
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(from._impl_.data_ != nullptr);
      if (_this->_impl_.data_ == nullptr) {
        _this->_impl_.data_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.data_);
      } else {
        _this->_impl_.data_->MergeFrom(*from._impl_.data_);
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Subchannel::CopyFrom(const Subchannel& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc.channelz.v1.Subchannel)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Subchannel::InternalSwap(Subchannel* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.channel_ref_.InternalSwap(&other->_impl_.channel_ref_);
  _impl_.subchannel_ref_.InternalSwap(&other->_impl_.subchannel_ref_);
  _impl_.socket_ref_.InternalSwap(&other->_impl_.socket_ref_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Subchannel, _impl_.data_)
      + sizeof(Subchannel::_impl_.data_)
      - PROTOBUF_FIELD_OFFSET(Subchannel, _impl_.ref_)>(
          reinterpret_cast<char*>(&_impl_.ref_),
          reinterpret_cast<char*>(&other->_impl_.ref_));
}

::google::protobuf::Metadata Subchannel::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class ChannelConnectivityState::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<ChannelConnectivityState>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(ChannelConnectivityState, _impl_._has_bits_);
};

ChannelConnectivityState::ChannelConnectivityState(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, ChannelConnectivityState_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc.channelz.v1.ChannelConnectivityState)
}
ChannelConnectivityState::ChannelConnectivityState(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const ChannelConnectivityState& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, ChannelConnectivityState_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
}
PROTOBUF_NDEBUG_INLINE ChannelConnectivityState::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void ChannelConnectivityState::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.state_ = {};
}
ChannelConnectivityState::~ChannelConnectivityState() {
  // @@protoc_insertion_point(destructor:grpc.channelz.v1.ChannelConnectivityState)
  SharedDtor(*this);
}
inline void ChannelConnectivityState::SharedDtor(MessageLite& self) {
  ChannelConnectivityState& this_ = static_cast<ChannelConnectivityState&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL ChannelConnectivityState::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) ChannelConnectivityState(arena);
}
constexpr auto ChannelConnectivityState::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(ChannelConnectivityState),
                                            alignof(ChannelConnectivityState));
}
constexpr auto ChannelConnectivityState::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_ChannelConnectivityState_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &ChannelConnectivityState::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<ChannelConnectivityState>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &ChannelConnectivityState::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<ChannelConnectivityState>(), &ChannelConnectivityState::ByteSizeLong,
              &ChannelConnectivityState::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(ChannelConnectivityState, _impl_._cached_size_),
          false,
      },
      &ChannelConnectivityState::kDescriptorMethods,
      &descriptor_table_src_2fproto_2fgrpc_2fchannelz_2fchannelz_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull ChannelConnectivityState_class_data_ =
        ChannelConnectivityState::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
ChannelConnectivityState::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&ChannelConnectivityState_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(ChannelConnectivityState_class_data_.tc_table);
  return ChannelConnectivityState_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2>
ChannelConnectivityState::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ChannelConnectivityState, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    ChannelConnectivityState_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::grpc::channelz::v1::ChannelConnectivityState>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .grpc.channelz.v1.ChannelConnectivityState.State state = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ChannelConnectivityState, _impl_.state_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(ChannelConnectivityState, _impl_.state_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .grpc.channelz.v1.ChannelConnectivityState.State state = 1;
    {PROTOBUF_FIELD_OFFSET(ChannelConnectivityState, _impl_.state_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kOpenEnum)},
  }},
  // no aux_entries
  {{
  }},
};
PROTOBUF_NOINLINE void ChannelConnectivityState::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc.channelz.v1.ChannelConnectivityState)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.state_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL ChannelConnectivityState::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const ChannelConnectivityState& this_ = static_cast<const ChannelConnectivityState&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL ChannelConnectivityState::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const ChannelConnectivityState& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:grpc.channelz.v1.ChannelConnectivityState)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // .grpc.channelz.v1.ChannelConnectivityState.State state = 1;
  if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (this_._internal_state() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteEnumToArray(
          1, this_._internal_state(), target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc.channelz.v1.ChannelConnectivityState)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t ChannelConnectivityState::ByteSizeLong(const MessageLite& base) {
  const ChannelConnectivityState& this_ = static_cast<const ChannelConnectivityState&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t ChannelConnectivityState::ByteSizeLong() const {
  const ChannelConnectivityState& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:grpc.channelz.v1.ChannelConnectivityState)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

   {
    // .grpc.channelz.v1.ChannelConnectivityState.State state = 1;
    cached_has_bits = this_._impl_._has_bits_[0];
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (this_._internal_state() != 0) {
        total_size += 1 +
                      ::_pbi::WireFormatLite::EnumSize(this_._internal_state());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void ChannelConnectivityState::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ChannelConnectivityState*>(&to_msg);
  auto& from = static_cast<const ChannelConnectivityState&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:grpc.channelz.v1.ChannelConnectivityState)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    if (from._internal_state() != 0) {
      _this->_impl_.state_ = from._impl_.state_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ChannelConnectivityState::CopyFrom(const ChannelConnectivityState& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc.channelz.v1.ChannelConnectivityState)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ChannelConnectivityState::InternalSwap(ChannelConnectivityState* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.state_, other->_impl_.state_);
}

::google::protobuf::Metadata ChannelConnectivityState::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class ChannelData::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<ChannelData>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(ChannelData, _impl_._has_bits_);
};

void ChannelData::clear_last_call_started_timestamp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.last_call_started_timestamp_ != nullptr) _impl_.last_call_started_timestamp_->Clear();
  _impl_._has_bits_[0] &= ~0x00000008u;
}
ChannelData::ChannelData(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, ChannelData_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc.channelz.v1.ChannelData)
}
PROTOBUF_NDEBUG_INLINE ChannelData::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::grpc::channelz::v1::ChannelData& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        target_(arena, from.target_) {}

ChannelData::ChannelData(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const ChannelData& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, ChannelData_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  ChannelData* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.state_ = ((cached_has_bits & 0x00000002u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.state_)
                : nullptr;
  _impl_.trace_ = ((cached_has_bits & 0x00000004u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.trace_)
                : nullptr;
  _impl_.last_call_started_timestamp_ = ((cached_has_bits & 0x00000008u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.last_call_started_timestamp_)
                : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, calls_started_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, calls_started_),
           offsetof(Impl_, calls_failed_) -
               offsetof(Impl_, calls_started_) +
               sizeof(Impl_::calls_failed_));

  // @@protoc_insertion_point(copy_constructor:grpc.channelz.v1.ChannelData)
}
PROTOBUF_NDEBUG_INLINE ChannelData::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        target_(arena) {}

inline void ChannelData::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, state_),
           0,
           offsetof(Impl_, calls_failed_) -
               offsetof(Impl_, state_) +
               sizeof(Impl_::calls_failed_));
}
ChannelData::~ChannelData() {
  // @@protoc_insertion_point(destructor:grpc.channelz.v1.ChannelData)
  SharedDtor(*this);
}
inline void ChannelData::SharedDtor(MessageLite& self) {
  ChannelData& this_ = static_cast<ChannelData&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.target_.Destroy();
  delete this_._impl_.state_;
  delete this_._impl_.trace_;
  delete this_._impl_.last_call_started_timestamp_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL ChannelData::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) ChannelData(arena);
}
constexpr auto ChannelData::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(ChannelData),
                                            alignof(ChannelData));
}
constexpr auto ChannelData::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_ChannelData_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &ChannelData::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<ChannelData>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &ChannelData::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<ChannelData>(), &ChannelData::ByteSizeLong,
              &ChannelData::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(ChannelData, _impl_._cached_size_),
          false,
      },
      &ChannelData::kDescriptorMethods,
      &descriptor_table_src_2fproto_2fgrpc_2fchannelz_2fchannelz_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull ChannelData_class_data_ =
        ChannelData::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
ChannelData::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&ChannelData_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(ChannelData_class_data_.tc_table);
  return ChannelData_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 7, 3, 43, 2>
ChannelData::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ChannelData, _impl_._has_bits_),
    0, // no _extensions_
    7, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967168,  // skipmap
    offsetof(decltype(_table_), field_entries),
    7,  // num_field_entries
    3,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    ChannelData_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::grpc::channelz::v1::ChannelData>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .grpc.channelz.v1.ChannelConnectivityState state = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 1, 0, PROTOBUF_FIELD_OFFSET(ChannelData, _impl_.state_)}},
    // string target = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(ChannelData, _impl_.target_)}},
    // .grpc.channelz.v1.ChannelTrace trace = 3;
    {::_pbi::TcParser::FastMtS1,
     {26, 2, 1, PROTOBUF_FIELD_OFFSET(ChannelData, _impl_.trace_)}},
    // int64 calls_started = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(ChannelData, _impl_.calls_started_), 4>(),
     {32, 4, 0, PROTOBUF_FIELD_OFFSET(ChannelData, _impl_.calls_started_)}},
    // int64 calls_succeeded = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(ChannelData, _impl_.calls_succeeded_), 5>(),
     {40, 5, 0, PROTOBUF_FIELD_OFFSET(ChannelData, _impl_.calls_succeeded_)}},
    // int64 calls_failed = 6;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(ChannelData, _impl_.calls_failed_), 6>(),
     {48, 6, 0, PROTOBUF_FIELD_OFFSET(ChannelData, _impl_.calls_failed_)}},
    // .google.protobuf.Timestamp last_call_started_timestamp = 7;
    {::_pbi::TcParser::FastMtS1,
     {58, 3, 2, PROTOBUF_FIELD_OFFSET(ChannelData, _impl_.last_call_started_timestamp_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .grpc.channelz.v1.ChannelConnectivityState state = 1;
    {PROTOBUF_FIELD_OFFSET(ChannelData, _impl_.state_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // string target = 2;
    {PROTOBUF_FIELD_OFFSET(ChannelData, _impl_.target_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .grpc.channelz.v1.ChannelTrace trace = 3;
    {PROTOBUF_FIELD_OFFSET(ChannelData, _impl_.trace_), _Internal::kHasBitsOffset + 2, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // int64 calls_started = 4;
    {PROTOBUF_FIELD_OFFSET(ChannelData, _impl_.calls_started_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
    // int64 calls_succeeded = 5;
    {PROTOBUF_FIELD_OFFSET(ChannelData, _impl_.calls_succeeded_), _Internal::kHasBitsOffset + 5, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
    // int64 calls_failed = 6;
    {PROTOBUF_FIELD_OFFSET(ChannelData, _impl_.calls_failed_), _Internal::kHasBitsOffset + 6, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
    // .google.protobuf.Timestamp last_call_started_timestamp = 7;
    {PROTOBUF_FIELD_OFFSET(ChannelData, _impl_.last_call_started_timestamp_), _Internal::kHasBitsOffset + 3, 2,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::grpc::channelz::v1::ChannelConnectivityState>()},
      {::_pbi::TcParser::GetTable<::grpc::channelz::v1::ChannelTrace>()},
      {::_pbi::TcParser::GetTable<::google::protobuf::Timestamp>()},
  }},
  {{
    "\34\0\6\0\0\0\0\0"
    "grpc.channelz.v1.ChannelData"
    "target"
  }},
};
PROTOBUF_NOINLINE void ChannelData::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc.channelz.v1.ChannelData)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _impl_.target_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(_impl_.state_ != nullptr);
      _impl_.state_->Clear();
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      ABSL_DCHECK(_impl_.trace_ != nullptr);
      _impl_.trace_->Clear();
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      ABSL_DCHECK(_impl_.last_call_started_timestamp_ != nullptr);
      _impl_.last_call_started_timestamp_->Clear();
    }
  }
  if ((cached_has_bits & 0x00000070u) != 0) {
    ::memset(&_impl_.calls_started_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.calls_failed_) -
        reinterpret_cast<char*>(&_impl_.calls_started_)) + sizeof(_impl_.calls_failed_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL ChannelData::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const ChannelData& this_ = static_cast<const ChannelData&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL ChannelData::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const ChannelData& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:grpc.channelz.v1.ChannelData)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // .grpc.channelz.v1.ChannelConnectivityState state = 1;
  if ((cached_has_bits & 0x00000002u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *this_._impl_.state_, this_._impl_.state_->GetCachedSize(), target,
        stream);
  }

  // string target = 2;
  if ((cached_has_bits & 0x00000001u) != 0) {
    if (!this_._internal_target().empty()) {
      const ::std::string& _s = this_._internal_target();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "grpc.channelz.v1.ChannelData.target");
      target = stream->WriteStringMaybeAliased(2, _s, target);
    }
  }

  // .grpc.channelz.v1.ChannelTrace trace = 3;
  if ((cached_has_bits & 0x00000004u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        3, *this_._impl_.trace_, this_._impl_.trace_->GetCachedSize(), target,
        stream);
  }

  // int64 calls_started = 4;
  if ((cached_has_bits & 0x00000010u) != 0) {
    if (this_._internal_calls_started() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt64ToArrayWithField<4>(
              stream, this_._internal_calls_started(), target);
    }
  }

  // int64 calls_succeeded = 5;
  if ((cached_has_bits & 0x00000020u) != 0) {
    if (this_._internal_calls_succeeded() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt64ToArrayWithField<5>(
              stream, this_._internal_calls_succeeded(), target);
    }
  }

  // int64 calls_failed = 6;
  if ((cached_has_bits & 0x00000040u) != 0) {
    if (this_._internal_calls_failed() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt64ToArrayWithField<6>(
              stream, this_._internal_calls_failed(), target);
    }
  }

  // .google.protobuf.Timestamp last_call_started_timestamp = 7;
  if ((cached_has_bits & 0x00000008u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        7, *this_._impl_.last_call_started_timestamp_, this_._impl_.last_call_started_timestamp_->GetCachedSize(), target,
        stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc.channelz.v1.ChannelData)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t ChannelData::ByteSizeLong(const MessageLite& base) {
  const ChannelData& this_ = static_cast<const ChannelData&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t ChannelData::ByteSizeLong() const {
  const ChannelData& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:grpc.channelz.v1.ChannelData)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000007fu) != 0) {
    // string target = 2;
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!this_._internal_target().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_target());
      }
    }
    // .grpc.channelz.v1.ChannelConnectivityState state = 1;
    if ((cached_has_bits & 0x00000002u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.state_);
    }
    // .grpc.channelz.v1.ChannelTrace trace = 3;
    if ((cached_has_bits & 0x00000004u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.trace_);
    }
    // .google.protobuf.Timestamp last_call_started_timestamp = 7;
    if ((cached_has_bits & 0x00000008u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.last_call_started_timestamp_);
    }
    // int64 calls_started = 4;
    if ((cached_has_bits & 0x00000010u) != 0) {
      if (this_._internal_calls_started() != 0) {
        total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
            this_._internal_calls_started());
      }
    }
    // int64 calls_succeeded = 5;
    if ((cached_has_bits & 0x00000020u) != 0) {
      if (this_._internal_calls_succeeded() != 0) {
        total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
            this_._internal_calls_succeeded());
      }
    }
    // int64 calls_failed = 6;
    if ((cached_has_bits & 0x00000040u) != 0) {
      if (this_._internal_calls_failed() != 0) {
        total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
            this_._internal_calls_failed());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void ChannelData::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ChannelData*>(&to_msg);
  auto& from = static_cast<const ChannelData&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:grpc.channelz.v1.ChannelData)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000007fu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!from._internal_target().empty()) {
        _this->_internal_set_target(from._internal_target());
      } else {
        if (_this->_impl_.target_.IsDefault()) {
          _this->_internal_set_target("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(from._impl_.state_ != nullptr);
      if (_this->_impl_.state_ == nullptr) {
        _this->_impl_.state_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.state_);
      } else {
        _this->_impl_.state_->MergeFrom(*from._impl_.state_);
      }
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      ABSL_DCHECK(from._impl_.trace_ != nullptr);
      if (_this->_impl_.trace_ == nullptr) {
        _this->_impl_.trace_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.trace_);
      } else {
        _this->_impl_.trace_->MergeFrom(*from._impl_.trace_);
      }
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      ABSL_DCHECK(from._impl_.last_call_started_timestamp_ != nullptr);
      if (_this->_impl_.last_call_started_timestamp_ == nullptr) {
        _this->_impl_.last_call_started_timestamp_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.last_call_started_timestamp_);
      } else {
        _this->_impl_.last_call_started_timestamp_->MergeFrom(*from._impl_.last_call_started_timestamp_);
      }
    }
    if ((cached_has_bits & 0x00000010u) != 0) {
      if (from._internal_calls_started() != 0) {
        _this->_impl_.calls_started_ = from._impl_.calls_started_;
      }
    }
    if ((cached_has_bits & 0x00000020u) != 0) {
      if (from._internal_calls_succeeded() != 0) {
        _this->_impl_.calls_succeeded_ = from._impl_.calls_succeeded_;
      }
    }
    if ((cached_has_bits & 0x00000040u) != 0) {
      if (from._internal_calls_failed() != 0) {
        _this->_impl_.calls_failed_ = from._impl_.calls_failed_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ChannelData::CopyFrom(const ChannelData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc.channelz.v1.ChannelData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ChannelData::InternalSwap(ChannelData* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.target_, &other->_impl_.target_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ChannelData, _impl_.calls_failed_)
      + sizeof(ChannelData::_impl_.calls_failed_)
      - PROTOBUF_FIELD_OFFSET(ChannelData, _impl_.state_)>(
          reinterpret_cast<char*>(&_impl_.state_),
          reinterpret_cast<char*>(&other->_impl_.state_));
}

::google::protobuf::Metadata ChannelData::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class ChannelTraceEvent::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<ChannelTraceEvent>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(ChannelTraceEvent, _impl_._has_bits_);
  static constexpr ::int32_t kOneofCaseOffset =
      PROTOBUF_FIELD_OFFSET(::grpc::channelz::v1::ChannelTraceEvent, _impl_._oneof_case_);
};

void ChannelTraceEvent::clear_timestamp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.timestamp_ != nullptr) _impl_.timestamp_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
void ChannelTraceEvent::set_allocated_channel_ref(::grpc::channelz::v1::ChannelRef* PROTOBUF_NULLABLE channel_ref) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_child_ref();
  if (channel_ref) {
    ::google::protobuf::Arena* submessage_arena = channel_ref->GetArena();
    if (message_arena != submessage_arena) {
      channel_ref = ::google::protobuf::internal::GetOwnedMessage(message_arena, channel_ref, submessage_arena);
    }
    set_has_channel_ref();
    _impl_.child_ref_.channel_ref_ = channel_ref;
  }
  // @@protoc_insertion_point(field_set_allocated:grpc.channelz.v1.ChannelTraceEvent.channel_ref)
}
void ChannelTraceEvent::set_allocated_subchannel_ref(::grpc::channelz::v1::SubchannelRef* PROTOBUF_NULLABLE subchannel_ref) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_child_ref();
  if (subchannel_ref) {
    ::google::protobuf::Arena* submessage_arena = subchannel_ref->GetArena();
    if (message_arena != submessage_arena) {
      subchannel_ref = ::google::protobuf::internal::GetOwnedMessage(message_arena, subchannel_ref, submessage_arena);
    }
    set_has_subchannel_ref();
    _impl_.child_ref_.subchannel_ref_ = subchannel_ref;
  }
  // @@protoc_insertion_point(field_set_allocated:grpc.channelz.v1.ChannelTraceEvent.subchannel_ref)
}
ChannelTraceEvent::ChannelTraceEvent(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, ChannelTraceEvent_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc.channelz.v1.ChannelTraceEvent)
}
PROTOBUF_NDEBUG_INLINE ChannelTraceEvent::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::grpc::channelz::v1::ChannelTraceEvent& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        description_(arena, from.description_),
        child_ref_{},
        _oneof_case_{from._oneof_case_[0]} {}

ChannelTraceEvent::ChannelTraceEvent(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const ChannelTraceEvent& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, ChannelTraceEvent_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  ChannelTraceEvent* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.timestamp_ = ((cached_has_bits & 0x00000002u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.timestamp_)
                : nullptr;
  _impl_.severity_ = from._impl_.severity_;
  switch (child_ref_case()) {
    case CHILD_REF_NOT_SET:
      break;
      case kChannelRef:
        _impl_.child_ref_.channel_ref_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.child_ref_.channel_ref_);
        break;
      case kSubchannelRef:
        _impl_.child_ref_.subchannel_ref_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.child_ref_.subchannel_ref_);
        break;
  }

  // @@protoc_insertion_point(copy_constructor:grpc.channelz.v1.ChannelTraceEvent)
}
PROTOBUF_NDEBUG_INLINE ChannelTraceEvent::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        description_(arena),
        child_ref_{},
        _oneof_case_{} {}

inline void ChannelTraceEvent::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, timestamp_),
           0,
           offsetof(Impl_, severity_) -
               offsetof(Impl_, timestamp_) +
               sizeof(Impl_::severity_));
}
ChannelTraceEvent::~ChannelTraceEvent() {
  // @@protoc_insertion_point(destructor:grpc.channelz.v1.ChannelTraceEvent)
  SharedDtor(*this);
}
inline void ChannelTraceEvent::SharedDtor(MessageLite& self) {
  ChannelTraceEvent& this_ = static_cast<ChannelTraceEvent&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.description_.Destroy();
  delete this_._impl_.timestamp_;
  if (this_.has_child_ref()) {
    this_.clear_child_ref();
  }
  this_._impl_.~Impl_();
}

void ChannelTraceEvent::clear_child_ref() {
// @@protoc_insertion_point(one_of_clear_start:grpc.channelz.v1.ChannelTraceEvent)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  switch (child_ref_case()) {
    case kChannelRef: {
      if (GetArena() == nullptr) {
        delete _impl_.child_ref_.channel_ref_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.child_ref_.channel_ref_);
      }
      break;
    }
    case kSubchannelRef: {
      if (GetArena() == nullptr) {
        delete _impl_.child_ref_.subchannel_ref_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.child_ref_.subchannel_ref_);
      }
      break;
    }
    case CHILD_REF_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = CHILD_REF_NOT_SET;
}


inline void* PROTOBUF_NONNULL ChannelTraceEvent::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) ChannelTraceEvent(arena);
}
constexpr auto ChannelTraceEvent::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(ChannelTraceEvent),
                                            alignof(ChannelTraceEvent));
}
constexpr auto ChannelTraceEvent::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_ChannelTraceEvent_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &ChannelTraceEvent::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<ChannelTraceEvent>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &ChannelTraceEvent::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<ChannelTraceEvent>(), &ChannelTraceEvent::ByteSizeLong,
              &ChannelTraceEvent::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(ChannelTraceEvent, _impl_._cached_size_),
          false,
      },
      &ChannelTraceEvent::kDescriptorMethods,
      &descriptor_table_src_2fproto_2fgrpc_2fchannelz_2fchannelz_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull ChannelTraceEvent_class_data_ =
        ChannelTraceEvent::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
ChannelTraceEvent::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&ChannelTraceEvent_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(ChannelTraceEvent_class_data_.tc_table);
  return ChannelTraceEvent_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 5, 3, 54, 2>
ChannelTraceEvent::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ChannelTraceEvent, _impl_._has_bits_),
    0, // no _extensions_
    5, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    3,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    ChannelTraceEvent_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::grpc::channelz::v1::ChannelTraceEvent>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string description = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(ChannelTraceEvent, _impl_.description_)}},
    // .grpc.channelz.v1.ChannelTraceEvent.Severity severity = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ChannelTraceEvent, _impl_.severity_), 2>(),
     {16, 2, 0, PROTOBUF_FIELD_OFFSET(ChannelTraceEvent, _impl_.severity_)}},
    // .google.protobuf.Timestamp timestamp = 3;
    {::_pbi::TcParser::FastMtS1,
     {26, 1, 0, PROTOBUF_FIELD_OFFSET(ChannelTraceEvent, _impl_.timestamp_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string description = 1;
    {PROTOBUF_FIELD_OFFSET(ChannelTraceEvent, _impl_.description_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .grpc.channelz.v1.ChannelTraceEvent.Severity severity = 2;
    {PROTOBUF_FIELD_OFFSET(ChannelTraceEvent, _impl_.severity_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kOpenEnum)},
    // .google.protobuf.Timestamp timestamp = 3;
    {PROTOBUF_FIELD_OFFSET(ChannelTraceEvent, _impl_.timestamp_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .grpc.channelz.v1.ChannelRef channel_ref = 4;
    {PROTOBUF_FIELD_OFFSET(ChannelTraceEvent, _impl_.child_ref_.channel_ref_), _Internal::kOneofCaseOffset + 0, 1,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .grpc.channelz.v1.SubchannelRef subchannel_ref = 5;
    {PROTOBUF_FIELD_OFFSET(ChannelTraceEvent, _impl_.child_ref_.subchannel_ref_), _Internal::kOneofCaseOffset + 0, 2,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::google::protobuf::Timestamp>()},
      {::_pbi::TcParser::GetTable<::grpc::channelz::v1::ChannelRef>()},
      {::_pbi::TcParser::GetTable<::grpc::channelz::v1::SubchannelRef>()},
  }},
  {{
    "\42\13\0\0\0\0\0\0"
    "grpc.channelz.v1.ChannelTraceEvent"
    "description"
  }},
};
PROTOBUF_NOINLINE void ChannelTraceEvent::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc.channelz.v1.ChannelTraceEvent)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _impl_.description_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(_impl_.timestamp_ != nullptr);
      _impl_.timestamp_->Clear();
    }
  }
  _impl_.severity_ = 0;
  clear_child_ref();
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL ChannelTraceEvent::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const ChannelTraceEvent& this_ = static_cast<const ChannelTraceEvent&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL ChannelTraceEvent::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const ChannelTraceEvent& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:grpc.channelz.v1.ChannelTraceEvent)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string description = 1;
  if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (!this_._internal_description().empty()) {
      const ::std::string& _s = this_._internal_description();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "grpc.channelz.v1.ChannelTraceEvent.description");
      target = stream->WriteStringMaybeAliased(1, _s, target);
    }
  }

  // .grpc.channelz.v1.ChannelTraceEvent.Severity severity = 2;
  if ((this_._impl_._has_bits_[0] & 0x00000004u) != 0) {
    if (this_._internal_severity() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteEnumToArray(
          2, this_._internal_severity(), target);
    }
  }

  cached_has_bits = this_._impl_._has_bits_[0];
  // .google.protobuf.Timestamp timestamp = 3;
  if ((cached_has_bits & 0x00000002u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        3, *this_._impl_.timestamp_, this_._impl_.timestamp_->GetCachedSize(), target,
        stream);
  }

  switch (this_.child_ref_case()) {
    case kChannelRef: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          4, *this_._impl_.child_ref_.channel_ref_, this_._impl_.child_ref_.channel_ref_->GetCachedSize(), target,
          stream);
      break;
    }
    case kSubchannelRef: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          5, *this_._impl_.child_ref_.subchannel_ref_, this_._impl_.child_ref_.subchannel_ref_->GetCachedSize(), target,
          stream);
      break;
    }
    default:
      break;
  }
  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc.channelz.v1.ChannelTraceEvent)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t ChannelTraceEvent::ByteSizeLong(const MessageLite& base) {
  const ChannelTraceEvent& this_ = static_cast<const ChannelTraceEvent&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t ChannelTraceEvent::ByteSizeLong() const {
  const ChannelTraceEvent& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:grpc.channelz.v1.ChannelTraceEvent)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    // string description = 1;
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!this_._internal_description().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_description());
      }
    }
    // .google.protobuf.Timestamp timestamp = 3;
    if ((cached_has_bits & 0x00000002u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.timestamp_);
    }
    // .grpc.channelz.v1.ChannelTraceEvent.Severity severity = 2;
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (this_._internal_severity() != 0) {
        total_size += 1 +
                      ::_pbi::WireFormatLite::EnumSize(this_._internal_severity());
      }
    }
  }
  switch (this_.child_ref_case()) {
    // .grpc.channelz.v1.ChannelRef channel_ref = 4;
    case kChannelRef: {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.child_ref_.channel_ref_);
      break;
    }
    // .grpc.channelz.v1.SubchannelRef subchannel_ref = 5;
    case kSubchannelRef: {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.child_ref_.subchannel_ref_);
      break;
    }
    case CHILD_REF_NOT_SET: {
      break;
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void ChannelTraceEvent::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ChannelTraceEvent*>(&to_msg);
  auto& from = static_cast<const ChannelTraceEvent&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:grpc.channelz.v1.ChannelTraceEvent)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!from._internal_description().empty()) {
        _this->_internal_set_description(from._internal_description());
      } else {
        if (_this->_impl_.description_.IsDefault()) {
          _this->_internal_set_description("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(from._impl_.timestamp_ != nullptr);
      if (_this->_impl_.timestamp_ == nullptr) {
        _this->_impl_.timestamp_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.timestamp_);
      } else {
        _this->_impl_.timestamp_->MergeFrom(*from._impl_.timestamp_);
      }
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (from._internal_severity() != 0) {
        _this->_impl_.severity_ = from._impl_.severity_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  if (const uint32_t oneof_from_case = from._impl_._oneof_case_[0]) {
    const uint32_t oneof_to_case = _this->_impl_._oneof_case_[0];
    const bool oneof_needs_init = oneof_to_case != oneof_from_case;
    if (oneof_needs_init) {
      if (oneof_to_case != 0) {
        _this->clear_child_ref();
      }
      _this->_impl_._oneof_case_[0] = oneof_from_case;
    }

    switch (oneof_from_case) {
      case kChannelRef: {
        if (oneof_needs_init) {
          _this->_impl_.child_ref_.channel_ref_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.child_ref_.channel_ref_);
        } else {
          _this->_impl_.child_ref_.channel_ref_->MergeFrom(*from._impl_.child_ref_.channel_ref_);
        }
        break;
      }
      case kSubchannelRef: {
        if (oneof_needs_init) {
          _this->_impl_.child_ref_.subchannel_ref_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.child_ref_.subchannel_ref_);
        } else {
          _this->_impl_.child_ref_.subchannel_ref_->MergeFrom(*from._impl_.child_ref_.subchannel_ref_);
        }
        break;
      }
      case CHILD_REF_NOT_SET:
        break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ChannelTraceEvent::CopyFrom(const ChannelTraceEvent& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc.channelz.v1.ChannelTraceEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ChannelTraceEvent::InternalSwap(ChannelTraceEvent* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.description_, &other->_impl_.description_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ChannelTraceEvent, _impl_.severity_)
      + sizeof(ChannelTraceEvent::_impl_.severity_)
      - PROTOBUF_FIELD_OFFSET(ChannelTraceEvent, _impl_.timestamp_)>(
          reinterpret_cast<char*>(&_impl_.timestamp_),
          reinterpret_cast<char*>(&other->_impl_.timestamp_));
  swap(_impl_.child_ref_, other->_impl_.child_ref_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::google::protobuf::Metadata ChannelTraceEvent::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class ChannelTrace::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<ChannelTrace>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(ChannelTrace, _impl_._has_bits_);
};

void ChannelTrace::clear_creation_timestamp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.creation_timestamp_ != nullptr) _impl_.creation_timestamp_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
ChannelTrace::ChannelTrace(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, ChannelTrace_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc.channelz.v1.ChannelTrace)
}
PROTOBUF_NDEBUG_INLINE ChannelTrace::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::grpc::channelz::v1::ChannelTrace& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        events_{visibility, arena, from.events_} {}

ChannelTrace::ChannelTrace(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const ChannelTrace& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, ChannelTrace_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  ChannelTrace* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.creation_timestamp_ = ((cached_has_bits & 0x00000001u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.creation_timestamp_)
                : nullptr;
  _impl_.num_events_logged_ = from._impl_.num_events_logged_;

  // @@protoc_insertion_point(copy_constructor:grpc.channelz.v1.ChannelTrace)
}
PROTOBUF_NDEBUG_INLINE ChannelTrace::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        events_{visibility, arena} {}

inline void ChannelTrace::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, creation_timestamp_),
           0,
           offsetof(Impl_, num_events_logged_) -
               offsetof(Impl_, creation_timestamp_) +
               sizeof(Impl_::num_events_logged_));
}
ChannelTrace::~ChannelTrace() {
  // @@protoc_insertion_point(destructor:grpc.channelz.v1.ChannelTrace)
  SharedDtor(*this);
}
inline void ChannelTrace::SharedDtor(MessageLite& self) {
  ChannelTrace& this_ = static_cast<ChannelTrace&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.creation_timestamp_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL ChannelTrace::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) ChannelTrace(arena);
}
constexpr auto ChannelTrace::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(ChannelTrace, _impl_.events_) +
          decltype(ChannelTrace::_impl_.events_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(ChannelTrace), alignof(ChannelTrace), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&ChannelTrace::PlacementNew_,
                                 sizeof(ChannelTrace),
                                 alignof(ChannelTrace));
  }
}
constexpr auto ChannelTrace::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_ChannelTrace_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &ChannelTrace::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<ChannelTrace>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &ChannelTrace::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<ChannelTrace>(), &ChannelTrace::ByteSizeLong,
              &ChannelTrace::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(ChannelTrace, _impl_._cached_size_),
          false,
      },
      &ChannelTrace::kDescriptorMethods,
      &descriptor_table_src_2fproto_2fgrpc_2fchannelz_2fchannelz_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull ChannelTrace_class_data_ =
        ChannelTrace::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
ChannelTrace::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&ChannelTrace_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(ChannelTrace_class_data_.tc_table);
  return ChannelTrace_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 2, 0, 2>
ChannelTrace::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ChannelTrace, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    ChannelTrace_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::grpc::channelz::v1::ChannelTrace>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // int64 num_events_logged = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(ChannelTrace, _impl_.num_events_logged_), 1>(),
     {8, 1, 0, PROTOBUF_FIELD_OFFSET(ChannelTrace, _impl_.num_events_logged_)}},
    // .google.protobuf.Timestamp creation_timestamp = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(ChannelTrace, _impl_.creation_timestamp_)}},
    // repeated .grpc.channelz.v1.ChannelTraceEvent events = 3;
    {::_pbi::TcParser::FastMtR1,
     {26, 63, 1, PROTOBUF_FIELD_OFFSET(ChannelTrace, _impl_.events_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int64 num_events_logged = 1;
    {PROTOBUF_FIELD_OFFSET(ChannelTrace, _impl_.num_events_logged_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
    // .google.protobuf.Timestamp creation_timestamp = 2;
    {PROTOBUF_FIELD_OFFSET(ChannelTrace, _impl_.creation_timestamp_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .grpc.channelz.v1.ChannelTraceEvent events = 3;
    {PROTOBUF_FIELD_OFFSET(ChannelTrace, _impl_.events_), -1, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::google::protobuf::Timestamp>()},
      {::_pbi::TcParser::GetTable<::grpc::channelz::v1::ChannelTraceEvent>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void ChannelTrace::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc.channelz.v1.ChannelTrace)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.events_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    ABSL_DCHECK(_impl_.creation_timestamp_ != nullptr);
    _impl_.creation_timestamp_->Clear();
  }
  _impl_.num_events_logged_ = ::int64_t{0};
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL ChannelTrace::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const ChannelTrace& this_ = static_cast<const ChannelTrace&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL ChannelTrace::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const ChannelTrace& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:grpc.channelz.v1.ChannelTrace)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int64 num_events_logged = 1;
  if ((this_._impl_._has_bits_[0] & 0x00000002u) != 0) {
    if (this_._internal_num_events_logged() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt64ToArrayWithField<1>(
              stream, this_._internal_num_events_logged(), target);
    }
  }

  cached_has_bits = this_._impl_._has_bits_[0];
  // .google.protobuf.Timestamp creation_timestamp = 2;
  if ((cached_has_bits & 0x00000001u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, *this_._impl_.creation_timestamp_, this_._impl_.creation_timestamp_->GetCachedSize(), target,
        stream);
  }

  // repeated .grpc.channelz.v1.ChannelTraceEvent events = 3;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this_._internal_events_size());
       i < n; i++) {
    const auto& repfield = this_._internal_events().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            3, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc.channelz.v1.ChannelTrace)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t ChannelTrace::ByteSizeLong(const MessageLite& base) {
  const ChannelTrace& this_ = static_cast<const ChannelTrace&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t ChannelTrace::ByteSizeLong() const {
  const ChannelTrace& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:grpc.channelz.v1.ChannelTrace)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated .grpc.channelz.v1.ChannelTraceEvent events = 3;
    {
      total_size += 1UL * this_._internal_events_size();
      for (const auto& msg : this_._internal_events()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
  }
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    // .google.protobuf.Timestamp creation_timestamp = 2;
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.creation_timestamp_);
    }
    // int64 num_events_logged = 1;
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (this_._internal_num_events_logged() != 0) {
        total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
            this_._internal_num_events_logged());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void ChannelTrace::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ChannelTrace*>(&to_msg);
  auto& from = static_cast<const ChannelTrace&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:grpc.channelz.v1.ChannelTrace)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_events()->MergeFrom(
      from._internal_events());
  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      ABSL_DCHECK(from._impl_.creation_timestamp_ != nullptr);
      if (_this->_impl_.creation_timestamp_ == nullptr) {
        _this->_impl_.creation_timestamp_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.creation_timestamp_);
      } else {
        _this->_impl_.creation_timestamp_->MergeFrom(*from._impl_.creation_timestamp_);
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (from._internal_num_events_logged() != 0) {
        _this->_impl_.num_events_logged_ = from._impl_.num_events_logged_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ChannelTrace::CopyFrom(const ChannelTrace& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc.channelz.v1.ChannelTrace)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ChannelTrace::InternalSwap(ChannelTrace* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.events_.InternalSwap(&other->_impl_.events_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ChannelTrace, _impl_.num_events_logged_)
      + sizeof(ChannelTrace::_impl_.num_events_logged_)
      - PROTOBUF_FIELD_OFFSET(ChannelTrace, _impl_.creation_timestamp_)>(
          reinterpret_cast<char*>(&_impl_.creation_timestamp_),
          reinterpret_cast<char*>(&other->_impl_.creation_timestamp_));
}

::google::protobuf::Metadata ChannelTrace::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class ChannelRef::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<ChannelRef>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(ChannelRef, _impl_._has_bits_);
};

ChannelRef::ChannelRef(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, ChannelRef_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc.channelz.v1.ChannelRef)
}
PROTOBUF_NDEBUG_INLINE ChannelRef::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::grpc::channelz::v1::ChannelRef& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        name_(arena, from.name_) {}

ChannelRef::ChannelRef(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const ChannelRef& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, ChannelRef_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  ChannelRef* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.channel_id_ = from._impl_.channel_id_;

  // @@protoc_insertion_point(copy_constructor:grpc.channelz.v1.ChannelRef)
}
PROTOBUF_NDEBUG_INLINE ChannelRef::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        name_(arena) {}

inline void ChannelRef::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.channel_id_ = {};
}
ChannelRef::~ChannelRef() {
  // @@protoc_insertion_point(destructor:grpc.channelz.v1.ChannelRef)
  SharedDtor(*this);
}
inline void ChannelRef::SharedDtor(MessageLite& self) {
  ChannelRef& this_ = static_cast<ChannelRef&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.name_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL ChannelRef::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) ChannelRef(arena);
}
constexpr auto ChannelRef::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(ChannelRef),
                                            alignof(ChannelRef));
}
constexpr auto ChannelRef::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_ChannelRef_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &ChannelRef::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<ChannelRef>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &ChannelRef::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<ChannelRef>(), &ChannelRef::ByteSizeLong,
              &ChannelRef::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(ChannelRef, _impl_._cached_size_),
          false,
      },
      &ChannelRef::kDescriptorMethods,
      &descriptor_table_src_2fproto_2fgrpc_2fchannelz_2fchannelz_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull ChannelRef_class_data_ =
        ChannelRef::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
ChannelRef::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&ChannelRef_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(ChannelRef_class_data_.tc_table);
  return ChannelRef_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 40, 2>
ChannelRef::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ChannelRef, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    ChannelRef_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::grpc::channelz::v1::ChannelRef>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string name = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(ChannelRef, _impl_.name_)}},
    // int64 channel_id = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(ChannelRef, _impl_.channel_id_), 1>(),
     {8, 1, 0, PROTOBUF_FIELD_OFFSET(ChannelRef, _impl_.channel_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int64 channel_id = 1;
    {PROTOBUF_FIELD_OFFSET(ChannelRef, _impl_.channel_id_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
    // string name = 2;
    {PROTOBUF_FIELD_OFFSET(ChannelRef, _impl_.name_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\33\0\4\0\0\0\0\0"
    "grpc.channelz.v1.ChannelRef"
    "name"
  }},
};
PROTOBUF_NOINLINE void ChannelRef::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc.channelz.v1.ChannelRef)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    _impl_.name_.ClearNonDefaultToEmpty();
  }
  _impl_.channel_id_ = ::int64_t{0};
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL ChannelRef::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const ChannelRef& this_ = static_cast<const ChannelRef&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL ChannelRef::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const ChannelRef& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:grpc.channelz.v1.ChannelRef)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int64 channel_id = 1;
  if ((this_._impl_._has_bits_[0] & 0x00000002u) != 0) {
    if (this_._internal_channel_id() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt64ToArrayWithField<1>(
              stream, this_._internal_channel_id(), target);
    }
  }

  // string name = 2;
  if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (!this_._internal_name().empty()) {
      const ::std::string& _s = this_._internal_name();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "grpc.channelz.v1.ChannelRef.name");
      target = stream->WriteStringMaybeAliased(2, _s, target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc.channelz.v1.ChannelRef)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t ChannelRef::ByteSizeLong(const MessageLite& base) {
  const ChannelRef& this_ = static_cast<const ChannelRef&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t ChannelRef::ByteSizeLong() const {
  const ChannelRef& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:grpc.channelz.v1.ChannelRef)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    // string name = 2;
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!this_._internal_name().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_name());
      }
    }
    // int64 channel_id = 1;
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (this_._internal_channel_id() != 0) {
        total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
            this_._internal_channel_id());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void ChannelRef::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ChannelRef*>(&to_msg);
  auto& from = static_cast<const ChannelRef&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:grpc.channelz.v1.ChannelRef)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!from._internal_name().empty()) {
        _this->_internal_set_name(from._internal_name());
      } else {
        if (_this->_impl_.name_.IsDefault()) {
          _this->_internal_set_name("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (from._internal_channel_id() != 0) {
        _this->_impl_.channel_id_ = from._impl_.channel_id_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ChannelRef::CopyFrom(const ChannelRef& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc.channelz.v1.ChannelRef)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ChannelRef::InternalSwap(ChannelRef* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, &other->_impl_.name_, arena);
  swap(_impl_.channel_id_, other->_impl_.channel_id_);
}

::google::protobuf::Metadata ChannelRef::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SubchannelRef::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<SubchannelRef>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(SubchannelRef, _impl_._has_bits_);
};

SubchannelRef::SubchannelRef(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, SubchannelRef_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc.channelz.v1.SubchannelRef)
}
PROTOBUF_NDEBUG_INLINE SubchannelRef::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::grpc::channelz::v1::SubchannelRef& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        name_(arena, from.name_) {}

SubchannelRef::SubchannelRef(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const SubchannelRef& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, SubchannelRef_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SubchannelRef* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.subchannel_id_ = from._impl_.subchannel_id_;

  // @@protoc_insertion_point(copy_constructor:grpc.channelz.v1.SubchannelRef)
}
PROTOBUF_NDEBUG_INLINE SubchannelRef::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        name_(arena) {}

inline void SubchannelRef::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.subchannel_id_ = {};
}
SubchannelRef::~SubchannelRef() {
  // @@protoc_insertion_point(destructor:grpc.channelz.v1.SubchannelRef)
  SharedDtor(*this);
}
inline void SubchannelRef::SharedDtor(MessageLite& self) {
  SubchannelRef& this_ = static_cast<SubchannelRef&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.name_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL SubchannelRef::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) SubchannelRef(arena);
}
constexpr auto SubchannelRef::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(SubchannelRef),
                                            alignof(SubchannelRef));
}
constexpr auto SubchannelRef::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_SubchannelRef_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &SubchannelRef::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<SubchannelRef>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &SubchannelRef::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<SubchannelRef>(), &SubchannelRef::ByteSizeLong,
              &SubchannelRef::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(SubchannelRef, _impl_._cached_size_),
          false,
      },
      &SubchannelRef::kDescriptorMethods,
      &descriptor_table_src_2fproto_2fgrpc_2fchannelz_2fchannelz_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull SubchannelRef_class_data_ =
        SubchannelRef::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
SubchannelRef::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&SubchannelRef_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(SubchannelRef_class_data_.tc_table);
  return SubchannelRef_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 43, 2>
SubchannelRef::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SubchannelRef, _impl_._has_bits_),
    0, // no _extensions_
    8, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967103,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    SubchannelRef_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::grpc::channelz::v1::SubchannelRef>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string name = 8;
    {::_pbi::TcParser::FastUS1,
     {66, 0, 0, PROTOBUF_FIELD_OFFSET(SubchannelRef, _impl_.name_)}},
    // int64 subchannel_id = 7;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(SubchannelRef, _impl_.subchannel_id_), 1>(),
     {56, 1, 0, PROTOBUF_FIELD_OFFSET(SubchannelRef, _impl_.subchannel_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int64 subchannel_id = 7;
    {PROTOBUF_FIELD_OFFSET(SubchannelRef, _impl_.subchannel_id_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
    // string name = 8;
    {PROTOBUF_FIELD_OFFSET(SubchannelRef, _impl_.name_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\36\0\4\0\0\0\0\0"
    "grpc.channelz.v1.SubchannelRef"
    "name"
  }},
};
PROTOBUF_NOINLINE void SubchannelRef::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc.channelz.v1.SubchannelRef)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    _impl_.name_.ClearNonDefaultToEmpty();
  }
  _impl_.subchannel_id_ = ::int64_t{0};
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL SubchannelRef::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const SubchannelRef& this_ = static_cast<const SubchannelRef&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL SubchannelRef::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const SubchannelRef& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:grpc.channelz.v1.SubchannelRef)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int64 subchannel_id = 7;
  if ((this_._impl_._has_bits_[0] & 0x00000002u) != 0) {
    if (this_._internal_subchannel_id() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt64ToArrayWithField<7>(
              stream, this_._internal_subchannel_id(), target);
    }
  }

  // string name = 8;
  if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (!this_._internal_name().empty()) {
      const ::std::string& _s = this_._internal_name();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "grpc.channelz.v1.SubchannelRef.name");
      target = stream->WriteStringMaybeAliased(8, _s, target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc.channelz.v1.SubchannelRef)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t SubchannelRef::ByteSizeLong(const MessageLite& base) {
  const SubchannelRef& this_ = static_cast<const SubchannelRef&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t SubchannelRef::ByteSizeLong() const {
  const SubchannelRef& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:grpc.channelz.v1.SubchannelRef)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    // string name = 8;
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!this_._internal_name().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_name());
      }
    }
    // int64 subchannel_id = 7;
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (this_._internal_subchannel_id() != 0) {
        total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
            this_._internal_subchannel_id());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void SubchannelRef::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SubchannelRef*>(&to_msg);
  auto& from = static_cast<const SubchannelRef&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:grpc.channelz.v1.SubchannelRef)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!from._internal_name().empty()) {
        _this->_internal_set_name(from._internal_name());
      } else {
        if (_this->_impl_.name_.IsDefault()) {
          _this->_internal_set_name("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (from._internal_subchannel_id() != 0) {
        _this->_impl_.subchannel_id_ = from._impl_.subchannel_id_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SubchannelRef::CopyFrom(const SubchannelRef& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc.channelz.v1.SubchannelRef)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SubchannelRef::InternalSwap(SubchannelRef* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, &other->_impl_.name_, arena);
  swap(_impl_.subchannel_id_, other->_impl_.subchannel_id_);
}

::google::protobuf::Metadata SubchannelRef::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SocketRef::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<SocketRef>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(SocketRef, _impl_._has_bits_);
};

SocketRef::SocketRef(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, SocketRef_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc.channelz.v1.SocketRef)
}
PROTOBUF_NDEBUG_INLINE SocketRef::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::grpc::channelz::v1::SocketRef& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        name_(arena, from.name_) {}

SocketRef::SocketRef(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const SocketRef& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, SocketRef_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SocketRef* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.socket_id_ = from._impl_.socket_id_;

  // @@protoc_insertion_point(copy_constructor:grpc.channelz.v1.SocketRef)
}
PROTOBUF_NDEBUG_INLINE SocketRef::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        name_(arena) {}

inline void SocketRef::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.socket_id_ = {};
}
SocketRef::~SocketRef() {
  // @@protoc_insertion_point(destructor:grpc.channelz.v1.SocketRef)
  SharedDtor(*this);
}
inline void SocketRef::SharedDtor(MessageLite& self) {
  SocketRef& this_ = static_cast<SocketRef&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.name_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL SocketRef::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) SocketRef(arena);
}
constexpr auto SocketRef::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(SocketRef),
                                            alignof(SocketRef));
}
constexpr auto SocketRef::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_SocketRef_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &SocketRef::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<SocketRef>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &SocketRef::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<SocketRef>(), &SocketRef::ByteSizeLong,
              &SocketRef::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(SocketRef, _impl_._cached_size_),
          false,
      },
      &SocketRef::kDescriptorMethods,
      &descriptor_table_src_2fproto_2fgrpc_2fchannelz_2fchannelz_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull SocketRef_class_data_ =
        SocketRef::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
SocketRef::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&SocketRef_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(SocketRef_class_data_.tc_table);
  return SocketRef_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 39, 2>
SocketRef::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SocketRef, _impl_._has_bits_),
    0, // no _extensions_
    4, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967283,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    SocketRef_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::grpc::channelz::v1::SocketRef>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string name = 4;
    {::_pbi::TcParser::FastUS1,
     {34, 0, 0, PROTOBUF_FIELD_OFFSET(SocketRef, _impl_.name_)}},
    // int64 socket_id = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(SocketRef, _impl_.socket_id_), 1>(),
     {24, 1, 0, PROTOBUF_FIELD_OFFSET(SocketRef, _impl_.socket_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int64 socket_id = 3;
    {PROTOBUF_FIELD_OFFSET(SocketRef, _impl_.socket_id_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
    // string name = 4;
    {PROTOBUF_FIELD_OFFSET(SocketRef, _impl_.name_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\32\0\4\0\0\0\0\0"
    "grpc.channelz.v1.SocketRef"
    "name"
  }},
};
PROTOBUF_NOINLINE void SocketRef::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc.channelz.v1.SocketRef)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    _impl_.name_.ClearNonDefaultToEmpty();
  }
  _impl_.socket_id_ = ::int64_t{0};
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL SocketRef::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const SocketRef& this_ = static_cast<const SocketRef&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL SocketRef::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const SocketRef& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:grpc.channelz.v1.SocketRef)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int64 socket_id = 3;
  if ((this_._impl_._has_bits_[0] & 0x00000002u) != 0) {
    if (this_._internal_socket_id() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt64ToArrayWithField<3>(
              stream, this_._internal_socket_id(), target);
    }
  }

  // string name = 4;
  if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (!this_._internal_name().empty()) {
      const ::std::string& _s = this_._internal_name();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "grpc.channelz.v1.SocketRef.name");
      target = stream->WriteStringMaybeAliased(4, _s, target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc.channelz.v1.SocketRef)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t SocketRef::ByteSizeLong(const MessageLite& base) {
  const SocketRef& this_ = static_cast<const SocketRef&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t SocketRef::ByteSizeLong() const {
  const SocketRef& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:grpc.channelz.v1.SocketRef)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    // string name = 4;
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!this_._internal_name().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_name());
      }
    }
    // int64 socket_id = 3;
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (this_._internal_socket_id() != 0) {
        total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
            this_._internal_socket_id());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void SocketRef::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SocketRef*>(&to_msg);
  auto& from = static_cast<const SocketRef&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:grpc.channelz.v1.SocketRef)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!from._internal_name().empty()) {
        _this->_internal_set_name(from._internal_name());
      } else {
        if (_this->_impl_.name_.IsDefault()) {
          _this->_internal_set_name("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (from._internal_socket_id() != 0) {
        _this->_impl_.socket_id_ = from._impl_.socket_id_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SocketRef::CopyFrom(const SocketRef& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc.channelz.v1.SocketRef)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SocketRef::InternalSwap(SocketRef* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, &other->_impl_.name_, arena);
  swap(_impl_.socket_id_, other->_impl_.socket_id_);
}

::google::protobuf::Metadata SocketRef::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class ServerRef::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<ServerRef>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(ServerRef, _impl_._has_bits_);
};

ServerRef::ServerRef(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, ServerRef_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc.channelz.v1.ServerRef)
}
PROTOBUF_NDEBUG_INLINE ServerRef::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::grpc::channelz::v1::ServerRef& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        name_(arena, from.name_) {}

ServerRef::ServerRef(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const ServerRef& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, ServerRef_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  ServerRef* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.server_id_ = from._impl_.server_id_;

  // @@protoc_insertion_point(copy_constructor:grpc.channelz.v1.ServerRef)
}
PROTOBUF_NDEBUG_INLINE ServerRef::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        name_(arena) {}

inline void ServerRef::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.server_id_ = {};
}
ServerRef::~ServerRef() {
  // @@protoc_insertion_point(destructor:grpc.channelz.v1.ServerRef)
  SharedDtor(*this);
}
inline void ServerRef::SharedDtor(MessageLite& self) {
  ServerRef& this_ = static_cast<ServerRef&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.name_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL ServerRef::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) ServerRef(arena);
}
constexpr auto ServerRef::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(ServerRef),
                                            alignof(ServerRef));
}
constexpr auto ServerRef::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_ServerRef_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &ServerRef::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<ServerRef>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &ServerRef::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<ServerRef>(), &ServerRef::ByteSizeLong,
              &ServerRef::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(ServerRef, _impl_._cached_size_),
          false,
      },
      &ServerRef::kDescriptorMethods,
      &descriptor_table_src_2fproto_2fgrpc_2fchannelz_2fchannelz_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull ServerRef_class_data_ =
        ServerRef::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
ServerRef::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&ServerRef_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(ServerRef_class_data_.tc_table);
  return ServerRef_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 39, 2>
ServerRef::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ServerRef, _impl_._has_bits_),
    0, // no _extensions_
    6, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967247,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    ServerRef_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::grpc::channelz::v1::ServerRef>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string name = 6;
    {::_pbi::TcParser::FastUS1,
     {50, 0, 0, PROTOBUF_FIELD_OFFSET(ServerRef, _impl_.name_)}},
    // int64 server_id = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(ServerRef, _impl_.server_id_), 1>(),
     {40, 1, 0, PROTOBUF_FIELD_OFFSET(ServerRef, _impl_.server_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int64 server_id = 5;
    {PROTOBUF_FIELD_OFFSET(ServerRef, _impl_.server_id_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
    // string name = 6;
    {PROTOBUF_FIELD_OFFSET(ServerRef, _impl_.name_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\32\0\4\0\0\0\0\0"
    "grpc.channelz.v1.ServerRef"
    "name"
  }},
};
PROTOBUF_NOINLINE void ServerRef::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc.channelz.v1.ServerRef)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    _impl_.name_.ClearNonDefaultToEmpty();
  }
  _impl_.server_id_ = ::int64_t{0};
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL ServerRef::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const ServerRef& this_ = static_cast<const ServerRef&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL ServerRef::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const ServerRef& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:grpc.channelz.v1.ServerRef)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int64 server_id = 5;
  if ((this_._impl_._has_bits_[0] & 0x00000002u) != 0) {
    if (this_._internal_server_id() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt64ToArrayWithField<5>(
              stream, this_._internal_server_id(), target);
    }
  }

  // string name = 6;
  if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (!this_._internal_name().empty()) {
      const ::std::string& _s = this_._internal_name();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "grpc.channelz.v1.ServerRef.name");
      target = stream->WriteStringMaybeAliased(6, _s, target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc.channelz.v1.ServerRef)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t ServerRef::ByteSizeLong(const MessageLite& base) {
  const ServerRef& this_ = static_cast<const ServerRef&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t ServerRef::ByteSizeLong() const {
  const ServerRef& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:grpc.channelz.v1.ServerRef)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    // string name = 6;
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!this_._internal_name().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_name());
      }
    }
    // int64 server_id = 5;
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (this_._internal_server_id() != 0) {
        total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
            this_._internal_server_id());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void ServerRef::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ServerRef*>(&to_msg);
  auto& from = static_cast<const ServerRef&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:grpc.channelz.v1.ServerRef)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!from._internal_name().empty()) {
        _this->_internal_set_name(from._internal_name());
      } else {
        if (_this->_impl_.name_.IsDefault()) {
          _this->_internal_set_name("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (from._internal_server_id() != 0) {
        _this->_impl_.server_id_ = from._impl_.server_id_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ServerRef::CopyFrom(const ServerRef& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc.channelz.v1.ServerRef)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ServerRef::InternalSwap(ServerRef* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, &other->_impl_.name_, arena);
  swap(_impl_.server_id_, other->_impl_.server_id_);
}

::google::protobuf::Metadata ServerRef::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Server::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<Server>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(Server, _impl_._has_bits_);
};

Server::Server(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, Server_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc.channelz.v1.Server)
}
PROTOBUF_NDEBUG_INLINE Server::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::grpc::channelz::v1::Server& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        listen_socket_{visibility, arena, from.listen_socket_} {}

Server::Server(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const Server& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, Server_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Server* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.ref_ = ((cached_has_bits & 0x00000001u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.ref_)
                : nullptr;
  _impl_.data_ = ((cached_has_bits & 0x00000002u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.data_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:grpc.channelz.v1.Server)
}
PROTOBUF_NDEBUG_INLINE Server::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        listen_socket_{visibility, arena} {}

inline void Server::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, ref_),
           0,
           offsetof(Impl_, data_) -
               offsetof(Impl_, ref_) +
               sizeof(Impl_::data_));
}
Server::~Server() {
  // @@protoc_insertion_point(destructor:grpc.channelz.v1.Server)
  SharedDtor(*this);
}
inline void Server::SharedDtor(MessageLite& self) {
  Server& this_ = static_cast<Server&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.ref_;
  delete this_._impl_.data_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL Server::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) Server(arena);
}
constexpr auto Server::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(Server, _impl_.listen_socket_) +
          decltype(Server::_impl_.listen_socket_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(Server), alignof(Server), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&Server::PlacementNew_,
                                 sizeof(Server),
                                 alignof(Server));
  }
}
constexpr auto Server::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_Server_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &Server::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<Server>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &Server::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<Server>(), &Server::ByteSizeLong,
              &Server::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(Server, _impl_._cached_size_),
          false,
      },
      &Server::kDescriptorMethods,
      &descriptor_table_src_2fproto_2fgrpc_2fchannelz_2fchannelz_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull Server_class_data_ =
        Server::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
Server::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&Server_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(Server_class_data_.tc_table);
  return Server_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 3, 0, 2>
Server::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Server, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    3,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    Server_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::grpc::channelz::v1::Server>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .grpc.channelz.v1.ServerRef ref = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(Server, _impl_.ref_)}},
    // .grpc.channelz.v1.ServerData data = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 1, PROTOBUF_FIELD_OFFSET(Server, _impl_.data_)}},
    // repeated .grpc.channelz.v1.SocketRef listen_socket = 3;
    {::_pbi::TcParser::FastMtR1,
     {26, 63, 2, PROTOBUF_FIELD_OFFSET(Server, _impl_.listen_socket_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .grpc.channelz.v1.ServerRef ref = 1;
    {PROTOBUF_FIELD_OFFSET(Server, _impl_.ref_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .grpc.channelz.v1.ServerData data = 2;
    {PROTOBUF_FIELD_OFFSET(Server, _impl_.data_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .grpc.channelz.v1.SocketRef listen_socket = 3;
    {PROTOBUF_FIELD_OFFSET(Server, _impl_.listen_socket_), -1, 2,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::grpc::channelz::v1::ServerRef>()},
      {::_pbi::TcParser::GetTable<::grpc::channelz::v1::ServerData>()},
      {::_pbi::TcParser::GetTable<::grpc::channelz::v1::SocketRef>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void Server::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc.channelz.v1.Server)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.listen_socket_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      ABSL_DCHECK(_impl_.ref_ != nullptr);
      _impl_.ref_->Clear();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(_impl_.data_ != nullptr);
      _impl_.data_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL Server::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const Server& this_ = static_cast<const Server&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL Server::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const Server& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:grpc.channelz.v1.Server)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // .grpc.channelz.v1.ServerRef ref = 1;
  if ((cached_has_bits & 0x00000001u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *this_._impl_.ref_, this_._impl_.ref_->GetCachedSize(), target,
        stream);
  }

  // .grpc.channelz.v1.ServerData data = 2;
  if ((cached_has_bits & 0x00000002u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, *this_._impl_.data_, this_._impl_.data_->GetCachedSize(), target,
        stream);
  }

  // repeated .grpc.channelz.v1.SocketRef listen_socket = 3;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this_._internal_listen_socket_size());
       i < n; i++) {
    const auto& repfield = this_._internal_listen_socket().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            3, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc.channelz.v1.Server)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t Server::ByteSizeLong(const MessageLite& base) {
  const Server& this_ = static_cast<const Server&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t Server::ByteSizeLong() const {
  const Server& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:grpc.channelz.v1.Server)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated .grpc.channelz.v1.SocketRef listen_socket = 3;
    {
      total_size += 1UL * this_._internal_listen_socket_size();
      for (const auto& msg : this_._internal_listen_socket()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
  }
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    // .grpc.channelz.v1.ServerRef ref = 1;
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.ref_);
    }
    // .grpc.channelz.v1.ServerData data = 2;
    if ((cached_has_bits & 0x00000002u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.data_);
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void Server::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Server*>(&to_msg);
  auto& from = static_cast<const Server&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:grpc.channelz.v1.Server)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_listen_socket()->MergeFrom(
      from._internal_listen_socket());
  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      ABSL_DCHECK(from._impl_.ref_ != nullptr);
      if (_this->_impl_.ref_ == nullptr) {
        _this->_impl_.ref_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.ref_);
      } else {
        _this->_impl_.ref_->MergeFrom(*from._impl_.ref_);
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(from._impl_.data_ != nullptr);
      if (_this->_impl_.data_ == nullptr) {
        _this->_impl_.data_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.data_);
      } else {
        _this->_impl_.data_->MergeFrom(*from._impl_.data_);
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Server::CopyFrom(const Server& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc.channelz.v1.Server)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Server::InternalSwap(Server* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.listen_socket_.InternalSwap(&other->_impl_.listen_socket_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Server, _impl_.data_)
      + sizeof(Server::_impl_.data_)
      - PROTOBUF_FIELD_OFFSET(Server, _impl_.ref_)>(
          reinterpret_cast<char*>(&_impl_.ref_),
          reinterpret_cast<char*>(&other->_impl_.ref_));
}

::google::protobuf::Metadata Server::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class ServerData::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<ServerData>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(ServerData, _impl_._has_bits_);
};

void ServerData::clear_last_call_started_timestamp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.last_call_started_timestamp_ != nullptr) _impl_.last_call_started_timestamp_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
ServerData::ServerData(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, ServerData_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc.channelz.v1.ServerData)
}
PROTOBUF_NDEBUG_INLINE ServerData::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::grpc::channelz::v1::ServerData& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

ServerData::ServerData(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const ServerData& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, ServerData_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  ServerData* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.trace_ = ((cached_has_bits & 0x00000001u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.trace_)
                : nullptr;
  _impl_.last_call_started_timestamp_ = ((cached_has_bits & 0x00000002u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.last_call_started_timestamp_)
                : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, calls_started_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, calls_started_),
           offsetof(Impl_, calls_failed_) -
               offsetof(Impl_, calls_started_) +
               sizeof(Impl_::calls_failed_));

  // @@protoc_insertion_point(copy_constructor:grpc.channelz.v1.ServerData)
}
PROTOBUF_NDEBUG_INLINE ServerData::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void ServerData::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, trace_),
           0,
           offsetof(Impl_, calls_failed_) -
               offsetof(Impl_, trace_) +
               sizeof(Impl_::calls_failed_));
}
ServerData::~ServerData() {
  // @@protoc_insertion_point(destructor:grpc.channelz.v1.ServerData)
  SharedDtor(*this);
}
inline void ServerData::SharedDtor(MessageLite& self) {
  ServerData& this_ = static_cast<ServerData&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.trace_;
  delete this_._impl_.last_call_started_timestamp_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL ServerData::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) ServerData(arena);
}
constexpr auto ServerData::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(ServerData),
                                            alignof(ServerData));
}
constexpr auto ServerData::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_ServerData_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &ServerData::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<ServerData>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &ServerData::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<ServerData>(), &ServerData::ByteSizeLong,
              &ServerData::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(ServerData, _impl_._cached_size_),
          false,
      },
      &ServerData::kDescriptorMethods,
      &descriptor_table_src_2fproto_2fgrpc_2fchannelz_2fchannelz_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull ServerData_class_data_ =
        ServerData::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
ServerData::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&ServerData_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(ServerData_class_data_.tc_table);
  return ServerData_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 2, 0, 2>
ServerData::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ServerData, _impl_._has_bits_),
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    ServerData_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::grpc::channelz::v1::ServerData>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .grpc.channelz.v1.ChannelTrace trace = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(ServerData, _impl_.trace_)}},
    // int64 calls_started = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(ServerData, _impl_.calls_started_), 2>(),
     {16, 2, 0, PROTOBUF_FIELD_OFFSET(ServerData, _impl_.calls_started_)}},
    // int64 calls_succeeded = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(ServerData, _impl_.calls_succeeded_), 3>(),
     {24, 3, 0, PROTOBUF_FIELD_OFFSET(ServerData, _impl_.calls_succeeded_)}},
    // int64 calls_failed = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(ServerData, _impl_.calls_failed_), 4>(),
     {32, 4, 0, PROTOBUF_FIELD_OFFSET(ServerData, _impl_.calls_failed_)}},
    // .google.protobuf.Timestamp last_call_started_timestamp = 5;
    {::_pbi::TcParser::FastMtS1,
     {42, 1, 1, PROTOBUF_FIELD_OFFSET(ServerData, _impl_.last_call_started_timestamp_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // .grpc.channelz.v1.ChannelTrace trace = 1;
    {PROTOBUF_FIELD_OFFSET(ServerData, _impl_.trace_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // int64 calls_started = 2;
    {PROTOBUF_FIELD_OFFSET(ServerData, _impl_.calls_started_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
    // int64 calls_succeeded = 3;
    {PROTOBUF_FIELD_OFFSET(ServerData, _impl_.calls_succeeded_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
    // int64 calls_failed = 4;
    {PROTOBUF_FIELD_OFFSET(ServerData, _impl_.calls_failed_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
    // .google.protobuf.Timestamp last_call_started_timestamp = 5;
    {PROTOBUF_FIELD_OFFSET(ServerData, _impl_.last_call_started_timestamp_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::grpc::channelz::v1::ChannelTrace>()},
      {::_pbi::TcParser::GetTable<::google::protobuf::Timestamp>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void ServerData::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc.channelz.v1.ServerData)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      ABSL_DCHECK(_impl_.trace_ != nullptr);
      _impl_.trace_->Clear();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(_impl_.last_call_started_timestamp_ != nullptr);
      _impl_.last_call_started_timestamp_->Clear();
    }
  }
  if ((cached_has_bits & 0x0000001cu) != 0) {
    ::memset(&_impl_.calls_started_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.calls_failed_) -
        reinterpret_cast<char*>(&_impl_.calls_started_)) + sizeof(_impl_.calls_failed_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL ServerData::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const ServerData& this_ = static_cast<const ServerData&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL ServerData::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const ServerData& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:grpc.channelz.v1.ServerData)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // .grpc.channelz.v1.ChannelTrace trace = 1;
  if ((cached_has_bits & 0x00000001u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *this_._impl_.trace_, this_._impl_.trace_->GetCachedSize(), target,
        stream);
  }

  // int64 calls_started = 2;
  if ((cached_has_bits & 0x00000004u) != 0) {
    if (this_._internal_calls_started() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt64ToArrayWithField<2>(
              stream, this_._internal_calls_started(), target);
    }
  }

  // int64 calls_succeeded = 3;
  if ((cached_has_bits & 0x00000008u) != 0) {
    if (this_._internal_calls_succeeded() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt64ToArrayWithField<3>(
              stream, this_._internal_calls_succeeded(), target);
    }
  }

  // int64 calls_failed = 4;
  if ((cached_has_bits & 0x00000010u) != 0) {
    if (this_._internal_calls_failed() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt64ToArrayWithField<4>(
              stream, this_._internal_calls_failed(), target);
    }
  }

  // .google.protobuf.Timestamp last_call_started_timestamp = 5;
  if ((cached_has_bits & 0x00000002u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        5, *this_._impl_.last_call_started_timestamp_, this_._impl_.last_call_started_timestamp_->GetCachedSize(), target,
        stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc.channelz.v1.ServerData)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t ServerData::ByteSizeLong(const MessageLite& base) {
  const ServerData& this_ = static_cast<const ServerData&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t ServerData::ByteSizeLong() const {
  const ServerData& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:grpc.channelz.v1.ServerData)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000001fu) != 0) {
    // .grpc.channelz.v1.ChannelTrace trace = 1;
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.trace_);
    }
    // .google.protobuf.Timestamp last_call_started_timestamp = 5;
    if ((cached_has_bits & 0x00000002u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.last_call_started_timestamp_);
    }
    // int64 calls_started = 2;
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (this_._internal_calls_started() != 0) {
        total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
            this_._internal_calls_started());
      }
    }
    // int64 calls_succeeded = 3;
    if ((cached_has_bits & 0x00000008u) != 0) {
      if (this_._internal_calls_succeeded() != 0) {
        total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
            this_._internal_calls_succeeded());
      }
    }
    // int64 calls_failed = 4;
    if ((cached_has_bits & 0x00000010u) != 0) {
      if (this_._internal_calls_failed() != 0) {
        total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
            this_._internal_calls_failed());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void ServerData::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ServerData*>(&to_msg);
  auto& from = static_cast<const ServerData&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:grpc.channelz.v1.ServerData)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000001fu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      ABSL_DCHECK(from._impl_.trace_ != nullptr);
      if (_this->_impl_.trace_ == nullptr) {
        _this->_impl_.trace_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.trace_);
      } else {
        _this->_impl_.trace_->MergeFrom(*from._impl_.trace_);
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(from._impl_.last_call_started_timestamp_ != nullptr);
      if (_this->_impl_.last_call_started_timestamp_ == nullptr) {
        _this->_impl_.last_call_started_timestamp_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.last_call_started_timestamp_);
      } else {
        _this->_impl_.last_call_started_timestamp_->MergeFrom(*from._impl_.last_call_started_timestamp_);
      }
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (from._internal_calls_started() != 0) {
        _this->_impl_.calls_started_ = from._impl_.calls_started_;
      }
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      if (from._internal_calls_succeeded() != 0) {
        _this->_impl_.calls_succeeded_ = from._impl_.calls_succeeded_;
      }
    }
    if ((cached_has_bits & 0x00000010u) != 0) {
      if (from._internal_calls_failed() != 0) {
        _this->_impl_.calls_failed_ = from._impl_.calls_failed_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ServerData::CopyFrom(const ServerData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc.channelz.v1.ServerData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ServerData::InternalSwap(ServerData* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ServerData, _impl_.calls_failed_)
      + sizeof(ServerData::_impl_.calls_failed_)
      - PROTOBUF_FIELD_OFFSET(ServerData, _impl_.trace_)>(
          reinterpret_cast<char*>(&_impl_.trace_),
          reinterpret_cast<char*>(&other->_impl_.trace_));
}

::google::protobuf::Metadata ServerData::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Socket::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<Socket>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(Socket, _impl_._has_bits_);
};

Socket::Socket(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, Socket_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc.channelz.v1.Socket)
}
PROTOBUF_NDEBUG_INLINE Socket::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::grpc::channelz::v1::Socket& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        remote_name_(arena, from.remote_name_) {}

Socket::Socket(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const Socket& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, Socket_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Socket* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.ref_ = ((cached_has_bits & 0x00000002u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.ref_)
                : nullptr;
  _impl_.data_ = ((cached_has_bits & 0x00000004u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.data_)
                : nullptr;
  _impl_.local_ = ((cached_has_bits & 0x00000008u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.local_)
                : nullptr;
  _impl_.remote_ = ((cached_has_bits & 0x00000010u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.remote_)
                : nullptr;
  _impl_.security_ = ((cached_has_bits & 0x00000020u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.security_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:grpc.channelz.v1.Socket)
}
PROTOBUF_NDEBUG_INLINE Socket::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        remote_name_(arena) {}

inline void Socket::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, ref_),
           0,
           offsetof(Impl_, security_) -
               offsetof(Impl_, ref_) +
               sizeof(Impl_::security_));
}
Socket::~Socket() {
  // @@protoc_insertion_point(destructor:grpc.channelz.v1.Socket)
  SharedDtor(*this);
}
inline void Socket::SharedDtor(MessageLite& self) {
  Socket& this_ = static_cast<Socket&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.remote_name_.Destroy();
  delete this_._impl_.ref_;
  delete this_._impl_.data_;
  delete this_._impl_.local_;
  delete this_._impl_.remote_;
  delete this_._impl_.security_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL Socket::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) Socket(arena);
}
constexpr auto Socket::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(Socket),
                                            alignof(Socket));
}
constexpr auto Socket::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_Socket_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &Socket::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<Socket>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &Socket::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<Socket>(), &Socket::ByteSizeLong,
              &Socket::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(Socket, _impl_._cached_size_),
          false,
      },
      &Socket::kDescriptorMethods,
      &descriptor_table_src_2fproto_2fgrpc_2fchannelz_2fchannelz_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull Socket_class_data_ =
        Socket::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
Socket::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&Socket_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(Socket_class_data_.tc_table);
  return Socket_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 6, 5, 43, 2>
Socket::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Socket, _impl_._has_bits_),
    0, // no _extensions_
    6, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967232,  // skipmap
    offsetof(decltype(_table_), field_entries),
    6,  // num_field_entries
    5,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    Socket_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::grpc::channelz::v1::Socket>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .grpc.channelz.v1.SocketRef ref = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 1, 0, PROTOBUF_FIELD_OFFSET(Socket, _impl_.ref_)}},
    // .grpc.channelz.v1.SocketData data = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 2, 1, PROTOBUF_FIELD_OFFSET(Socket, _impl_.data_)}},
    // .grpc.channelz.v1.Address local = 3;
    {::_pbi::TcParser::FastMtS1,
     {26, 3, 2, PROTOBUF_FIELD_OFFSET(Socket, _impl_.local_)}},
    // .grpc.channelz.v1.Address remote = 4;
    {::_pbi::TcParser::FastMtS1,
     {34, 4, 3, PROTOBUF_FIELD_OFFSET(Socket, _impl_.remote_)}},
    // .grpc.channelz.v1.Security security = 5;
    {::_pbi::TcParser::FastMtS1,
     {42, 5, 4, PROTOBUF_FIELD_OFFSET(Socket, _impl_.security_)}},
    // string remote_name = 6;
    {::_pbi::TcParser::FastUS1,
     {50, 0, 0, PROTOBUF_FIELD_OFFSET(Socket, _impl_.remote_name_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // .grpc.channelz.v1.SocketRef ref = 1;
    {PROTOBUF_FIELD_OFFSET(Socket, _impl_.ref_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .grpc.channelz.v1.SocketData data = 2;
    {PROTOBUF_FIELD_OFFSET(Socket, _impl_.data_), _Internal::kHasBitsOffset + 2, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .grpc.channelz.v1.Address local = 3;
    {PROTOBUF_FIELD_OFFSET(Socket, _impl_.local_), _Internal::kHasBitsOffset + 3, 2,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .grpc.channelz.v1.Address remote = 4;
    {PROTOBUF_FIELD_OFFSET(Socket, _impl_.remote_), _Internal::kHasBitsOffset + 4, 3,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .grpc.channelz.v1.Security security = 5;
    {PROTOBUF_FIELD_OFFSET(Socket, _impl_.security_), _Internal::kHasBitsOffset + 5, 4,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // string remote_name = 6;
    {PROTOBUF_FIELD_OFFSET(Socket, _impl_.remote_name_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::grpc::channelz::v1::SocketRef>()},
      {::_pbi::TcParser::GetTable<::grpc::channelz::v1::SocketData>()},
      {::_pbi::TcParser::GetTable<::grpc::channelz::v1::Address>()},
      {::_pbi::TcParser::GetTable<::grpc::channelz::v1::Address>()},
      {::_pbi::TcParser::GetTable<::grpc::channelz::v1::Security>()},
  }},
  {{
    "\27\0\0\0\0\0\13\0"
    "grpc.channelz.v1.Socket"
    "remote_name"
  }},
};
PROTOBUF_NOINLINE void Socket::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc.channelz.v1.Socket)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000003fu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _impl_.remote_name_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(_impl_.ref_ != nullptr);
      _impl_.ref_->Clear();
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      ABSL_DCHECK(_impl_.data_ != nullptr);
      _impl_.data_->Clear();
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      ABSL_DCHECK(_impl_.local_ != nullptr);
      _impl_.local_->Clear();
    }
    if ((cached_has_bits & 0x00000010u) != 0) {
      ABSL_DCHECK(_impl_.remote_ != nullptr);
      _impl_.remote_->Clear();
    }
    if ((cached_has_bits & 0x00000020u) != 0) {
      ABSL_DCHECK(_impl_.security_ != nullptr);
      _impl_.security_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL Socket::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const Socket& this_ = static_cast<const Socket&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL Socket::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const Socket& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:grpc.channelz.v1.Socket)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // .grpc.channelz.v1.SocketRef ref = 1;
  if ((cached_has_bits & 0x00000002u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *this_._impl_.ref_, this_._impl_.ref_->GetCachedSize(), target,
        stream);
  }

  // .grpc.channelz.v1.SocketData data = 2;
  if ((cached_has_bits & 0x00000004u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, *this_._impl_.data_, this_._impl_.data_->GetCachedSize(), target,
        stream);
  }

  // .grpc.channelz.v1.Address local = 3;
  if ((cached_has_bits & 0x00000008u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        3, *this_._impl_.local_, this_._impl_.local_->GetCachedSize(), target,
        stream);
  }

  // .grpc.channelz.v1.Address remote = 4;
  if ((cached_has_bits & 0x00000010u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        4, *this_._impl_.remote_, this_._impl_.remote_->GetCachedSize(), target,
        stream);
  }

  // .grpc.channelz.v1.Security security = 5;
  if ((cached_has_bits & 0x00000020u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        5, *this_._impl_.security_, this_._impl_.security_->GetCachedSize(), target,
        stream);
  }

  // string remote_name = 6;
  if ((cached_has_bits & 0x00000001u) != 0) {
    if (!this_._internal_remote_name().empty()) {
      const ::std::string& _s = this_._internal_remote_name();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "grpc.channelz.v1.Socket.remote_name");
      target = stream->WriteStringMaybeAliased(6, _s, target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc.channelz.v1.Socket)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t Socket::ByteSizeLong(const MessageLite& base) {
  const Socket& this_ = static_cast<const Socket&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t Socket::ByteSizeLong() const {
  const Socket& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:grpc.channelz.v1.Socket)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000003fu) != 0) {
    // string remote_name = 6;
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!this_._internal_remote_name().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_remote_name());
      }
    }
    // .grpc.channelz.v1.SocketRef ref = 1;
    if ((cached_has_bits & 0x00000002u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.ref_);
    }
    // .grpc.channelz.v1.SocketData data = 2;
    if ((cached_has_bits & 0x00000004u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.data_);
    }
    // .grpc.channelz.v1.Address local = 3;
    if ((cached_has_bits & 0x00000008u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.local_);
    }
    // .grpc.channelz.v1.Address remote = 4;
    if ((cached_has_bits & 0x00000010u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.remote_);
    }
    // .grpc.channelz.v1.Security security = 5;
    if ((cached_has_bits & 0x00000020u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.security_);
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void Socket::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Socket*>(&to_msg);
  auto& from = static_cast<const Socket&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:grpc.channelz.v1.Socket)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000003fu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!from._internal_remote_name().empty()) {
        _this->_internal_set_remote_name(from._internal_remote_name());
      } else {
        if (_this->_impl_.remote_name_.IsDefault()) {
          _this->_internal_set_remote_name("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(from._impl_.ref_ != nullptr);
      if (_this->_impl_.ref_ == nullptr) {
        _this->_impl_.ref_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.ref_);
      } else {
        _this->_impl_.ref_->MergeFrom(*from._impl_.ref_);
      }
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      ABSL_DCHECK(from._impl_.data_ != nullptr);
      if (_this->_impl_.data_ == nullptr) {
        _this->_impl_.data_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.data_);
      } else {
        _this->_impl_.data_->MergeFrom(*from._impl_.data_);
      }
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      ABSL_DCHECK(from._impl_.local_ != nullptr);
      if (_this->_impl_.local_ == nullptr) {
        _this->_impl_.local_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.local_);
      } else {
        _this->_impl_.local_->MergeFrom(*from._impl_.local_);
      }
    }
    if ((cached_has_bits & 0x00000010u) != 0) {
      ABSL_DCHECK(from._impl_.remote_ != nullptr);
      if (_this->_impl_.remote_ == nullptr) {
        _this->_impl_.remote_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.remote_);
      } else {
        _this->_impl_.remote_->MergeFrom(*from._impl_.remote_);
      }
    }
    if ((cached_has_bits & 0x00000020u) != 0) {
      ABSL_DCHECK(from._impl_.security_ != nullptr);
      if (_this->_impl_.security_ == nullptr) {
        _this->_impl_.security_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.security_);
      } else {
        _this->_impl_.security_->MergeFrom(*from._impl_.security_);
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Socket::CopyFrom(const Socket& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc.channelz.v1.Socket)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Socket::InternalSwap(Socket* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.remote_name_, &other->_impl_.remote_name_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Socket, _impl_.security_)
      + sizeof(Socket::_impl_.security_)
      - PROTOBUF_FIELD_OFFSET(Socket, _impl_.ref_)>(
          reinterpret_cast<char*>(&_impl_.ref_),
          reinterpret_cast<char*>(&other->_impl_.ref_));
}

::google::protobuf::Metadata Socket::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SocketData::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<SocketData>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(SocketData, _impl_._has_bits_);
};

void SocketData::clear_last_local_stream_created_timestamp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.last_local_stream_created_timestamp_ != nullptr) _impl_.last_local_stream_created_timestamp_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void SocketData::clear_last_remote_stream_created_timestamp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.last_remote_stream_created_timestamp_ != nullptr) _impl_.last_remote_stream_created_timestamp_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
void SocketData::clear_last_message_sent_timestamp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.last_message_sent_timestamp_ != nullptr) _impl_.last_message_sent_timestamp_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
void SocketData::clear_last_message_received_timestamp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.last_message_received_timestamp_ != nullptr) _impl_.last_message_received_timestamp_->Clear();
  _impl_._has_bits_[0] &= ~0x00000008u;
}
void SocketData::clear_local_flow_control_window() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.local_flow_control_window_ != nullptr) _impl_.local_flow_control_window_->Clear();
  _impl_._has_bits_[0] &= ~0x00000010u;
}
void SocketData::clear_remote_flow_control_window() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.remote_flow_control_window_ != nullptr) _impl_.remote_flow_control_window_->Clear();
  _impl_._has_bits_[0] &= ~0x00000020u;
}
SocketData::SocketData(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, SocketData_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc.channelz.v1.SocketData)
}
PROTOBUF_NDEBUG_INLINE SocketData::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::grpc::channelz::v1::SocketData& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        option_{visibility, arena, from.option_} {}

SocketData::SocketData(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const SocketData& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, SocketData_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SocketData* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.last_local_stream_created_timestamp_ = ((cached_has_bits & 0x00000001u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.last_local_stream_created_timestamp_)
                : nullptr;
  _impl_.last_remote_stream_created_timestamp_ = ((cached_has_bits & 0x00000002u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.last_remote_stream_created_timestamp_)
                : nullptr;
  _impl_.last_message_sent_timestamp_ = ((cached_has_bits & 0x00000004u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.last_message_sent_timestamp_)
                : nullptr;
  _impl_.last_message_received_timestamp_ = ((cached_has_bits & 0x00000008u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.last_message_received_timestamp_)
                : nullptr;
  _impl_.local_flow_control_window_ = ((cached_has_bits & 0x00000010u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.local_flow_control_window_)
                : nullptr;
  _impl_.remote_flow_control_window_ = ((cached_has_bits & 0x00000020u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.remote_flow_control_window_)
                : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, streams_started_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, streams_started_),
           offsetof(Impl_, keep_alives_sent_) -
               offsetof(Impl_, streams_started_) +
               sizeof(Impl_::keep_alives_sent_));

  // @@protoc_insertion_point(copy_constructor:grpc.channelz.v1.SocketData)
}
PROTOBUF_NDEBUG_INLINE SocketData::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        option_{visibility, arena} {}

inline void SocketData::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, last_local_stream_created_timestamp_),
           0,
           offsetof(Impl_, keep_alives_sent_) -
               offsetof(Impl_, last_local_stream_created_timestamp_) +
               sizeof(Impl_::keep_alives_sent_));
}
SocketData::~SocketData() {
  // @@protoc_insertion_point(destructor:grpc.channelz.v1.SocketData)
  SharedDtor(*this);
}
inline void SocketData::SharedDtor(MessageLite& self) {
  SocketData& this_ = static_cast<SocketData&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.last_local_stream_created_timestamp_;
  delete this_._impl_.last_remote_stream_created_timestamp_;
  delete this_._impl_.last_message_sent_timestamp_;
  delete this_._impl_.last_message_received_timestamp_;
  delete this_._impl_.local_flow_control_window_;
  delete this_._impl_.remote_flow_control_window_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL SocketData::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) SocketData(arena);
}
constexpr auto SocketData::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(SocketData, _impl_.option_) +
          decltype(SocketData::_impl_.option_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(SocketData), alignof(SocketData), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&SocketData::PlacementNew_,
                                 sizeof(SocketData),
                                 alignof(SocketData));
  }
}
constexpr auto SocketData::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_SocketData_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &SocketData::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<SocketData>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &SocketData::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<SocketData>(), &SocketData::ByteSizeLong,
              &SocketData::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(SocketData, _impl_._cached_size_),
          false,
      },
      &SocketData::kDescriptorMethods,
      &descriptor_table_src_2fproto_2fgrpc_2fchannelz_2fchannelz_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull SocketData_class_data_ =
        SocketData::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
SocketData::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&SocketData_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(SocketData_class_data_.tc_table);
  return SocketData_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 13, 7, 0, 2>
SocketData::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SocketData, _impl_._has_bits_),
    0, // no _extensions_
    13, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294959104,  // skipmap
    offsetof(decltype(_table_), field_entries),
    13,  // num_field_entries
    7,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    SocketData_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::grpc::channelz::v1::SocketData>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // int64 streams_started = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(SocketData, _impl_.streams_started_), 6>(),
     {8, 6, 0, PROTOBUF_FIELD_OFFSET(SocketData, _impl_.streams_started_)}},
    // int64 streams_succeeded = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(SocketData, _impl_.streams_succeeded_), 7>(),
     {16, 7, 0, PROTOBUF_FIELD_OFFSET(SocketData, _impl_.streams_succeeded_)}},
    // int64 streams_failed = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(SocketData, _impl_.streams_failed_), 8>(),
     {24, 8, 0, PROTOBUF_FIELD_OFFSET(SocketData, _impl_.streams_failed_)}},
    // int64 messages_sent = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(SocketData, _impl_.messages_sent_), 9>(),
     {32, 9, 0, PROTOBUF_FIELD_OFFSET(SocketData, _impl_.messages_sent_)}},
    // int64 messages_received = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(SocketData, _impl_.messages_received_), 10>(),
     {40, 10, 0, PROTOBUF_FIELD_OFFSET(SocketData, _impl_.messages_received_)}},
    // int64 keep_alives_sent = 6;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(SocketData, _impl_.keep_alives_sent_), 11>(),
     {48, 11, 0, PROTOBUF_FIELD_OFFSET(SocketData, _impl_.keep_alives_sent_)}},
    // .google.protobuf.Timestamp last_local_stream_created_timestamp = 7;
    {::_pbi::TcParser::FastMtS1,
     {58, 0, 0, PROTOBUF_FIELD_OFFSET(SocketData, _impl_.last_local_stream_created_timestamp_)}},
    // .google.protobuf.Timestamp last_remote_stream_created_timestamp = 8;
    {::_pbi::TcParser::FastMtS1,
     {66, 1, 1, PROTOBUF_FIELD_OFFSET(SocketData, _impl_.last_remote_stream_created_timestamp_)}},
    // .google.protobuf.Timestamp last_message_sent_timestamp = 9;
    {::_pbi::TcParser::FastMtS1,
     {74, 2, 2, PROTOBUF_FIELD_OFFSET(SocketData, _impl_.last_message_sent_timestamp_)}},
    // .google.protobuf.Timestamp last_message_received_timestamp = 10;
    {::_pbi::TcParser::FastMtS1,
     {82, 3, 3, PROTOBUF_FIELD_OFFSET(SocketData, _impl_.last_message_received_timestamp_)}},
    // .google.protobuf.Int64Value local_flow_control_window = 11;
    {::_pbi::TcParser::FastMtS1,
     {90, 4, 4, PROTOBUF_FIELD_OFFSET(SocketData, _impl_.local_flow_control_window_)}},
    // .google.protobuf.Int64Value remote_flow_control_window = 12;
    {::_pbi::TcParser::FastMtS1,
     {98, 5, 5, PROTOBUF_FIELD_OFFSET(SocketData, _impl_.remote_flow_control_window_)}},
    // repeated .grpc.channelz.v1.SocketOption option = 13;
    {::_pbi::TcParser::FastMtR1,
     {106, 63, 6, PROTOBUF_FIELD_OFFSET(SocketData, _impl_.option_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // int64 streams_started = 1;
    {PROTOBUF_FIELD_OFFSET(SocketData, _impl_.streams_started_), _Internal::kHasBitsOffset + 6, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
    // int64 streams_succeeded = 2;
    {PROTOBUF_FIELD_OFFSET(SocketData, _impl_.streams_succeeded_), _Internal::kHasBitsOffset + 7, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
    // int64 streams_failed = 3;
    {PROTOBUF_FIELD_OFFSET(SocketData, _impl_.streams_failed_), _Internal::kHasBitsOffset + 8, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
    // int64 messages_sent = 4;
    {PROTOBUF_FIELD_OFFSET(SocketData, _impl_.messages_sent_), _Internal::kHasBitsOffset + 9, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
    // int64 messages_received = 5;
    {PROTOBUF_FIELD_OFFSET(SocketData, _impl_.messages_received_), _Internal::kHasBitsOffset + 10, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
    // int64 keep_alives_sent = 6;
    {PROTOBUF_FIELD_OFFSET(SocketData, _impl_.keep_alives_sent_), _Internal::kHasBitsOffset + 11, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
    // .google.protobuf.Timestamp last_local_stream_created_timestamp = 7;
    {PROTOBUF_FIELD_OFFSET(SocketData, _impl_.last_local_stream_created_timestamp_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .google.protobuf.Timestamp last_remote_stream_created_timestamp = 8;
    {PROTOBUF_FIELD_OFFSET(SocketData, _impl_.last_remote_stream_created_timestamp_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .google.protobuf.Timestamp last_message_sent_timestamp = 9;
    {PROTOBUF_FIELD_OFFSET(SocketData, _impl_.last_message_sent_timestamp_), _Internal::kHasBitsOffset + 2, 2,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .google.protobuf.Timestamp last_message_received_timestamp = 10;
    {PROTOBUF_FIELD_OFFSET(SocketData, _impl_.last_message_received_timestamp_), _Internal::kHasBitsOffset + 3, 3,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .google.protobuf.Int64Value local_flow_control_window = 11;
    {PROTOBUF_FIELD_OFFSET(SocketData, _impl_.local_flow_control_window_), _Internal::kHasBitsOffset + 4, 4,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .google.protobuf.Int64Value remote_flow_control_window = 12;
    {PROTOBUF_FIELD_OFFSET(SocketData, _impl_.remote_flow_control_window_), _Internal::kHasBitsOffset + 5, 5,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .grpc.channelz.v1.SocketOption option = 13;
    {PROTOBUF_FIELD_OFFSET(SocketData, _impl_.option_), -1, 6,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::google::protobuf::Timestamp>()},
      {::_pbi::TcParser::GetTable<::google::protobuf::Timestamp>()},
      {::_pbi::TcParser::GetTable<::google::protobuf::Timestamp>()},
      {::_pbi::TcParser::GetTable<::google::protobuf::Timestamp>()},
      {::_pbi::TcParser::GetTable<::google::protobuf::Int64Value>()},
      {::_pbi::TcParser::GetTable<::google::protobuf::Int64Value>()},
      {::_pbi::TcParser::GetTable<::grpc::channelz::v1::SocketOption>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void SocketData::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc.channelz.v1.SocketData)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.option_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000003fu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      ABSL_DCHECK(_impl_.last_local_stream_created_timestamp_ != nullptr);
      _impl_.last_local_stream_created_timestamp_->Clear();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(_impl_.last_remote_stream_created_timestamp_ != nullptr);
      _impl_.last_remote_stream_created_timestamp_->Clear();
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      ABSL_DCHECK(_impl_.last_message_sent_timestamp_ != nullptr);
      _impl_.last_message_sent_timestamp_->Clear();
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      ABSL_DCHECK(_impl_.last_message_received_timestamp_ != nullptr);
      _impl_.last_message_received_timestamp_->Clear();
    }
    if ((cached_has_bits & 0x00000010u) != 0) {
      ABSL_DCHECK(_impl_.local_flow_control_window_ != nullptr);
      _impl_.local_flow_control_window_->Clear();
    }
    if ((cached_has_bits & 0x00000020u) != 0) {
      ABSL_DCHECK(_impl_.remote_flow_control_window_ != nullptr);
      _impl_.remote_flow_control_window_->Clear();
    }
  }
  if ((cached_has_bits & 0x000000c0u) != 0) {
    ::memset(&_impl_.streams_started_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.streams_succeeded_) -
        reinterpret_cast<char*>(&_impl_.streams_started_)) + sizeof(_impl_.streams_succeeded_));
  }
  if ((cached_has_bits & 0x00000f00u) != 0) {
    ::memset(&_impl_.streams_failed_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.keep_alives_sent_) -
        reinterpret_cast<char*>(&_impl_.streams_failed_)) + sizeof(_impl_.keep_alives_sent_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL SocketData::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const SocketData& this_ = static_cast<const SocketData&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL SocketData::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const SocketData& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:grpc.channelz.v1.SocketData)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int64 streams_started = 1;
  if ((this_._impl_._has_bits_[0] & 0x00000040u) != 0) {
    if (this_._internal_streams_started() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt64ToArrayWithField<1>(
              stream, this_._internal_streams_started(), target);
    }
  }

  // int64 streams_succeeded = 2;
  if ((this_._impl_._has_bits_[0] & 0x00000080u) != 0) {
    if (this_._internal_streams_succeeded() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt64ToArrayWithField<2>(
              stream, this_._internal_streams_succeeded(), target);
    }
  }

  // int64 streams_failed = 3;
  if ((this_._impl_._has_bits_[0] & 0x00000100u) != 0) {
    if (this_._internal_streams_failed() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt64ToArrayWithField<3>(
              stream, this_._internal_streams_failed(), target);
    }
  }

  // int64 messages_sent = 4;
  if ((this_._impl_._has_bits_[0] & 0x00000200u) != 0) {
    if (this_._internal_messages_sent() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt64ToArrayWithField<4>(
              stream, this_._internal_messages_sent(), target);
    }
  }

  // int64 messages_received = 5;
  if ((this_._impl_._has_bits_[0] & 0x00000400u) != 0) {
    if (this_._internal_messages_received() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt64ToArrayWithField<5>(
              stream, this_._internal_messages_received(), target);
    }
  }

  // int64 keep_alives_sent = 6;
  if ((this_._impl_._has_bits_[0] & 0x00000800u) != 0) {
    if (this_._internal_keep_alives_sent() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt64ToArrayWithField<6>(
              stream, this_._internal_keep_alives_sent(), target);
    }
  }

  cached_has_bits = this_._impl_._has_bits_[0];
  // .google.protobuf.Timestamp last_local_stream_created_timestamp = 7;
  if ((cached_has_bits & 0x00000001u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        7, *this_._impl_.last_local_stream_created_timestamp_, this_._impl_.last_local_stream_created_timestamp_->GetCachedSize(), target,
        stream);
  }

  // .google.protobuf.Timestamp last_remote_stream_created_timestamp = 8;
  if ((cached_has_bits & 0x00000002u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        8, *this_._impl_.last_remote_stream_created_timestamp_, this_._impl_.last_remote_stream_created_timestamp_->GetCachedSize(), target,
        stream);
  }

  // .google.protobuf.Timestamp last_message_sent_timestamp = 9;
  if ((cached_has_bits & 0x00000004u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        9, *this_._impl_.last_message_sent_timestamp_, this_._impl_.last_message_sent_timestamp_->GetCachedSize(), target,
        stream);
  }

  // .google.protobuf.Timestamp last_message_received_timestamp = 10;
  if ((cached_has_bits & 0x00000008u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        10, *this_._impl_.last_message_received_timestamp_, this_._impl_.last_message_received_timestamp_->GetCachedSize(), target,
        stream);
  }

  // .google.protobuf.Int64Value local_flow_control_window = 11;
  if ((cached_has_bits & 0x00000010u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        11, *this_._impl_.local_flow_control_window_, this_._impl_.local_flow_control_window_->GetCachedSize(), target,
        stream);
  }

  // .google.protobuf.Int64Value remote_flow_control_window = 12;
  if ((cached_has_bits & 0x00000020u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        12, *this_._impl_.remote_flow_control_window_, this_._impl_.remote_flow_control_window_->GetCachedSize(), target,
        stream);
  }

  // repeated .grpc.channelz.v1.SocketOption option = 13;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this_._internal_option_size());
       i < n; i++) {
    const auto& repfield = this_._internal_option().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            13, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc.channelz.v1.SocketData)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t SocketData::ByteSizeLong(const MessageLite& base) {
  const SocketData& this_ = static_cast<const SocketData&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t SocketData::ByteSizeLong() const {
  const SocketData& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:grpc.channelz.v1.SocketData)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated .grpc.channelz.v1.SocketOption option = 13;
    {
      total_size += 1UL * this_._internal_option_size();
      for (const auto& msg : this_._internal_option()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
  }
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x000000ffu) != 0) {
    // .google.protobuf.Timestamp last_local_stream_created_timestamp = 7;
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.last_local_stream_created_timestamp_);
    }
    // .google.protobuf.Timestamp last_remote_stream_created_timestamp = 8;
    if ((cached_has_bits & 0x00000002u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.last_remote_stream_created_timestamp_);
    }
    // .google.protobuf.Timestamp last_message_sent_timestamp = 9;
    if ((cached_has_bits & 0x00000004u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.last_message_sent_timestamp_);
    }
    // .google.protobuf.Timestamp last_message_received_timestamp = 10;
    if ((cached_has_bits & 0x00000008u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.last_message_received_timestamp_);
    }
    // .google.protobuf.Int64Value local_flow_control_window = 11;
    if ((cached_has_bits & 0x00000010u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.local_flow_control_window_);
    }
    // .google.protobuf.Int64Value remote_flow_control_window = 12;
    if ((cached_has_bits & 0x00000020u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.remote_flow_control_window_);
    }
    // int64 streams_started = 1;
    if ((cached_has_bits & 0x00000040u) != 0) {
      if (this_._internal_streams_started() != 0) {
        total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
            this_._internal_streams_started());
      }
    }
    // int64 streams_succeeded = 2;
    if ((cached_has_bits & 0x00000080u) != 0) {
      if (this_._internal_streams_succeeded() != 0) {
        total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
            this_._internal_streams_succeeded());
      }
    }
  }
  if ((cached_has_bits & 0x00000f00u) != 0) {
    // int64 streams_failed = 3;
    if ((cached_has_bits & 0x00000100u) != 0) {
      if (this_._internal_streams_failed() != 0) {
        total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
            this_._internal_streams_failed());
      }
    }
    // int64 messages_sent = 4;
    if ((cached_has_bits & 0x00000200u) != 0) {
      if (this_._internal_messages_sent() != 0) {
        total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
            this_._internal_messages_sent());
      }
    }
    // int64 messages_received = 5;
    if ((cached_has_bits & 0x00000400u) != 0) {
      if (this_._internal_messages_received() != 0) {
        total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
            this_._internal_messages_received());
      }
    }
    // int64 keep_alives_sent = 6;
    if ((cached_has_bits & 0x00000800u) != 0) {
      if (this_._internal_keep_alives_sent() != 0) {
        total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
            this_._internal_keep_alives_sent());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void SocketData::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SocketData*>(&to_msg);
  auto& from = static_cast<const SocketData&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:grpc.channelz.v1.SocketData)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_option()->MergeFrom(
      from._internal_option());
  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x000000ffu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      ABSL_DCHECK(from._impl_.last_local_stream_created_timestamp_ != nullptr);
      if (_this->_impl_.last_local_stream_created_timestamp_ == nullptr) {
        _this->_impl_.last_local_stream_created_timestamp_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.last_local_stream_created_timestamp_);
      } else {
        _this->_impl_.last_local_stream_created_timestamp_->MergeFrom(*from._impl_.last_local_stream_created_timestamp_);
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(from._impl_.last_remote_stream_created_timestamp_ != nullptr);
      if (_this->_impl_.last_remote_stream_created_timestamp_ == nullptr) {
        _this->_impl_.last_remote_stream_created_timestamp_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.last_remote_stream_created_timestamp_);
      } else {
        _this->_impl_.last_remote_stream_created_timestamp_->MergeFrom(*from._impl_.last_remote_stream_created_timestamp_);
      }
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      ABSL_DCHECK(from._impl_.last_message_sent_timestamp_ != nullptr);
      if (_this->_impl_.last_message_sent_timestamp_ == nullptr) {
        _this->_impl_.last_message_sent_timestamp_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.last_message_sent_timestamp_);
      } else {
        _this->_impl_.last_message_sent_timestamp_->MergeFrom(*from._impl_.last_message_sent_timestamp_);
      }
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      ABSL_DCHECK(from._impl_.last_message_received_timestamp_ != nullptr);
      if (_this->_impl_.last_message_received_timestamp_ == nullptr) {
        _this->_impl_.last_message_received_timestamp_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.last_message_received_timestamp_);
      } else {
        _this->_impl_.last_message_received_timestamp_->MergeFrom(*from._impl_.last_message_received_timestamp_);
      }
    }
    if ((cached_has_bits & 0x00000010u) != 0) {
      ABSL_DCHECK(from._impl_.local_flow_control_window_ != nullptr);
      if (_this->_impl_.local_flow_control_window_ == nullptr) {
        _this->_impl_.local_flow_control_window_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.local_flow_control_window_);
      } else {
        _this->_impl_.local_flow_control_window_->MergeFrom(*from._impl_.local_flow_control_window_);
      }
    }
    if ((cached_has_bits & 0x00000020u) != 0) {
      ABSL_DCHECK(from._impl_.remote_flow_control_window_ != nullptr);
      if (_this->_impl_.remote_flow_control_window_ == nullptr) {
        _this->_impl_.remote_flow_control_window_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.remote_flow_control_window_);
      } else {
        _this->_impl_.remote_flow_control_window_->MergeFrom(*from._impl_.remote_flow_control_window_);
      }
    }
    if ((cached_has_bits & 0x00000040u) != 0) {
      if (from._internal_streams_started() != 0) {
        _this->_impl_.streams_started_ = from._impl_.streams_started_;
      }
    }
    if ((cached_has_bits & 0x00000080u) != 0) {
      if (from._internal_streams_succeeded() != 0) {
        _this->_impl_.streams_succeeded_ = from._impl_.streams_succeeded_;
      }
    }
  }
  if ((cached_has_bits & 0x00000f00u) != 0) {
    if ((cached_has_bits & 0x00000100u) != 0) {
      if (from._internal_streams_failed() != 0) {
        _this->_impl_.streams_failed_ = from._impl_.streams_failed_;
      }
    }
    if ((cached_has_bits & 0x00000200u) != 0) {
      if (from._internal_messages_sent() != 0) {
        _this->_impl_.messages_sent_ = from._impl_.messages_sent_;
      }
    }
    if ((cached_has_bits & 0x00000400u) != 0) {
      if (from._internal_messages_received() != 0) {
        _this->_impl_.messages_received_ = from._impl_.messages_received_;
      }
    }
    if ((cached_has_bits & 0x00000800u) != 0) {
      if (from._internal_keep_alives_sent() != 0) {
        _this->_impl_.keep_alives_sent_ = from._impl_.keep_alives_sent_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SocketData::CopyFrom(const SocketData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc.channelz.v1.SocketData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SocketData::InternalSwap(SocketData* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.option_.InternalSwap(&other->_impl_.option_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SocketData, _impl_.keep_alives_sent_)
      + sizeof(SocketData::_impl_.keep_alives_sent_)
      - PROTOBUF_FIELD_OFFSET(SocketData, _impl_.last_local_stream_created_timestamp_)>(
          reinterpret_cast<char*>(&_impl_.last_local_stream_created_timestamp_),
          reinterpret_cast<char*>(&other->_impl_.last_local_stream_created_timestamp_));
}

::google::protobuf::Metadata SocketData::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Address_TcpIpAddress::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<Address_TcpIpAddress>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(Address_TcpIpAddress, _impl_._has_bits_);
};

Address_TcpIpAddress::Address_TcpIpAddress(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, Address_TcpIpAddress_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc.channelz.v1.Address.TcpIpAddress)
}
PROTOBUF_NDEBUG_INLINE Address_TcpIpAddress::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::grpc::channelz::v1::Address_TcpIpAddress& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        ip_address_(arena, from.ip_address_) {}

Address_TcpIpAddress::Address_TcpIpAddress(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const Address_TcpIpAddress& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, Address_TcpIpAddress_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Address_TcpIpAddress* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.port_ = from._impl_.port_;

  // @@protoc_insertion_point(copy_constructor:grpc.channelz.v1.Address.TcpIpAddress)
}
PROTOBUF_NDEBUG_INLINE Address_TcpIpAddress::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        ip_address_(arena) {}

inline void Address_TcpIpAddress::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.port_ = {};
}
Address_TcpIpAddress::~Address_TcpIpAddress() {
  // @@protoc_insertion_point(destructor:grpc.channelz.v1.Address.TcpIpAddress)
  SharedDtor(*this);
}
inline void Address_TcpIpAddress::SharedDtor(MessageLite& self) {
  Address_TcpIpAddress& this_ = static_cast<Address_TcpIpAddress&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.ip_address_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL Address_TcpIpAddress::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) Address_TcpIpAddress(arena);
}
constexpr auto Address_TcpIpAddress::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(Address_TcpIpAddress),
                                            alignof(Address_TcpIpAddress));
}
constexpr auto Address_TcpIpAddress::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_Address_TcpIpAddress_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &Address_TcpIpAddress::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<Address_TcpIpAddress>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &Address_TcpIpAddress::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<Address_TcpIpAddress>(), &Address_TcpIpAddress::ByteSizeLong,
              &Address_TcpIpAddress::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(Address_TcpIpAddress, _impl_._cached_size_),
          false,
      },
      &Address_TcpIpAddress::kDescriptorMethods,
      &descriptor_table_src_2fproto_2fgrpc_2fchannelz_2fchannelz_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull Address_TcpIpAddress_class_data_ =
        Address_TcpIpAddress::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
Address_TcpIpAddress::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&Address_TcpIpAddress_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(Address_TcpIpAddress_class_data_.tc_table);
  return Address_TcpIpAddress_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2>
Address_TcpIpAddress::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Address_TcpIpAddress, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    Address_TcpIpAddress_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::grpc::channelz::v1::Address_TcpIpAddress>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // int32 port = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Address_TcpIpAddress, _impl_.port_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(Address_TcpIpAddress, _impl_.port_)}},
    // bytes ip_address = 1;
    {::_pbi::TcParser::FastBS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(Address_TcpIpAddress, _impl_.ip_address_)}},
  }}, {{
    65535, 65535
  }}, {{
    // bytes ip_address = 1;
    {PROTOBUF_FIELD_OFFSET(Address_TcpIpAddress, _impl_.ip_address_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBytes | ::_fl::kRepAString)},
    // int32 port = 2;
    {PROTOBUF_FIELD_OFFSET(Address_TcpIpAddress, _impl_.port_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
  }},
};
PROTOBUF_NOINLINE void Address_TcpIpAddress::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc.channelz.v1.Address.TcpIpAddress)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    _impl_.ip_address_.ClearNonDefaultToEmpty();
  }
  _impl_.port_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL Address_TcpIpAddress::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const Address_TcpIpAddress& this_ = static_cast<const Address_TcpIpAddress&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL Address_TcpIpAddress::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const Address_TcpIpAddress& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:grpc.channelz.v1.Address.TcpIpAddress)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // bytes ip_address = 1;
  if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (!this_._internal_ip_address().empty()) {
      const ::std::string& _s = this_._internal_ip_address();
      target = stream->WriteBytesMaybeAliased(1, _s, target);
    }
  }

  // int32 port = 2;
  if ((this_._impl_._has_bits_[0] & 0x00000002u) != 0) {
    if (this_._internal_port() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<2>(
              stream, this_._internal_port(), target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc.channelz.v1.Address.TcpIpAddress)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t Address_TcpIpAddress::ByteSizeLong(const MessageLite& base) {
  const Address_TcpIpAddress& this_ = static_cast<const Address_TcpIpAddress&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t Address_TcpIpAddress::ByteSizeLong() const {
  const Address_TcpIpAddress& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:grpc.channelz.v1.Address.TcpIpAddress)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    // bytes ip_address = 1;
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!this_._internal_ip_address().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                        this_._internal_ip_address());
      }
    }
    // int32 port = 2;
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (this_._internal_port() != 0) {
        total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
            this_._internal_port());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void Address_TcpIpAddress::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Address_TcpIpAddress*>(&to_msg);
  auto& from = static_cast<const Address_TcpIpAddress&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:grpc.channelz.v1.Address.TcpIpAddress)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!from._internal_ip_address().empty()) {
        _this->_internal_set_ip_address(from._internal_ip_address());
      } else {
        if (_this->_impl_.ip_address_.IsDefault()) {
          _this->_internal_set_ip_address("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (from._internal_port() != 0) {
        _this->_impl_.port_ = from._impl_.port_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Address_TcpIpAddress::CopyFrom(const Address_TcpIpAddress& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc.channelz.v1.Address.TcpIpAddress)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Address_TcpIpAddress::InternalSwap(Address_TcpIpAddress* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.ip_address_, &other->_impl_.ip_address_, arena);
  swap(_impl_.port_, other->_impl_.port_);
}

::google::protobuf::Metadata Address_TcpIpAddress::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Address_UdsAddress::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<Address_UdsAddress>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(Address_UdsAddress, _impl_._has_bits_);
};

Address_UdsAddress::Address_UdsAddress(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, Address_UdsAddress_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc.channelz.v1.Address.UdsAddress)
}
PROTOBUF_NDEBUG_INLINE Address_UdsAddress::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::grpc::channelz::v1::Address_UdsAddress& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        filename_(arena, from.filename_) {}

Address_UdsAddress::Address_UdsAddress(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const Address_UdsAddress& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, Address_UdsAddress_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Address_UdsAddress* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:grpc.channelz.v1.Address.UdsAddress)
}
PROTOBUF_NDEBUG_INLINE Address_UdsAddress::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        filename_(arena) {}

inline void Address_UdsAddress::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
Address_UdsAddress::~Address_UdsAddress() {
  // @@protoc_insertion_point(destructor:grpc.channelz.v1.Address.UdsAddress)
  SharedDtor(*this);
}
inline void Address_UdsAddress::SharedDtor(MessageLite& self) {
  Address_UdsAddress& this_ = static_cast<Address_UdsAddress&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.filename_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL Address_UdsAddress::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) Address_UdsAddress(arena);
}
constexpr auto Address_UdsAddress::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(Address_UdsAddress),
                                            alignof(Address_UdsAddress));
}
constexpr auto Address_UdsAddress::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_Address_UdsAddress_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &Address_UdsAddress::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<Address_UdsAddress>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &Address_UdsAddress::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<Address_UdsAddress>(), &Address_UdsAddress::ByteSizeLong,
              &Address_UdsAddress::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(Address_UdsAddress, _impl_._cached_size_),
          false,
      },
      &Address_UdsAddress::kDescriptorMethods,
      &descriptor_table_src_2fproto_2fgrpc_2fchannelz_2fchannelz_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull Address_UdsAddress_class_data_ =
        Address_UdsAddress::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
Address_UdsAddress::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&Address_UdsAddress_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(Address_UdsAddress_class_data_.tc_table);
  return Address_UdsAddress_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 52, 2>
Address_UdsAddress::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Address_UdsAddress, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    Address_UdsAddress_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::grpc::channelz::v1::Address_UdsAddress>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string filename = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(Address_UdsAddress, _impl_.filename_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string filename = 1;
    {PROTOBUF_FIELD_OFFSET(Address_UdsAddress, _impl_.filename_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\43\10\0\0\0\0\0\0"
    "grpc.channelz.v1.Address.UdsAddress"
    "filename"
  }},
};
PROTOBUF_NOINLINE void Address_UdsAddress::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc.channelz.v1.Address.UdsAddress)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    _impl_.filename_.ClearNonDefaultToEmpty();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL Address_UdsAddress::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const Address_UdsAddress& this_ = static_cast<const Address_UdsAddress&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL Address_UdsAddress::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const Address_UdsAddress& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:grpc.channelz.v1.Address.UdsAddress)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string filename = 1;
  if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (!this_._internal_filename().empty()) {
      const ::std::string& _s = this_._internal_filename();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "grpc.channelz.v1.Address.UdsAddress.filename");
      target = stream->WriteStringMaybeAliased(1, _s, target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc.channelz.v1.Address.UdsAddress)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t Address_UdsAddress::ByteSizeLong(const MessageLite& base) {
  const Address_UdsAddress& this_ = static_cast<const Address_UdsAddress&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t Address_UdsAddress::ByteSizeLong() const {
  const Address_UdsAddress& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:grpc.channelz.v1.Address.UdsAddress)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

   {
    // string filename = 1;
    cached_has_bits = this_._impl_._has_bits_[0];
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!this_._internal_filename().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_filename());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void Address_UdsAddress::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Address_UdsAddress*>(&to_msg);
  auto& from = static_cast<const Address_UdsAddress&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:grpc.channelz.v1.Address.UdsAddress)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    if (!from._internal_filename().empty()) {
      _this->_internal_set_filename(from._internal_filename());
    } else {
      if (_this->_impl_.filename_.IsDefault()) {
        _this->_internal_set_filename("");
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Address_UdsAddress::CopyFrom(const Address_UdsAddress& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc.channelz.v1.Address.UdsAddress)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Address_UdsAddress::InternalSwap(Address_UdsAddress* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.filename_, &other->_impl_.filename_, arena);
}

::google::protobuf::Metadata Address_UdsAddress::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Address_OtherAddress::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<Address_OtherAddress>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(Address_OtherAddress, _impl_._has_bits_);
};

void Address_OtherAddress::clear_value() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.value_ != nullptr) _impl_.value_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
Address_OtherAddress::Address_OtherAddress(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, Address_OtherAddress_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc.channelz.v1.Address.OtherAddress)
}
PROTOBUF_NDEBUG_INLINE Address_OtherAddress::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::grpc::channelz::v1::Address_OtherAddress& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        name_(arena, from.name_) {}

Address_OtherAddress::Address_OtherAddress(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const Address_OtherAddress& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, Address_OtherAddress_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Address_OtherAddress* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.value_ = ((cached_has_bits & 0x00000002u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.value_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:grpc.channelz.v1.Address.OtherAddress)
}
PROTOBUF_NDEBUG_INLINE Address_OtherAddress::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        name_(arena) {}

inline void Address_OtherAddress::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.value_ = {};
}
Address_OtherAddress::~Address_OtherAddress() {
  // @@protoc_insertion_point(destructor:grpc.channelz.v1.Address.OtherAddress)
  SharedDtor(*this);
}
inline void Address_OtherAddress::SharedDtor(MessageLite& self) {
  Address_OtherAddress& this_ = static_cast<Address_OtherAddress&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.name_.Destroy();
  delete this_._impl_.value_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL Address_OtherAddress::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) Address_OtherAddress(arena);
}
constexpr auto Address_OtherAddress::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(Address_OtherAddress),
                                            alignof(Address_OtherAddress));
}
constexpr auto Address_OtherAddress::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_Address_OtherAddress_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &Address_OtherAddress::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<Address_OtherAddress>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &Address_OtherAddress::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<Address_OtherAddress>(), &Address_OtherAddress::ByteSizeLong,
              &Address_OtherAddress::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(Address_OtherAddress, _impl_._cached_size_),
          false,
      },
      &Address_OtherAddress::kDescriptorMethods,
      &descriptor_table_src_2fproto_2fgrpc_2fchannelz_2fchannelz_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull Address_OtherAddress_class_data_ =
        Address_OtherAddress::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
Address_OtherAddress::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&Address_OtherAddress_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(Address_OtherAddress_class_data_.tc_table);
  return Address_OtherAddress_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 50, 2>
Address_OtherAddress::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Address_OtherAddress, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    Address_OtherAddress_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::grpc::channelz::v1::Address_OtherAddress>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .google.protobuf.Any value = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(Address_OtherAddress, _impl_.value_)}},
    // string name = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(Address_OtherAddress, _impl_.name_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string name = 1;
    {PROTOBUF_FIELD_OFFSET(Address_OtherAddress, _impl_.name_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .google.protobuf.Any value = 2;
    {PROTOBUF_FIELD_OFFSET(Address_OtherAddress, _impl_.value_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::google::protobuf::Any>()},
  }},
  {{
    "\45\4\0\0\0\0\0\0"
    "grpc.channelz.v1.Address.OtherAddress"
    "name"
  }},
};
PROTOBUF_NOINLINE void Address_OtherAddress::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc.channelz.v1.Address.OtherAddress)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _impl_.name_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(_impl_.value_ != nullptr);
      _impl_.value_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL Address_OtherAddress::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const Address_OtherAddress& this_ = static_cast<const Address_OtherAddress&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL Address_OtherAddress::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const Address_OtherAddress& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:grpc.channelz.v1.Address.OtherAddress)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string name = 1;
  if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (!this_._internal_name().empty()) {
      const ::std::string& _s = this_._internal_name();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "grpc.channelz.v1.Address.OtherAddress.name");
      target = stream->WriteStringMaybeAliased(1, _s, target);
    }
  }

  cached_has_bits = this_._impl_._has_bits_[0];
  // .google.protobuf.Any value = 2;
  if ((cached_has_bits & 0x00000002u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, *this_._impl_.value_, this_._impl_.value_->GetCachedSize(), target,
        stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc.channelz.v1.Address.OtherAddress)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t Address_OtherAddress::ByteSizeLong(const MessageLite& base) {
  const Address_OtherAddress& this_ = static_cast<const Address_OtherAddress&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t Address_OtherAddress::ByteSizeLong() const {
  const Address_OtherAddress& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:grpc.channelz.v1.Address.OtherAddress)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    // string name = 1;
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!this_._internal_name().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_name());
      }
    }
    // .google.protobuf.Any value = 2;
    if ((cached_has_bits & 0x00000002u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.value_);
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void Address_OtherAddress::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Address_OtherAddress*>(&to_msg);
  auto& from = static_cast<const Address_OtherAddress&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:grpc.channelz.v1.Address.OtherAddress)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!from._internal_name().empty()) {
        _this->_internal_set_name(from._internal_name());
      } else {
        if (_this->_impl_.name_.IsDefault()) {
          _this->_internal_set_name("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(from._impl_.value_ != nullptr);
      if (_this->_impl_.value_ == nullptr) {
        _this->_impl_.value_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.value_);
      } else {
        _this->_impl_.value_->MergeFrom(*from._impl_.value_);
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Address_OtherAddress::CopyFrom(const Address_OtherAddress& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc.channelz.v1.Address.OtherAddress)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Address_OtherAddress::InternalSwap(Address_OtherAddress* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, &other->_impl_.name_, arena);
  swap(_impl_.value_, other->_impl_.value_);
}

::google::protobuf::Metadata Address_OtherAddress::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Address::_Internal {
 public:
  static constexpr ::int32_t kOneofCaseOffset =
      PROTOBUF_FIELD_OFFSET(::grpc::channelz::v1::Address, _impl_._oneof_case_);
};

void Address::set_allocated_tcpip_address(::grpc::channelz::v1::Address_TcpIpAddress* PROTOBUF_NULLABLE tcpip_address) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_address();
  if (tcpip_address) {
    ::google::protobuf::Arena* submessage_arena = tcpip_address->GetArena();
    if (message_arena != submessage_arena) {
      tcpip_address = ::google::protobuf::internal::GetOwnedMessage(message_arena, tcpip_address, submessage_arena);
    }
    set_has_tcpip_address();
    _impl_.address_.tcpip_address_ = tcpip_address;
  }
  // @@protoc_insertion_point(field_set_allocated:grpc.channelz.v1.Address.tcpip_address)
}
void Address::set_allocated_uds_address(::grpc::channelz::v1::Address_UdsAddress* PROTOBUF_NULLABLE uds_address) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_address();
  if (uds_address) {
    ::google::protobuf::Arena* submessage_arena = uds_address->GetArena();
    if (message_arena != submessage_arena) {
      uds_address = ::google::protobuf::internal::GetOwnedMessage(message_arena, uds_address, submessage_arena);
    }
    set_has_uds_address();
    _impl_.address_.uds_address_ = uds_address;
  }
  // @@protoc_insertion_point(field_set_allocated:grpc.channelz.v1.Address.uds_address)
}
void Address::set_allocated_other_address(::grpc::channelz::v1::Address_OtherAddress* PROTOBUF_NULLABLE other_address) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_address();
  if (other_address) {
    ::google::protobuf::Arena* submessage_arena = other_address->GetArena();
    if (message_arena != submessage_arena) {
      other_address = ::google::protobuf::internal::GetOwnedMessage(message_arena, other_address, submessage_arena);
    }
    set_has_other_address();
    _impl_.address_.other_address_ = other_address;
  }
  // @@protoc_insertion_point(field_set_allocated:grpc.channelz.v1.Address.other_address)
}
Address::Address(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, Address_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc.channelz.v1.Address)
}
PROTOBUF_NDEBUG_INLINE Address::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::grpc::channelz::v1::Address& from_msg)
      : address_{},
        _cached_size_{0},
        _oneof_case_{from._oneof_case_[0]} {}

Address::Address(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const Address& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, Address_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Address* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  switch (address_case()) {
    case ADDRESS_NOT_SET:
      break;
      case kTcpipAddress:
        _impl_.address_.tcpip_address_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.address_.tcpip_address_);
        break;
      case kUdsAddress:
        _impl_.address_.uds_address_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.address_.uds_address_);
        break;
      case kOtherAddress:
        _impl_.address_.other_address_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.address_.other_address_);
        break;
  }

  // @@protoc_insertion_point(copy_constructor:grpc.channelz.v1.Address)
}
PROTOBUF_NDEBUG_INLINE Address::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : address_{},
        _cached_size_{0},
        _oneof_case_{} {}

inline void Address::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
Address::~Address() {
  // @@protoc_insertion_point(destructor:grpc.channelz.v1.Address)
  SharedDtor(*this);
}
inline void Address::SharedDtor(MessageLite& self) {
  Address& this_ = static_cast<Address&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  if (this_.has_address()) {
    this_.clear_address();
  }
  this_._impl_.~Impl_();
}

void Address::clear_address() {
// @@protoc_insertion_point(one_of_clear_start:grpc.channelz.v1.Address)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  switch (address_case()) {
    case kTcpipAddress: {
      if (GetArena() == nullptr) {
        delete _impl_.address_.tcpip_address_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.address_.tcpip_address_);
      }
      break;
    }
    case kUdsAddress: {
      if (GetArena() == nullptr) {
        delete _impl_.address_.uds_address_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.address_.uds_address_);
      }
      break;
    }
    case kOtherAddress: {
      if (GetArena() == nullptr) {
        delete _impl_.address_.other_address_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.address_.other_address_);
      }
      break;
    }
    case ADDRESS_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = ADDRESS_NOT_SET;
}


inline void* PROTOBUF_NONNULL Address::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) Address(arena);
}
constexpr auto Address::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(Address),
                                            alignof(Address));
}
constexpr auto Address::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_Address_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &Address::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<Address>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &Address::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<Address>(), &Address::ByteSizeLong,
              &Address::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(Address, _impl_._cached_size_),
          false,
      },
      &Address::kDescriptorMethods,
      &descriptor_table_src_2fproto_2fgrpc_2fchannelz_2fchannelz_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull Address_class_data_ =
        Address::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
Address::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&Address_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(Address_class_data_.tc_table);
  return Address_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 3, 3, 0, 2>
Address::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    3,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    Address_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::grpc::channelz::v1::Address>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // .grpc.channelz.v1.Address.TcpIpAddress tcpip_address = 1;
    {PROTOBUF_FIELD_OFFSET(Address, _impl_.address_.tcpip_address_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .grpc.channelz.v1.Address.UdsAddress uds_address = 2;
    {PROTOBUF_FIELD_OFFSET(Address, _impl_.address_.uds_address_), _Internal::kOneofCaseOffset + 0, 1,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .grpc.channelz.v1.Address.OtherAddress other_address = 3;
    {PROTOBUF_FIELD_OFFSET(Address, _impl_.address_.other_address_), _Internal::kOneofCaseOffset + 0, 2,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::grpc::channelz::v1::Address_TcpIpAddress>()},
      {::_pbi::TcParser::GetTable<::grpc::channelz::v1::Address_UdsAddress>()},
      {::_pbi::TcParser::GetTable<::grpc::channelz::v1::Address_OtherAddress>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void Address::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc.channelz.v1.Address)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_address();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL Address::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const Address& this_ = static_cast<const Address&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL Address::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const Address& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:grpc.channelz.v1.Address)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  switch (this_.address_case()) {
    case kTcpipAddress: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          1, *this_._impl_.address_.tcpip_address_, this_._impl_.address_.tcpip_address_->GetCachedSize(), target,
          stream);
      break;
    }
    case kUdsAddress: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          2, *this_._impl_.address_.uds_address_, this_._impl_.address_.uds_address_->GetCachedSize(), target,
          stream);
      break;
    }
    case kOtherAddress: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          3, *this_._impl_.address_.other_address_, this_._impl_.address_.other_address_->GetCachedSize(), target,
          stream);
      break;
    }
    default:
      break;
  }
  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc.channelz.v1.Address)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t Address::ByteSizeLong(const MessageLite& base) {
  const Address& this_ = static_cast<const Address&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t Address::ByteSizeLong() const {
  const Address& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:grpc.channelz.v1.Address)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  switch (this_.address_case()) {
    // .grpc.channelz.v1.Address.TcpIpAddress tcpip_address = 1;
    case kTcpipAddress: {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.address_.tcpip_address_);
      break;
    }
    // .grpc.channelz.v1.Address.UdsAddress uds_address = 2;
    case kUdsAddress: {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.address_.uds_address_);
      break;
    }
    // .grpc.channelz.v1.Address.OtherAddress other_address = 3;
    case kOtherAddress: {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.address_.other_address_);
      break;
    }
    case ADDRESS_NOT_SET: {
      break;
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void Address::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Address*>(&to_msg);
  auto& from = static_cast<const Address&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:grpc.channelz.v1.Address)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (const uint32_t oneof_from_case = from._impl_._oneof_case_[0]) {
    const uint32_t oneof_to_case = _this->_impl_._oneof_case_[0];
    const bool oneof_needs_init = oneof_to_case != oneof_from_case;
    if (oneof_needs_init) {
      if (oneof_to_case != 0) {
        _this->clear_address();
      }
      _this->_impl_._oneof_case_[0] = oneof_from_case;
    }

    switch (oneof_from_case) {
      case kTcpipAddress: {
        if (oneof_needs_init) {
          _this->_impl_.address_.tcpip_address_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.address_.tcpip_address_);
        } else {
          _this->_impl_.address_.tcpip_address_->MergeFrom(*from._impl_.address_.tcpip_address_);
        }
        break;
      }
      case kUdsAddress: {
        if (oneof_needs_init) {
          _this->_impl_.address_.uds_address_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.address_.uds_address_);
        } else {
          _this->_impl_.address_.uds_address_->MergeFrom(*from._impl_.address_.uds_address_);
        }
        break;
      }
      case kOtherAddress: {
        if (oneof_needs_init) {
          _this->_impl_.address_.other_address_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.address_.other_address_);
        } else {
          _this->_impl_.address_.other_address_->MergeFrom(*from._impl_.address_.other_address_);
        }
        break;
      }
      case ADDRESS_NOT_SET:
        break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Address::CopyFrom(const Address& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc.channelz.v1.Address)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Address::InternalSwap(Address* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.address_, other->_impl_.address_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::google::protobuf::Metadata Address::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Security_Tls::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<Security_Tls>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(Security_Tls, _impl_._has_bits_);
  static constexpr ::int32_t kOneofCaseOffset =
      PROTOBUF_FIELD_OFFSET(::grpc::channelz::v1::Security_Tls, _impl_._oneof_case_);
};

Security_Tls::Security_Tls(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, Security_Tls_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc.channelz.v1.Security.Tls)
}
PROTOBUF_NDEBUG_INLINE Security_Tls::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::grpc::channelz::v1::Security_Tls& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        local_certificate_(arena, from.local_certificate_),
        remote_certificate_(arena, from.remote_certificate_),
        cipher_suite_{},
        _oneof_case_{from._oneof_case_[0]} {}

Security_Tls::Security_Tls(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const Security_Tls& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, Security_Tls_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Security_Tls* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  switch (cipher_suite_case()) {
    case CIPHER_SUITE_NOT_SET:
      break;
      case kStandardName:
        new (&_impl_.cipher_suite_.standard_name_) decltype(_impl_.cipher_suite_.standard_name_){arena, from._impl_.cipher_suite_.standard_name_};
        break;
      case kOtherName:
        new (&_impl_.cipher_suite_.other_name_) decltype(_impl_.cipher_suite_.other_name_){arena, from._impl_.cipher_suite_.other_name_};
        break;
  }

  // @@protoc_insertion_point(copy_constructor:grpc.channelz.v1.Security.Tls)
}
PROTOBUF_NDEBUG_INLINE Security_Tls::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        local_certificate_(arena),
        remote_certificate_(arena),
        cipher_suite_{},
        _oneof_case_{} {}

inline void Security_Tls::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
Security_Tls::~Security_Tls() {
  // @@protoc_insertion_point(destructor:grpc.channelz.v1.Security.Tls)
  SharedDtor(*this);
}
inline void Security_Tls::SharedDtor(MessageLite& self) {
  Security_Tls& this_ = static_cast<Security_Tls&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.local_certificate_.Destroy();
  this_._impl_.remote_certificate_.Destroy();
  if (this_.has_cipher_suite()) {
    this_.clear_cipher_suite();
  }
  this_._impl_.~Impl_();
}

void Security_Tls::clear_cipher_suite() {
// @@protoc_insertion_point(one_of_clear_start:grpc.channelz.v1.Security.Tls)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  switch (cipher_suite_case()) {
    case kStandardName: {
      _impl_.cipher_suite_.standard_name_.Destroy();
      break;
    }
    case kOtherName: {
      _impl_.cipher_suite_.other_name_.Destroy();
      break;
    }
    case CIPHER_SUITE_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = CIPHER_SUITE_NOT_SET;
}


inline void* PROTOBUF_NONNULL Security_Tls::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) Security_Tls(arena);
}
constexpr auto Security_Tls::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(Security_Tls),
                                            alignof(Security_Tls));
}
constexpr auto Security_Tls::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_Security_Tls_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &Security_Tls::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<Security_Tls>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &Security_Tls::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<Security_Tls>(), &Security_Tls::ByteSizeLong,
              &Security_Tls::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(Security_Tls, _impl_._cached_size_),
          false,
      },
      &Security_Tls::kDescriptorMethods,
      &descriptor_table_src_2fproto_2fgrpc_2fchannelz_2fchannelz_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull Security_Tls_class_data_ =
        Security_Tls::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
Security_Tls::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&Security_Tls_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(Security_Tls_class_data_.tc_table);
  return Security_Tls_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 4, 0, 61, 2>
Security_Tls::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Security_Tls, _impl_._has_bits_),
    0, // no _extensions_
    4, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    Security_Tls_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::grpc::channelz::v1::Security_Tls>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // bytes remote_certificate = 4;
    {::_pbi::TcParser::FastBS1,
     {34, 1, 0, PROTOBUF_FIELD_OFFSET(Security_Tls, _impl_.remote_certificate_)}},
    // bytes local_certificate = 3;
    {::_pbi::TcParser::FastBS1,
     {26, 0, 0, PROTOBUF_FIELD_OFFSET(Security_Tls, _impl_.local_certificate_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string standard_name = 1;
    {PROTOBUF_FIELD_OFFSET(Security_Tls, _impl_.cipher_suite_.standard_name_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string other_name = 2;
    {PROTOBUF_FIELD_OFFSET(Security_Tls, _impl_.cipher_suite_.other_name_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // bytes local_certificate = 3;
    {PROTOBUF_FIELD_OFFSET(Security_Tls, _impl_.local_certificate_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBytes | ::_fl::kRepAString)},
    // bytes remote_certificate = 4;
    {PROTOBUF_FIELD_OFFSET(Security_Tls, _impl_.remote_certificate_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBytes | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\35\15\12\0\0\0\0\0"
    "grpc.channelz.v1.Security.Tls"
    "standard_name"
    "other_name"
  }},
};
PROTOBUF_NOINLINE void Security_Tls::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc.channelz.v1.Security.Tls)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _impl_.local_certificate_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      _impl_.remote_certificate_.ClearNonDefaultToEmpty();
    }
  }
  clear_cipher_suite();
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL Security_Tls::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const Security_Tls& this_ = static_cast<const Security_Tls&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL Security_Tls::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const Security_Tls& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:grpc.channelz.v1.Security.Tls)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  switch (this_.cipher_suite_case()) {
    case kStandardName: {
      const ::std::string& _s = this_._internal_standard_name();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "grpc.channelz.v1.Security.Tls.standard_name");
      target = stream->WriteStringMaybeAliased(1, _s, target);
      break;
    }
    case kOtherName: {
      const ::std::string& _s = this_._internal_other_name();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "grpc.channelz.v1.Security.Tls.other_name");
      target = stream->WriteStringMaybeAliased(2, _s, target);
      break;
    }
    default:
      break;
  }
  // bytes local_certificate = 3;
  if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (!this_._internal_local_certificate().empty()) {
      const ::std::string& _s = this_._internal_local_certificate();
      target = stream->WriteBytesMaybeAliased(3, _s, target);
    }
  }

  // bytes remote_certificate = 4;
  if ((this_._impl_._has_bits_[0] & 0x00000002u) != 0) {
    if (!this_._internal_remote_certificate().empty()) {
      const ::std::string& _s = this_._internal_remote_certificate();
      target = stream->WriteBytesMaybeAliased(4, _s, target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc.channelz.v1.Security.Tls)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t Security_Tls::ByteSizeLong(const MessageLite& base) {
  const Security_Tls& this_ = static_cast<const Security_Tls&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t Security_Tls::ByteSizeLong() const {
  const Security_Tls& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:grpc.channelz.v1.Security.Tls)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    // bytes local_certificate = 3;
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!this_._internal_local_certificate().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                        this_._internal_local_certificate());
      }
    }
    // bytes remote_certificate = 4;
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (!this_._internal_remote_certificate().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                        this_._internal_remote_certificate());
      }
    }
  }
  switch (this_.cipher_suite_case()) {
    // string standard_name = 1;
    case kStandardName: {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this_._internal_standard_name());
      break;
    }
    // string other_name = 2;
    case kOtherName: {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this_._internal_other_name());
      break;
    }
    case CIPHER_SUITE_NOT_SET: {
      break;
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void Security_Tls::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Security_Tls*>(&to_msg);
  auto& from = static_cast<const Security_Tls&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:grpc.channelz.v1.Security.Tls)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!from._internal_local_certificate().empty()) {
        _this->_internal_set_local_certificate(from._internal_local_certificate());
      } else {
        if (_this->_impl_.local_certificate_.IsDefault()) {
          _this->_internal_set_local_certificate("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (!from._internal_remote_certificate().empty()) {
        _this->_internal_set_remote_certificate(from._internal_remote_certificate());
      } else {
        if (_this->_impl_.remote_certificate_.IsDefault()) {
          _this->_internal_set_remote_certificate("");
        }
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  if (const uint32_t oneof_from_case = from._impl_._oneof_case_[0]) {
    const uint32_t oneof_to_case = _this->_impl_._oneof_case_[0];
    const bool oneof_needs_init = oneof_to_case != oneof_from_case;
    if (oneof_needs_init) {
      if (oneof_to_case != 0) {
        _this->clear_cipher_suite();
      }
      _this->_impl_._oneof_case_[0] = oneof_from_case;
    }

    switch (oneof_from_case) {
      case kStandardName: {
        if (oneof_needs_init) {
          _this->_impl_.cipher_suite_.standard_name_.InitDefault();
        }
        _this->_impl_.cipher_suite_.standard_name_.Set(from._internal_standard_name(), arena);
        break;
      }
      case kOtherName: {
        if (oneof_needs_init) {
          _this->_impl_.cipher_suite_.other_name_.InitDefault();
        }
        _this->_impl_.cipher_suite_.other_name_.Set(from._internal_other_name(), arena);
        break;
      }
      case CIPHER_SUITE_NOT_SET:
        break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Security_Tls::CopyFrom(const Security_Tls& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc.channelz.v1.Security.Tls)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Security_Tls::InternalSwap(Security_Tls* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.local_certificate_, &other->_impl_.local_certificate_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.remote_certificate_, &other->_impl_.remote_certificate_, arena);
  swap(_impl_.cipher_suite_, other->_impl_.cipher_suite_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::google::protobuf::Metadata Security_Tls::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Security_OtherSecurity::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<Security_OtherSecurity>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(Security_OtherSecurity, _impl_._has_bits_);
};

void Security_OtherSecurity::clear_value() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.value_ != nullptr) _impl_.value_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
Security_OtherSecurity::Security_OtherSecurity(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, Security_OtherSecurity_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc.channelz.v1.Security.OtherSecurity)
}
PROTOBUF_NDEBUG_INLINE Security_OtherSecurity::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::grpc::channelz::v1::Security_OtherSecurity& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        name_(arena, from.name_) {}

Security_OtherSecurity::Security_OtherSecurity(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const Security_OtherSecurity& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, Security_OtherSecurity_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Security_OtherSecurity* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.value_ = ((cached_has_bits & 0x00000002u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.value_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:grpc.channelz.v1.Security.OtherSecurity)
}
PROTOBUF_NDEBUG_INLINE Security_OtherSecurity::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        name_(arena) {}

inline void Security_OtherSecurity::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.value_ = {};
}
Security_OtherSecurity::~Security_OtherSecurity() {
  // @@protoc_insertion_point(destructor:grpc.channelz.v1.Security.OtherSecurity)
  SharedDtor(*this);
}
inline void Security_OtherSecurity::SharedDtor(MessageLite& self) {
  Security_OtherSecurity& this_ = static_cast<Security_OtherSecurity&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.name_.Destroy();
  delete this_._impl_.value_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL Security_OtherSecurity::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) Security_OtherSecurity(arena);
}
constexpr auto Security_OtherSecurity::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(Security_OtherSecurity),
                                            alignof(Security_OtherSecurity));
}
constexpr auto Security_OtherSecurity::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_Security_OtherSecurity_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &Security_OtherSecurity::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<Security_OtherSecurity>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &Security_OtherSecurity::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<Security_OtherSecurity>(), &Security_OtherSecurity::ByteSizeLong,
              &Security_OtherSecurity::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(Security_OtherSecurity, _impl_._cached_size_),
          false,
      },
      &Security_OtherSecurity::kDescriptorMethods,
      &descriptor_table_src_2fproto_2fgrpc_2fchannelz_2fchannelz_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull Security_OtherSecurity_class_data_ =
        Security_OtherSecurity::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
Security_OtherSecurity::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&Security_OtherSecurity_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(Security_OtherSecurity_class_data_.tc_table);
  return Security_OtherSecurity_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 52, 2>
Security_OtherSecurity::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Security_OtherSecurity, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    Security_OtherSecurity_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::grpc::channelz::v1::Security_OtherSecurity>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .google.protobuf.Any value = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(Security_OtherSecurity, _impl_.value_)}},
    // string name = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(Security_OtherSecurity, _impl_.name_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string name = 1;
    {PROTOBUF_FIELD_OFFSET(Security_OtherSecurity, _impl_.name_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .google.protobuf.Any value = 2;
    {PROTOBUF_FIELD_OFFSET(Security_OtherSecurity, _impl_.value_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::google::protobuf::Any>()},
  }},
  {{
    "\47\4\0\0\0\0\0\0"
    "grpc.channelz.v1.Security.OtherSecurity"
    "name"
  }},
};
PROTOBUF_NOINLINE void Security_OtherSecurity::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc.channelz.v1.Security.OtherSecurity)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _impl_.name_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(_impl_.value_ != nullptr);
      _impl_.value_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL Security_OtherSecurity::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const Security_OtherSecurity& this_ = static_cast<const Security_OtherSecurity&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL Security_OtherSecurity::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const Security_OtherSecurity& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:grpc.channelz.v1.Security.OtherSecurity)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string name = 1;
  if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (!this_._internal_name().empty()) {
      const ::std::string& _s = this_._internal_name();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "grpc.channelz.v1.Security.OtherSecurity.name");
      target = stream->WriteStringMaybeAliased(1, _s, target);
    }
  }

  cached_has_bits = this_._impl_._has_bits_[0];
  // .google.protobuf.Any value = 2;
  if ((cached_has_bits & 0x00000002u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, *this_._impl_.value_, this_._impl_.value_->GetCachedSize(), target,
        stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc.channelz.v1.Security.OtherSecurity)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t Security_OtherSecurity::ByteSizeLong(const MessageLite& base) {
  const Security_OtherSecurity& this_ = static_cast<const Security_OtherSecurity&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t Security_OtherSecurity::ByteSizeLong() const {
  const Security_OtherSecurity& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:grpc.channelz.v1.Security.OtherSecurity)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    // string name = 1;
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!this_._internal_name().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_name());
      }
    }
    // .google.protobuf.Any value = 2;
    if ((cached_has_bits & 0x00000002u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.value_);
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void Security_OtherSecurity::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Security_OtherSecurity*>(&to_msg);
  auto& from = static_cast<const Security_OtherSecurity&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:grpc.channelz.v1.Security.OtherSecurity)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!from._internal_name().empty()) {
        _this->_internal_set_name(from._internal_name());
      } else {
        if (_this->_impl_.name_.IsDefault()) {
          _this->_internal_set_name("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(from._impl_.value_ != nullptr);
      if (_this->_impl_.value_ == nullptr) {
        _this->_impl_.value_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.value_);
      } else {
        _this->_impl_.value_->MergeFrom(*from._impl_.value_);
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Security_OtherSecurity::CopyFrom(const Security_OtherSecurity& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc.channelz.v1.Security.OtherSecurity)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Security_OtherSecurity::InternalSwap(Security_OtherSecurity* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, &other->_impl_.name_, arena);
  swap(_impl_.value_, other->_impl_.value_);
}

::google::protobuf::Metadata Security_OtherSecurity::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Security::_Internal {
 public:
  static constexpr ::int32_t kOneofCaseOffset =
      PROTOBUF_FIELD_OFFSET(::grpc::channelz::v1::Security, _impl_._oneof_case_);
};

void Security::set_allocated_tls(::grpc::channelz::v1::Security_Tls* PROTOBUF_NULLABLE tls) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_model();
  if (tls) {
    ::google::protobuf::Arena* submessage_arena = tls->GetArena();
    if (message_arena != submessage_arena) {
      tls = ::google::protobuf::internal::GetOwnedMessage(message_arena, tls, submessage_arena);
    }
    set_has_tls();
    _impl_.model_.tls_ = tls;
  }
  // @@protoc_insertion_point(field_set_allocated:grpc.channelz.v1.Security.tls)
}
void Security::set_allocated_other(::grpc::channelz::v1::Security_OtherSecurity* PROTOBUF_NULLABLE other) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_model();
  if (other) {
    ::google::protobuf::Arena* submessage_arena = other->GetArena();
    if (message_arena != submessage_arena) {
      other = ::google::protobuf::internal::GetOwnedMessage(message_arena, other, submessage_arena);
    }
    set_has_other();
    _impl_.model_.other_ = other;
  }
  // @@protoc_insertion_point(field_set_allocated:grpc.channelz.v1.Security.other)
}
Security::Security(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, Security_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc.channelz.v1.Security)
}
PROTOBUF_NDEBUG_INLINE Security::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::grpc::channelz::v1::Security& from_msg)
      : model_{},
        _cached_size_{0},
        _oneof_case_{from._oneof_case_[0]} {}

Security::Security(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const Security& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, Security_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Security* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  switch (model_case()) {
    case MODEL_NOT_SET:
      break;
      case kTls:
        _impl_.model_.tls_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.model_.tls_);
        break;
      case kOther:
        _impl_.model_.other_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.model_.other_);
        break;
  }

  // @@protoc_insertion_point(copy_constructor:grpc.channelz.v1.Security)
}
PROTOBUF_NDEBUG_INLINE Security::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : model_{},
        _cached_size_{0},
        _oneof_case_{} {}

inline void Security::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
Security::~Security() {
  // @@protoc_insertion_point(destructor:grpc.channelz.v1.Security)
  SharedDtor(*this);
}
inline void Security::SharedDtor(MessageLite& self) {
  Security& this_ = static_cast<Security&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  if (this_.has_model()) {
    this_.clear_model();
  }
  this_._impl_.~Impl_();
}

void Security::clear_model() {
// @@protoc_insertion_point(one_of_clear_start:grpc.channelz.v1.Security)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  switch (model_case()) {
    case kTls: {
      if (GetArena() == nullptr) {
        delete _impl_.model_.tls_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.model_.tls_);
      }
      break;
    }
    case kOther: {
      if (GetArena() == nullptr) {
        delete _impl_.model_.other_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.model_.other_);
      }
      break;
    }
    case MODEL_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = MODEL_NOT_SET;
}


inline void* PROTOBUF_NONNULL Security::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) Security(arena);
}
constexpr auto Security::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(Security),
                                            alignof(Security));
}
constexpr auto Security::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_Security_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &Security::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<Security>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &Security::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<Security>(), &Security::ByteSizeLong,
              &Security::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(Security, _impl_._cached_size_),
          false,
      },
      &Security::kDescriptorMethods,
      &descriptor_table_src_2fproto_2fgrpc_2fchannelz_2fchannelz_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull Security_class_data_ =
        Security::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
Security::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&Security_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(Security_class_data_.tc_table);
  return Security_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 2, 2, 0, 2>
Security::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    Security_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::grpc::channelz::v1::Security>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // .grpc.channelz.v1.Security.Tls tls = 1;
    {PROTOBUF_FIELD_OFFSET(Security, _impl_.model_.tls_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .grpc.channelz.v1.Security.OtherSecurity other = 2;
    {PROTOBUF_FIELD_OFFSET(Security, _impl_.model_.other_), _Internal::kOneofCaseOffset + 0, 1,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::grpc::channelz::v1::Security_Tls>()},
      {::_pbi::TcParser::GetTable<::grpc::channelz::v1::Security_OtherSecurity>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void Security::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc.channelz.v1.Security)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_model();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL Security::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const Security& this_ = static_cast<const Security&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL Security::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const Security& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:grpc.channelz.v1.Security)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  switch (this_.model_case()) {
    case kTls: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          1, *this_._impl_.model_.tls_, this_._impl_.model_.tls_->GetCachedSize(), target,
          stream);
      break;
    }
    case kOther: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          2, *this_._impl_.model_.other_, this_._impl_.model_.other_->GetCachedSize(), target,
          stream);
      break;
    }
    default:
      break;
  }
  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc.channelz.v1.Security)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t Security::ByteSizeLong(const MessageLite& base) {
  const Security& this_ = static_cast<const Security&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t Security::ByteSizeLong() const {
  const Security& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:grpc.channelz.v1.Security)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  switch (this_.model_case()) {
    // .grpc.channelz.v1.Security.Tls tls = 1;
    case kTls: {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.model_.tls_);
      break;
    }
    // .grpc.channelz.v1.Security.OtherSecurity other = 2;
    case kOther: {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.model_.other_);
      break;
    }
    case MODEL_NOT_SET: {
      break;
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void Security::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Security*>(&to_msg);
  auto& from = static_cast<const Security&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:grpc.channelz.v1.Security)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (const uint32_t oneof_from_case = from._impl_._oneof_case_[0]) {
    const uint32_t oneof_to_case = _this->_impl_._oneof_case_[0];
    const bool oneof_needs_init = oneof_to_case != oneof_from_case;
    if (oneof_needs_init) {
      if (oneof_to_case != 0) {
        _this->clear_model();
      }
      _this->_impl_._oneof_case_[0] = oneof_from_case;
    }

    switch (oneof_from_case) {
      case kTls: {
        if (oneof_needs_init) {
          _this->_impl_.model_.tls_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.model_.tls_);
        } else {
          _this->_impl_.model_.tls_->MergeFrom(*from._impl_.model_.tls_);
        }
        break;
      }
      case kOther: {
        if (oneof_needs_init) {
          _this->_impl_.model_.other_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.model_.other_);
        } else {
          _this->_impl_.model_.other_->MergeFrom(*from._impl_.model_.other_);
        }
        break;
      }
      case MODEL_NOT_SET:
        break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Security::CopyFrom(const Security& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc.channelz.v1.Security)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Security::InternalSwap(Security* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.model_, other->_impl_.model_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::google::protobuf::Metadata Security::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SocketOption::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<SocketOption>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(SocketOption, _impl_._has_bits_);
};

void SocketOption::clear_additional() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.additional_ != nullptr) _impl_.additional_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
SocketOption::SocketOption(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, SocketOption_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc.channelz.v1.SocketOption)
}
PROTOBUF_NDEBUG_INLINE SocketOption::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::grpc::channelz::v1::SocketOption& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        name_(arena, from.name_),
        value_(arena, from.value_) {}

SocketOption::SocketOption(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const SocketOption& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, SocketOption_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SocketOption* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.additional_ = ((cached_has_bits & 0x00000004u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.additional_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:grpc.channelz.v1.SocketOption)
}
PROTOBUF_NDEBUG_INLINE SocketOption::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        name_(arena),
        value_(arena) {}

inline void SocketOption::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.additional_ = {};
}
SocketOption::~SocketOption() {
  // @@protoc_insertion_point(destructor:grpc.channelz.v1.SocketOption)
  SharedDtor(*this);
}
inline void SocketOption::SharedDtor(MessageLite& self) {
  SocketOption& this_ = static_cast<SocketOption&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.name_.Destroy();
  this_._impl_.value_.Destroy();
  delete this_._impl_.additional_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL SocketOption::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) SocketOption(arena);
}
constexpr auto SocketOption::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(SocketOption),
                                            alignof(SocketOption));
}
constexpr auto SocketOption::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_SocketOption_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &SocketOption::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<SocketOption>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &SocketOption::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<SocketOption>(), &SocketOption::ByteSizeLong,
              &SocketOption::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(SocketOption, _impl_._cached_size_),
          false,
      },
      &SocketOption::kDescriptorMethods,
      &descriptor_table_src_2fproto_2fgrpc_2fchannelz_2fchannelz_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull SocketOption_class_data_ =
        SocketOption::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
SocketOption::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&SocketOption_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(SocketOption_class_data_.tc_table);
  return SocketOption_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 1, 47, 2>
SocketOption::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SocketOption, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    SocketOption_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::grpc::channelz::v1::SocketOption>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string name = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(SocketOption, _impl_.name_)}},
    // string value = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(SocketOption, _impl_.value_)}},
    // .google.protobuf.Any additional = 3;
    {::_pbi::TcParser::FastMtS1,
     {26, 2, 0, PROTOBUF_FIELD_OFFSET(SocketOption, _impl_.additional_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string name = 1;
    {PROTOBUF_FIELD_OFFSET(SocketOption, _impl_.name_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string value = 2;
    {PROTOBUF_FIELD_OFFSET(SocketOption, _impl_.value_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .google.protobuf.Any additional = 3;
    {PROTOBUF_FIELD_OFFSET(SocketOption, _impl_.additional_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::google::protobuf::Any>()},
  }},
  {{
    "\35\4\5\0\0\0\0\0"
    "grpc.channelz.v1.SocketOption"
    "name"
    "value"
  }},
};
PROTOBUF_NOINLINE void SocketOption::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc.channelz.v1.SocketOption)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _impl_.name_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      _impl_.value_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      ABSL_DCHECK(_impl_.additional_ != nullptr);
      _impl_.additional_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL SocketOption::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const SocketOption& this_ = static_cast<const SocketOption&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL SocketOption::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const SocketOption& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:grpc.channelz.v1.SocketOption)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string name = 1;
  if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (!this_._internal_name().empty()) {
      const ::std::string& _s = this_._internal_name();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "grpc.channelz.v1.SocketOption.name");
      target = stream->WriteStringMaybeAliased(1, _s, target);
    }
  }

  // string value = 2;
  if ((this_._impl_._has_bits_[0] & 0x00000002u) != 0) {
    if (!this_._internal_value().empty()) {
      const ::std::string& _s = this_._internal_value();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "grpc.channelz.v1.SocketOption.value");
      target = stream->WriteStringMaybeAliased(2, _s, target);
    }
  }

  cached_has_bits = this_._impl_._has_bits_[0];
  // .google.protobuf.Any additional = 3;
  if ((cached_has_bits & 0x00000004u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        3, *this_._impl_.additional_, this_._impl_.additional_->GetCachedSize(), target,
        stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc.channelz.v1.SocketOption)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t SocketOption::ByteSizeLong(const MessageLite& base) {
  const SocketOption& this_ = static_cast<const SocketOption&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t SocketOption::ByteSizeLong() const {
  const SocketOption& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:grpc.channelz.v1.SocketOption)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    // string name = 1;
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!this_._internal_name().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_name());
      }
    }
    // string value = 2;
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (!this_._internal_value().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_value());
      }
    }
    // .google.protobuf.Any additional = 3;
    if ((cached_has_bits & 0x00000004u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.additional_);
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void SocketOption::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SocketOption*>(&to_msg);
  auto& from = static_cast<const SocketOption&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:grpc.channelz.v1.SocketOption)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!from._internal_name().empty()) {
        _this->_internal_set_name(from._internal_name());
      } else {
        if (_this->_impl_.name_.IsDefault()) {
          _this->_internal_set_name("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (!from._internal_value().empty()) {
        _this->_internal_set_value(from._internal_value());
      } else {
        if (_this->_impl_.value_.IsDefault()) {
          _this->_internal_set_value("");
        }
      }
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      ABSL_DCHECK(from._impl_.additional_ != nullptr);
      if (_this->_impl_.additional_ == nullptr) {
        _this->_impl_.additional_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.additional_);
      } else {
        _this->_impl_.additional_->MergeFrom(*from._impl_.additional_);
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SocketOption::CopyFrom(const SocketOption& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc.channelz.v1.SocketOption)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SocketOption::InternalSwap(SocketOption* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, &other->_impl_.name_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.value_, &other->_impl_.value_, arena);
  swap(_impl_.additional_, other->_impl_.additional_);
}

::google::protobuf::Metadata SocketOption::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SocketOptionTimeout::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<SocketOptionTimeout>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(SocketOptionTimeout, _impl_._has_bits_);
};

void SocketOptionTimeout::clear_duration() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.duration_ != nullptr) _impl_.duration_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
SocketOptionTimeout::SocketOptionTimeout(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, SocketOptionTimeout_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc.channelz.v1.SocketOptionTimeout)
}
PROTOBUF_NDEBUG_INLINE SocketOptionTimeout::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::grpc::channelz::v1::SocketOptionTimeout& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

SocketOptionTimeout::SocketOptionTimeout(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const SocketOptionTimeout& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, SocketOptionTimeout_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SocketOptionTimeout* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.duration_ = ((cached_has_bits & 0x00000001u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.duration_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:grpc.channelz.v1.SocketOptionTimeout)
}
PROTOBUF_NDEBUG_INLINE SocketOptionTimeout::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void SocketOptionTimeout::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.duration_ = {};
}
SocketOptionTimeout::~SocketOptionTimeout() {
  // @@protoc_insertion_point(destructor:grpc.channelz.v1.SocketOptionTimeout)
  SharedDtor(*this);
}
inline void SocketOptionTimeout::SharedDtor(MessageLite& self) {
  SocketOptionTimeout& this_ = static_cast<SocketOptionTimeout&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.duration_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL SocketOptionTimeout::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) SocketOptionTimeout(arena);
}
constexpr auto SocketOptionTimeout::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(SocketOptionTimeout),
                                            alignof(SocketOptionTimeout));
}
constexpr auto SocketOptionTimeout::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_SocketOptionTimeout_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &SocketOptionTimeout::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<SocketOptionTimeout>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &SocketOptionTimeout::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<SocketOptionTimeout>(), &SocketOptionTimeout::ByteSizeLong,
              &SocketOptionTimeout::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(SocketOptionTimeout, _impl_._cached_size_),
          false,
      },
      &SocketOptionTimeout::kDescriptorMethods,
      &descriptor_table_src_2fproto_2fgrpc_2fchannelz_2fchannelz_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull SocketOptionTimeout_class_data_ =
        SocketOptionTimeout::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
SocketOptionTimeout::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&SocketOptionTimeout_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(SocketOptionTimeout_class_data_.tc_table);
  return SocketOptionTimeout_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2>
SocketOptionTimeout::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SocketOptionTimeout, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    SocketOptionTimeout_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::grpc::channelz::v1::SocketOptionTimeout>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .google.protobuf.Duration duration = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(SocketOptionTimeout, _impl_.duration_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .google.protobuf.Duration duration = 1;
    {PROTOBUF_FIELD_OFFSET(SocketOptionTimeout, _impl_.duration_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::google::protobuf::Duration>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void SocketOptionTimeout::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc.channelz.v1.SocketOptionTimeout)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    ABSL_DCHECK(_impl_.duration_ != nullptr);
    _impl_.duration_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL SocketOptionTimeout::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const SocketOptionTimeout& this_ = static_cast<const SocketOptionTimeout&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL SocketOptionTimeout::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const SocketOptionTimeout& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:grpc.channelz.v1.SocketOptionTimeout)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // .google.protobuf.Duration duration = 1;
  if ((cached_has_bits & 0x00000001u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *this_._impl_.duration_, this_._impl_.duration_->GetCachedSize(), target,
        stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc.channelz.v1.SocketOptionTimeout)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t SocketOptionTimeout::ByteSizeLong(const MessageLite& base) {
  const SocketOptionTimeout& this_ = static_cast<const SocketOptionTimeout&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t SocketOptionTimeout::ByteSizeLong() const {
  const SocketOptionTimeout& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:grpc.channelz.v1.SocketOptionTimeout)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

   {
    // .google.protobuf.Duration duration = 1;
    cached_has_bits = this_._impl_._has_bits_[0];
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.duration_);
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void SocketOptionTimeout::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SocketOptionTimeout*>(&to_msg);
  auto& from = static_cast<const SocketOptionTimeout&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:grpc.channelz.v1.SocketOptionTimeout)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    ABSL_DCHECK(from._impl_.duration_ != nullptr);
    if (_this->_impl_.duration_ == nullptr) {
      _this->_impl_.duration_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.duration_);
    } else {
      _this->_impl_.duration_->MergeFrom(*from._impl_.duration_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SocketOptionTimeout::CopyFrom(const SocketOptionTimeout& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc.channelz.v1.SocketOptionTimeout)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SocketOptionTimeout::InternalSwap(SocketOptionTimeout* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.duration_, other->_impl_.duration_);
}

::google::protobuf::Metadata SocketOptionTimeout::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SocketOptionLinger::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<SocketOptionLinger>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(SocketOptionLinger, _impl_._has_bits_);
};

void SocketOptionLinger::clear_duration() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.duration_ != nullptr) _impl_.duration_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
SocketOptionLinger::SocketOptionLinger(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, SocketOptionLinger_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc.channelz.v1.SocketOptionLinger)
}
PROTOBUF_NDEBUG_INLINE SocketOptionLinger::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::grpc::channelz::v1::SocketOptionLinger& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

SocketOptionLinger::SocketOptionLinger(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const SocketOptionLinger& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, SocketOptionLinger_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SocketOptionLinger* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.duration_ = ((cached_has_bits & 0x00000001u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.duration_)
                : nullptr;
  _impl_.active_ = from._impl_.active_;

  // @@protoc_insertion_point(copy_constructor:grpc.channelz.v1.SocketOptionLinger)
}
PROTOBUF_NDEBUG_INLINE SocketOptionLinger::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void SocketOptionLinger::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, duration_),
           0,
           offsetof(Impl_, active_) -
               offsetof(Impl_, duration_) +
               sizeof(Impl_::active_));
}
SocketOptionLinger::~SocketOptionLinger() {
  // @@protoc_insertion_point(destructor:grpc.channelz.v1.SocketOptionLinger)
  SharedDtor(*this);
}
inline void SocketOptionLinger::SharedDtor(MessageLite& self) {
  SocketOptionLinger& this_ = static_cast<SocketOptionLinger&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.duration_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL SocketOptionLinger::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) SocketOptionLinger(arena);
}
constexpr auto SocketOptionLinger::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(SocketOptionLinger),
                                            alignof(SocketOptionLinger));
}
constexpr auto SocketOptionLinger::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_SocketOptionLinger_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &SocketOptionLinger::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<SocketOptionLinger>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &SocketOptionLinger::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<SocketOptionLinger>(), &SocketOptionLinger::ByteSizeLong,
              &SocketOptionLinger::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(SocketOptionLinger, _impl_._cached_size_),
          false,
      },
      &SocketOptionLinger::kDescriptorMethods,
      &descriptor_table_src_2fproto_2fgrpc_2fchannelz_2fchannelz_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull SocketOptionLinger_class_data_ =
        SocketOptionLinger::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
SocketOptionLinger::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&SocketOptionLinger_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(SocketOptionLinger_class_data_.tc_table);
  return SocketOptionLinger_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 0, 2>
SocketOptionLinger::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SocketOptionLinger, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    SocketOptionLinger_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::grpc::channelz::v1::SocketOptionLinger>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .google.protobuf.Duration duration = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(SocketOptionLinger, _impl_.duration_)}},
    // bool active = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(SocketOptionLinger, _impl_.active_), 1>(),
     {8, 1, 0, PROTOBUF_FIELD_OFFSET(SocketOptionLinger, _impl_.active_)}},
  }}, {{
    65535, 65535
  }}, {{
    // bool active = 1;
    {PROTOBUF_FIELD_OFFSET(SocketOptionLinger, _impl_.active_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // .google.protobuf.Duration duration = 2;
    {PROTOBUF_FIELD_OFFSET(SocketOptionLinger, _impl_.duration_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::google::protobuf::Duration>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void SocketOptionLinger::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc.channelz.v1.SocketOptionLinger)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    ABSL_DCHECK(_impl_.duration_ != nullptr);
    _impl_.duration_->Clear();
  }
  _impl_.active_ = false;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL SocketOptionLinger::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const SocketOptionLinger& this_ = static_cast<const SocketOptionLinger&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL SocketOptionLinger::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const SocketOptionLinger& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:grpc.channelz.v1.SocketOptionLinger)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // bool active = 1;
  if ((this_._impl_._has_bits_[0] & 0x00000002u) != 0) {
    if (this_._internal_active() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteBoolToArray(
          1, this_._internal_active(), target);
    }
  }

  cached_has_bits = this_._impl_._has_bits_[0];
  // .google.protobuf.Duration duration = 2;
  if ((cached_has_bits & 0x00000001u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, *this_._impl_.duration_, this_._impl_.duration_->GetCachedSize(), target,
        stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc.channelz.v1.SocketOptionLinger)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t SocketOptionLinger::ByteSizeLong(const MessageLite& base) {
  const SocketOptionLinger& this_ = static_cast<const SocketOptionLinger&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t SocketOptionLinger::ByteSizeLong() const {
  const SocketOptionLinger& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:grpc.channelz.v1.SocketOptionLinger)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    // .google.protobuf.Duration duration = 2;
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.duration_);
    }
    // bool active = 1;
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (this_._internal_active() != 0) {
        total_size += 2;
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void SocketOptionLinger::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SocketOptionLinger*>(&to_msg);
  auto& from = static_cast<const SocketOptionLinger&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:grpc.channelz.v1.SocketOptionLinger)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      ABSL_DCHECK(from._impl_.duration_ != nullptr);
      if (_this->_impl_.duration_ == nullptr) {
        _this->_impl_.duration_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.duration_);
      } else {
        _this->_impl_.duration_->MergeFrom(*from._impl_.duration_);
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (from._internal_active() != 0) {
        _this->_impl_.active_ = from._impl_.active_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SocketOptionLinger::CopyFrom(const SocketOptionLinger& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc.channelz.v1.SocketOptionLinger)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SocketOptionLinger::InternalSwap(SocketOptionLinger* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SocketOptionLinger, _impl_.active_)
      + sizeof(SocketOptionLinger::_impl_.active_)
      - PROTOBUF_FIELD_OFFSET(SocketOptionLinger, _impl_.duration_)>(
          reinterpret_cast<char*>(&_impl_.duration_),
          reinterpret_cast<char*>(&other->_impl_.duration_));
}

::google::protobuf::Metadata SocketOptionLinger::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SocketOptionTcpInfo::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<SocketOptionTcpInfo>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(SocketOptionTcpInfo, _impl_._has_bits_);
};

SocketOptionTcpInfo::SocketOptionTcpInfo(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, SocketOptionTcpInfo_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc.channelz.v1.SocketOptionTcpInfo)
}
SocketOptionTcpInfo::SocketOptionTcpInfo(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const SocketOptionTcpInfo& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, SocketOptionTcpInfo_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
}
PROTOBUF_NDEBUG_INLINE SocketOptionTcpInfo::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void SocketOptionTcpInfo::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, tcpi_state_),
           0,
           offsetof(Impl_, tcpi_reordering_) -
               offsetof(Impl_, tcpi_state_) +
               sizeof(Impl_::tcpi_reordering_));
}
SocketOptionTcpInfo::~SocketOptionTcpInfo() {
  // @@protoc_insertion_point(destructor:grpc.channelz.v1.SocketOptionTcpInfo)
  SharedDtor(*this);
}
inline void SocketOptionTcpInfo::SharedDtor(MessageLite& self) {
  SocketOptionTcpInfo& this_ = static_cast<SocketOptionTcpInfo&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL SocketOptionTcpInfo::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) SocketOptionTcpInfo(arena);
}
constexpr auto SocketOptionTcpInfo::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(SocketOptionTcpInfo),
                                            alignof(SocketOptionTcpInfo));
}
constexpr auto SocketOptionTcpInfo::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_SocketOptionTcpInfo_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &SocketOptionTcpInfo::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<SocketOptionTcpInfo>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &SocketOptionTcpInfo::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<SocketOptionTcpInfo>(), &SocketOptionTcpInfo::ByteSizeLong,
              &SocketOptionTcpInfo::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(SocketOptionTcpInfo, _impl_._cached_size_),
          false,
      },
      &SocketOptionTcpInfo::kDescriptorMethods,
      &descriptor_table_src_2fproto_2fgrpc_2fchannelz_2fchannelz_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull SocketOptionTcpInfo_class_data_ =
        SocketOptionTcpInfo::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
SocketOptionTcpInfo::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&SocketOptionTcpInfo_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(SocketOptionTcpInfo_class_data_.tc_table);
  return SocketOptionTcpInfo_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<5, 29, 0, 0, 2>
SocketOptionTcpInfo::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SocketOptionTcpInfo, _impl_._has_bits_),
    0, // no _extensions_
    29, 248,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    3758096384,  // skipmap
    offsetof(decltype(_table_), field_entries),
    29,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    SocketOptionTcpInfo_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::grpc::channelz::v1::SocketOptionTcpInfo>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // uint32 tcpi_state = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SocketOptionTcpInfo, _impl_.tcpi_state_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(SocketOptionTcpInfo, _impl_.tcpi_state_)}},
    // uint32 tcpi_ca_state = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SocketOptionTcpInfo, _impl_.tcpi_ca_state_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(SocketOptionTcpInfo, _impl_.tcpi_ca_state_)}},
    // uint32 tcpi_retransmits = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SocketOptionTcpInfo, _impl_.tcpi_retransmits_), 2>(),
     {24, 2, 0, PROTOBUF_FIELD_OFFSET(SocketOptionTcpInfo, _impl_.tcpi_retransmits_)}},
    // uint32 tcpi_probes = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SocketOptionTcpInfo, _impl_.tcpi_probes_), 3>(),
     {32, 3, 0, PROTOBUF_FIELD_OFFSET(SocketOptionTcpInfo, _impl_.tcpi_probes_)}},
    // uint32 tcpi_backoff = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SocketOptionTcpInfo, _impl_.tcpi_backoff_), 4>(),
     {40, 4, 0, PROTOBUF_FIELD_OFFSET(SocketOptionTcpInfo, _impl_.tcpi_backoff_)}},
    // uint32 tcpi_options = 6;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SocketOptionTcpInfo, _impl_.tcpi_options_), 5>(),
     {48, 5, 0, PROTOBUF_FIELD_OFFSET(SocketOptionTcpInfo, _impl_.tcpi_options_)}},
    // uint32 tcpi_snd_wscale = 7;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SocketOptionTcpInfo, _impl_.tcpi_snd_wscale_), 6>(),
     {56, 6, 0, PROTOBUF_FIELD_OFFSET(SocketOptionTcpInfo, _impl_.tcpi_snd_wscale_)}},
    // uint32 tcpi_rcv_wscale = 8;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SocketOptionTcpInfo, _impl_.tcpi_rcv_wscale_), 7>(),
     {64, 7, 0, PROTOBUF_FIELD_OFFSET(SocketOptionTcpInfo, _impl_.tcpi_rcv_wscale_)}},
    // uint32 tcpi_rto = 9;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SocketOptionTcpInfo, _impl_.tcpi_rto_), 8>(),
     {72, 8, 0, PROTOBUF_FIELD_OFFSET(SocketOptionTcpInfo, _impl_.tcpi_rto_)}},
    // uint32 tcpi_ato = 10;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SocketOptionTcpInfo, _impl_.tcpi_ato_), 9>(),
     {80, 9, 0, PROTOBUF_FIELD_OFFSET(SocketOptionTcpInfo, _impl_.tcpi_ato_)}},
    // uint32 tcpi_snd_mss = 11;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SocketOptionTcpInfo, _impl_.tcpi_snd_mss_), 10>(),
     {88, 10, 0, PROTOBUF_FIELD_OFFSET(SocketOptionTcpInfo, _impl_.tcpi_snd_mss_)}},
    // uint32 tcpi_rcv_mss = 12;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SocketOptionTcpInfo, _impl_.tcpi_rcv_mss_), 11>(),
     {96, 11, 0, PROTOBUF_FIELD_OFFSET(SocketOptionTcpInfo, _impl_.tcpi_rcv_mss_)}},
    // uint32 tcpi_unacked = 13;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SocketOptionTcpInfo, _impl_.tcpi_unacked_), 12>(),
     {104, 12, 0, PROTOBUF_FIELD_OFFSET(SocketOptionTcpInfo, _impl_.tcpi_unacked_)}},
    // uint32 tcpi_sacked = 14;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SocketOptionTcpInfo, _impl_.tcpi_sacked_), 13>(),
     {112, 13, 0, PROTOBUF_FIELD_OFFSET(SocketOptionTcpInfo, _impl_.tcpi_sacked_)}},
    // uint32 tcpi_lost = 15;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SocketOptionTcpInfo, _impl_.tcpi_lost_), 14>(),
     {120, 14, 0, PROTOBUF_FIELD_OFFSET(SocketOptionTcpInfo, _impl_.tcpi_lost_)}},
    // uint32 tcpi_retrans = 16;
    {::_pbi::TcParser::FastV32S2,
     {384, 15, 0, PROTOBUF_FIELD_OFFSET(SocketOptionTcpInfo, _impl_.tcpi_retrans_)}},
    // uint32 tcpi_fackets = 17;
    {::_pbi::TcParser::FastV32S2,
     {392, 16, 0, PROTOBUF_FIELD_OFFSET(SocketOptionTcpInfo, _impl_.tcpi_fackets_)}},
    // uint32 tcpi_last_data_sent = 18;
    {::_pbi::TcParser::FastV32S2,
     {400, 17, 0, PROTOBUF_FIELD_OFFSET(SocketOptionTcpInfo, _impl_.tcpi_last_data_sent_)}},
    // uint32 tcpi_last_ack_sent = 19;
    {::_pbi::TcParser::FastV32S2,
     {408, 18, 0, PROTOBUF_FIELD_OFFSET(SocketOptionTcpInfo, _impl_.tcpi_last_ack_sent_)}},
    // uint32 tcpi_last_data_recv = 20;
    {::_pbi::TcParser::FastV32S2,
     {416, 19, 0, PROTOBUF_FIELD_OFFSET(SocketOptionTcpInfo, _impl_.tcpi_last_data_recv_)}},
    // uint32 tcpi_last_ack_recv = 21;
    {::_pbi::TcParser::FastV32S2,
     {424, 20, 0, PROTOBUF_FIELD_OFFSET(SocketOptionTcpInfo, _impl_.tcpi_last_ack_recv_)}},
    // uint32 tcpi_pmtu = 22;
    {::_pbi::TcParser::FastV32S2,
     {432, 21, 0, PROTOBUF_FIELD_OFFSET(SocketOptionTcpInfo, _impl_.tcpi_pmtu_)}},
    // uint32 tcpi_rcv_ssthresh = 23;
    {::_pbi::TcParser::FastV32S2,
     {440, 22, 0, PROTOBUF_FIELD_OFFSET(SocketOptionTcpInfo, _impl_.tcpi_rcv_ssthresh_)}},
    // uint32 tcpi_rtt = 24;
    {::_pbi::TcParser::FastV32S2,
     {448, 23, 0, PROTOBUF_FIELD_OFFSET(SocketOptionTcpInfo, _impl_.tcpi_rtt_)}},
    // uint32 tcpi_rttvar = 25;
    {::_pbi::TcParser::FastV32S2,
     {456, 24, 0, PROTOBUF_FIELD_OFFSET(SocketOptionTcpInfo, _impl_.tcpi_rttvar_)}},
    // uint32 tcpi_snd_ssthresh = 26;
    {::_pbi::TcParser::FastV32S2,
     {464, 25, 0, PROTOBUF_FIELD_OFFSET(SocketOptionTcpInfo, _impl_.tcpi_snd_ssthresh_)}},
    // uint32 tcpi_snd_cwnd = 27;
    {::_pbi::TcParser::FastV32S2,
     {472, 26, 0, PROTOBUF_FIELD_OFFSET(SocketOptionTcpInfo, _impl_.tcpi_snd_cwnd_)}},
    // uint32 tcpi_advmss = 28;
    {::_pbi::TcParser::FastV32S2,
     {480, 27, 0, PROTOBUF_FIELD_OFFSET(SocketOptionTcpInfo, _impl_.tcpi_advmss_)}},
    // uint32 tcpi_reordering = 29;
    {::_pbi::TcParser::FastV32S2,
     {488, 28, 0, PROTOBUF_FIELD_OFFSET(SocketOptionTcpInfo, _impl_.tcpi_reordering_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // uint32 tcpi_state = 1;
    {PROTOBUF_FIELD_OFFSET(SocketOptionTcpInfo, _impl_.tcpi_state_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // uint32 tcpi_ca_state = 2;
    {PROTOBUF_FIELD_OFFSET(SocketOptionTcpInfo, _impl_.tcpi_ca_state_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // uint32 tcpi_retransmits = 3;
    {PROTOBUF_FIELD_OFFSET(SocketOptionTcpInfo, _impl_.tcpi_retransmits_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // uint32 tcpi_probes = 4;
    {PROTOBUF_FIELD_OFFSET(SocketOptionTcpInfo, _impl_.tcpi_probes_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // uint32 tcpi_backoff = 5;
    {PROTOBUF_FIELD_OFFSET(SocketOptionTcpInfo, _impl_.tcpi_backoff_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // uint32 tcpi_options = 6;
    {PROTOBUF_FIELD_OFFSET(SocketOptionTcpInfo, _impl_.tcpi_options_), _Internal::kHasBitsOffset + 5, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // uint32 tcpi_snd_wscale = 7;
    {PROTOBUF_FIELD_OFFSET(SocketOptionTcpInfo, _impl_.tcpi_snd_wscale_), _Internal::kHasBitsOffset + 6, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // uint32 tcpi_rcv_wscale = 8;
    {PROTOBUF_FIELD_OFFSET(SocketOptionTcpInfo, _impl_.tcpi_rcv_wscale_), _Internal::kHasBitsOffset + 7, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // uint32 tcpi_rto = 9;
    {PROTOBUF_FIELD_OFFSET(SocketOptionTcpInfo, _impl_.tcpi_rto_), _Internal::kHasBitsOffset + 8, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // uint32 tcpi_ato = 10;
    {PROTOBUF_FIELD_OFFSET(SocketOptionTcpInfo, _impl_.tcpi_ato_), _Internal::kHasBitsOffset + 9, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // uint32 tcpi_snd_mss = 11;
    {PROTOBUF_FIELD_OFFSET(SocketOptionTcpInfo, _impl_.tcpi_snd_mss_), _Internal::kHasBitsOffset + 10, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // uint32 tcpi_rcv_mss = 12;
    {PROTOBUF_FIELD_OFFSET(SocketOptionTcpInfo, _impl_.tcpi_rcv_mss_), _Internal::kHasBitsOffset + 11, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // uint32 tcpi_unacked = 13;
    {PROTOBUF_FIELD_OFFSET(SocketOptionTcpInfo, _impl_.tcpi_unacked_), _Internal::kHasBitsOffset + 12, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // uint32 tcpi_sacked = 14;
    {PROTOBUF_FIELD_OFFSET(SocketOptionTcpInfo, _impl_.tcpi_sacked_), _Internal::kHasBitsOffset + 13, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // uint32 tcpi_lost = 15;
    {PROTOBUF_FIELD_OFFSET(SocketOptionTcpInfo, _impl_.tcpi_lost_), _Internal::kHasBitsOffset + 14, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // uint32 tcpi_retrans = 16;
    {PROTOBUF_FIELD_OFFSET(SocketOptionTcpInfo, _impl_.tcpi_retrans_), _Internal::kHasBitsOffset + 15, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // uint32 tcpi_fackets = 17;
    {PROTOBUF_FIELD_OFFSET(SocketOptionTcpInfo, _impl_.tcpi_fackets_), _Internal::kHasBitsOffset + 16, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // uint32 tcpi_last_data_sent = 18;
    {PROTOBUF_FIELD_OFFSET(SocketOptionTcpInfo, _impl_.tcpi_last_data_sent_), _Internal::kHasBitsOffset + 17, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // uint32 tcpi_last_ack_sent = 19;
    {PROTOBUF_FIELD_OFFSET(SocketOptionTcpInfo, _impl_.tcpi_last_ack_sent_), _Internal::kHasBitsOffset + 18, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // uint32 tcpi_last_data_recv = 20;
    {PROTOBUF_FIELD_OFFSET(SocketOptionTcpInfo, _impl_.tcpi_last_data_recv_), _Internal::kHasBitsOffset + 19, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // uint32 tcpi_last_ack_recv = 21;
    {PROTOBUF_FIELD_OFFSET(SocketOptionTcpInfo, _impl_.tcpi_last_ack_recv_), _Internal::kHasBitsOffset + 20, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // uint32 tcpi_pmtu = 22;
    {PROTOBUF_FIELD_OFFSET(SocketOptionTcpInfo, _impl_.tcpi_pmtu_), _Internal::kHasBitsOffset + 21, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // uint32 tcpi_rcv_ssthresh = 23;
    {PROTOBUF_FIELD_OFFSET(SocketOptionTcpInfo, _impl_.tcpi_rcv_ssthresh_), _Internal::kHasBitsOffset + 22, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // uint32 tcpi_rtt = 24;
    {PROTOBUF_FIELD_OFFSET(SocketOptionTcpInfo, _impl_.tcpi_rtt_), _Internal::kHasBitsOffset + 23, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // uint32 tcpi_rttvar = 25;
    {PROTOBUF_FIELD_OFFSET(SocketOptionTcpInfo, _impl_.tcpi_rttvar_), _Internal::kHasBitsOffset + 24, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // uint32 tcpi_snd_ssthresh = 26;
    {PROTOBUF_FIELD_OFFSET(SocketOptionTcpInfo, _impl_.tcpi_snd_ssthresh_), _Internal::kHasBitsOffset + 25, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // uint32 tcpi_snd_cwnd = 27;
    {PROTOBUF_FIELD_OFFSET(SocketOptionTcpInfo, _impl_.tcpi_snd_cwnd_), _Internal::kHasBitsOffset + 26, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // uint32 tcpi_advmss = 28;
    {PROTOBUF_FIELD_OFFSET(SocketOptionTcpInfo, _impl_.tcpi_advmss_), _Internal::kHasBitsOffset + 27, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // uint32 tcpi_reordering = 29;
    {PROTOBUF_FIELD_OFFSET(SocketOptionTcpInfo, _impl_.tcpi_reordering_), _Internal::kHasBitsOffset + 28, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
  }},
  // no aux_entries
  {{
  }},
};
PROTOBUF_NOINLINE void SocketOptionTcpInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc.channelz.v1.SocketOptionTcpInfo)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x000000ffu) != 0) {
    ::memset(&_impl_.tcpi_state_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.tcpi_rcv_wscale_) -
        reinterpret_cast<char*>(&_impl_.tcpi_state_)) + sizeof(_impl_.tcpi_rcv_wscale_));
  }
  if ((cached_has_bits & 0x0000ff00u) != 0) {
    ::memset(&_impl_.tcpi_rto_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.tcpi_retrans_) -
        reinterpret_cast<char*>(&_impl_.tcpi_rto_)) + sizeof(_impl_.tcpi_retrans_));
  }
  if ((cached_has_bits & 0x00ff0000u) != 0) {
    ::memset(&_impl_.tcpi_fackets_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.tcpi_rtt_) -
        reinterpret_cast<char*>(&_impl_.tcpi_fackets_)) + sizeof(_impl_.tcpi_rtt_));
  }
  if ((cached_has_bits & 0x1f000000u) != 0) {
    ::memset(&_impl_.tcpi_rttvar_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.tcpi_reordering_) -
        reinterpret_cast<char*>(&_impl_.tcpi_rttvar_)) + sizeof(_impl_.tcpi_reordering_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL SocketOptionTcpInfo::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const SocketOptionTcpInfo& this_ = static_cast<const SocketOptionTcpInfo&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL SocketOptionTcpInfo::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const SocketOptionTcpInfo& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:grpc.channelz.v1.SocketOptionTcpInfo)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // uint32 tcpi_state = 1;
  if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (this_._internal_tcpi_state() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
          1, this_._internal_tcpi_state(), target);
    }
  }

  // uint32 tcpi_ca_state = 2;
  if ((this_._impl_._has_bits_[0] & 0x00000002u) != 0) {
    if (this_._internal_tcpi_ca_state() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
          2, this_._internal_tcpi_ca_state(), target);
    }
  }

  // uint32 tcpi_retransmits = 3;
  if ((this_._impl_._has_bits_[0] & 0x00000004u) != 0) {
    if (this_._internal_tcpi_retransmits() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
          3, this_._internal_tcpi_retransmits(), target);
    }
  }

  // uint32 tcpi_probes = 4;
  if ((this_._impl_._has_bits_[0] & 0x00000008u) != 0) {
    if (this_._internal_tcpi_probes() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
          4, this_._internal_tcpi_probes(), target);
    }
  }

  // uint32 tcpi_backoff = 5;
  if ((this_._impl_._has_bits_[0] & 0x00000010u) != 0) {
    if (this_._internal_tcpi_backoff() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
          5, this_._internal_tcpi_backoff(), target);
    }
  }

  // uint32 tcpi_options = 6;
  if ((this_._impl_._has_bits_[0] & 0x00000020u) != 0) {
    if (this_._internal_tcpi_options() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
          6, this_._internal_tcpi_options(), target);
    }
  }

  // uint32 tcpi_snd_wscale = 7;
  if ((this_._impl_._has_bits_[0] & 0x00000040u) != 0) {
    if (this_._internal_tcpi_snd_wscale() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
          7, this_._internal_tcpi_snd_wscale(), target);
    }
  }

  // uint32 tcpi_rcv_wscale = 8;
  if ((this_._impl_._has_bits_[0] & 0x00000080u) != 0) {
    if (this_._internal_tcpi_rcv_wscale() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
          8, this_._internal_tcpi_rcv_wscale(), target);
    }
  }

  // uint32 tcpi_rto = 9;
  if ((this_._impl_._has_bits_[0] & 0x00000100u) != 0) {
    if (this_._internal_tcpi_rto() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
          9, this_._internal_tcpi_rto(), target);
    }
  }

  // uint32 tcpi_ato = 10;
  if ((this_._impl_._has_bits_[0] & 0x00000200u) != 0) {
    if (this_._internal_tcpi_ato() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
          10, this_._internal_tcpi_ato(), target);
    }
  }

  // uint32 tcpi_snd_mss = 11;
  if ((this_._impl_._has_bits_[0] & 0x00000400u) != 0) {
    if (this_._internal_tcpi_snd_mss() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
          11, this_._internal_tcpi_snd_mss(), target);
    }
  }

  // uint32 tcpi_rcv_mss = 12;
  if ((this_._impl_._has_bits_[0] & 0x00000800u) != 0) {
    if (this_._internal_tcpi_rcv_mss() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
          12, this_._internal_tcpi_rcv_mss(), target);
    }
  }

  // uint32 tcpi_unacked = 13;
  if ((this_._impl_._has_bits_[0] & 0x00001000u) != 0) {
    if (this_._internal_tcpi_unacked() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
          13, this_._internal_tcpi_unacked(), target);
    }
  }

  // uint32 tcpi_sacked = 14;
  if ((this_._impl_._has_bits_[0] & 0x00002000u) != 0) {
    if (this_._internal_tcpi_sacked() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
          14, this_._internal_tcpi_sacked(), target);
    }
  }

  // uint32 tcpi_lost = 15;
  if ((this_._impl_._has_bits_[0] & 0x00004000u) != 0) {
    if (this_._internal_tcpi_lost() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
          15, this_._internal_tcpi_lost(), target);
    }
  }

  // uint32 tcpi_retrans = 16;
  if ((this_._impl_._has_bits_[0] & 0x00008000u) != 0) {
    if (this_._internal_tcpi_retrans() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
          16, this_._internal_tcpi_retrans(), target);
    }
  }

  // uint32 tcpi_fackets = 17;
  if ((this_._impl_._has_bits_[0] & 0x00010000u) != 0) {
    if (this_._internal_tcpi_fackets() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
          17, this_._internal_tcpi_fackets(), target);
    }
  }

  // uint32 tcpi_last_data_sent = 18;
  if ((this_._impl_._has_bits_[0] & 0x00020000u) != 0) {
    if (this_._internal_tcpi_last_data_sent() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
          18, this_._internal_tcpi_last_data_sent(), target);
    }
  }

  // uint32 tcpi_last_ack_sent = 19;
  if ((this_._impl_._has_bits_[0] & 0x00040000u) != 0) {
    if (this_._internal_tcpi_last_ack_sent() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
          19, this_._internal_tcpi_last_ack_sent(), target);
    }
  }

  // uint32 tcpi_last_data_recv = 20;
  if ((this_._impl_._has_bits_[0] & 0x00080000u) != 0) {
    if (this_._internal_tcpi_last_data_recv() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
          20, this_._internal_tcpi_last_data_recv(), target);
    }
  }

  // uint32 tcpi_last_ack_recv = 21;
  if ((this_._impl_._has_bits_[0] & 0x00100000u) != 0) {
    if (this_._internal_tcpi_last_ack_recv() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
          21, this_._internal_tcpi_last_ack_recv(), target);
    }
  }

  // uint32 tcpi_pmtu = 22;
  if ((this_._impl_._has_bits_[0] & 0x00200000u) != 0) {
    if (this_._internal_tcpi_pmtu() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
          22, this_._internal_tcpi_pmtu(), target);
    }
  }

  // uint32 tcpi_rcv_ssthresh = 23;
  if ((this_._impl_._has_bits_[0] & 0x00400000u) != 0) {
    if (this_._internal_tcpi_rcv_ssthresh() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
          23, this_._internal_tcpi_rcv_ssthresh(), target);
    }
  }

  // uint32 tcpi_rtt = 24;
  if ((this_._impl_._has_bits_[0] & 0x00800000u) != 0) {
    if (this_._internal_tcpi_rtt() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
          24, this_._internal_tcpi_rtt(), target);
    }
  }

  // uint32 tcpi_rttvar = 25;
  if ((this_._impl_._has_bits_[0] & 0x01000000u) != 0) {
    if (this_._internal_tcpi_rttvar() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
          25, this_._internal_tcpi_rttvar(), target);
    }
  }

  // uint32 tcpi_snd_ssthresh = 26;
  if ((this_._impl_._has_bits_[0] & 0x02000000u) != 0) {
    if (this_._internal_tcpi_snd_ssthresh() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
          26, this_._internal_tcpi_snd_ssthresh(), target);
    }
  }

  // uint32 tcpi_snd_cwnd = 27;
  if ((this_._impl_._has_bits_[0] & 0x04000000u) != 0) {
    if (this_._internal_tcpi_snd_cwnd() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
          27, this_._internal_tcpi_snd_cwnd(), target);
    }
  }

  // uint32 tcpi_advmss = 28;
  if ((this_._impl_._has_bits_[0] & 0x08000000u) != 0) {
    if (this_._internal_tcpi_advmss() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
          28, this_._internal_tcpi_advmss(), target);
    }
  }

  // uint32 tcpi_reordering = 29;
  if ((this_._impl_._has_bits_[0] & 0x10000000u) != 0) {
    if (this_._internal_tcpi_reordering() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
          29, this_._internal_tcpi_reordering(), target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc.channelz.v1.SocketOptionTcpInfo)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t SocketOptionTcpInfo::ByteSizeLong(const MessageLite& base) {
  const SocketOptionTcpInfo& this_ = static_cast<const SocketOptionTcpInfo&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t SocketOptionTcpInfo::ByteSizeLong() const {
  const SocketOptionTcpInfo& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:grpc.channelz.v1.SocketOptionTcpInfo)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x000000ffu) != 0) {
    // uint32 tcpi_state = 1;
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (this_._internal_tcpi_state() != 0) {
        total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
            this_._internal_tcpi_state());
      }
    }
    // uint32 tcpi_ca_state = 2;
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (this_._internal_tcpi_ca_state() != 0) {
        total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
            this_._internal_tcpi_ca_state());
      }
    }
    // uint32 tcpi_retransmits = 3;
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (this_._internal_tcpi_retransmits() != 0) {
        total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
            this_._internal_tcpi_retransmits());
      }
    }
    // uint32 tcpi_probes = 4;
    if ((cached_has_bits & 0x00000008u) != 0) {
      if (this_._internal_tcpi_probes() != 0) {
        total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
            this_._internal_tcpi_probes());
      }
    }
    // uint32 tcpi_backoff = 5;
    if ((cached_has_bits & 0x00000010u) != 0) {
      if (this_._internal_tcpi_backoff() != 0) {
        total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
            this_._internal_tcpi_backoff());
      }
    }
    // uint32 tcpi_options = 6;
    if ((cached_has_bits & 0x00000020u) != 0) {
      if (this_._internal_tcpi_options() != 0) {
        total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
            this_._internal_tcpi_options());
      }
    }
    // uint32 tcpi_snd_wscale = 7;
    if ((cached_has_bits & 0x00000040u) != 0) {
      if (this_._internal_tcpi_snd_wscale() != 0) {
        total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
            this_._internal_tcpi_snd_wscale());
      }
    }
    // uint32 tcpi_rcv_wscale = 8;
    if ((cached_has_bits & 0x00000080u) != 0) {
      if (this_._internal_tcpi_rcv_wscale() != 0) {
        total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
            this_._internal_tcpi_rcv_wscale());
      }
    }
  }
  if ((cached_has_bits & 0x0000ff00u) != 0) {
    // uint32 tcpi_rto = 9;
    if ((cached_has_bits & 0x00000100u) != 0) {
      if (this_._internal_tcpi_rto() != 0) {
        total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
            this_._internal_tcpi_rto());
      }
    }
    // uint32 tcpi_ato = 10;
    if ((cached_has_bits & 0x00000200u) != 0) {
      if (this_._internal_tcpi_ato() != 0) {
        total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
            this_._internal_tcpi_ato());
      }
    }
    // uint32 tcpi_snd_mss = 11;
    if ((cached_has_bits & 0x00000400u) != 0) {
      if (this_._internal_tcpi_snd_mss() != 0) {
        total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
            this_._internal_tcpi_snd_mss());
      }
    }
    // uint32 tcpi_rcv_mss = 12;
    if ((cached_has_bits & 0x00000800u) != 0) {
      if (this_._internal_tcpi_rcv_mss() != 0) {
        total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
            this_._internal_tcpi_rcv_mss());
      }
    }
    // uint32 tcpi_unacked = 13;
    if ((cached_has_bits & 0x00001000u) != 0) {
      if (this_._internal_tcpi_unacked() != 0) {
        total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
            this_._internal_tcpi_unacked());
      }
    }
    // uint32 tcpi_sacked = 14;
    if ((cached_has_bits & 0x00002000u) != 0) {
      if (this_._internal_tcpi_sacked() != 0) {
        total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
            this_._internal_tcpi_sacked());
      }
    }
    // uint32 tcpi_lost = 15;
    if ((cached_has_bits & 0x00004000u) != 0) {
      if (this_._internal_tcpi_lost() != 0) {
        total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
            this_._internal_tcpi_lost());
      }
    }
    // uint32 tcpi_retrans = 16;
    if ((cached_has_bits & 0x00008000u) != 0) {
      if (this_._internal_tcpi_retrans() != 0) {
        total_size += 2 + ::_pbi::WireFormatLite::UInt32Size(
                                        this_._internal_tcpi_retrans());
      }
    }
  }
  if ((cached_has_bits & 0x00ff0000u) != 0) {
    // uint32 tcpi_fackets = 17;
    if ((cached_has_bits & 0x00010000u) != 0) {
      if (this_._internal_tcpi_fackets() != 0) {
        total_size += 2 + ::_pbi::WireFormatLite::UInt32Size(
                                        this_._internal_tcpi_fackets());
      }
    }
    // uint32 tcpi_last_data_sent = 18;
    if ((cached_has_bits & 0x00020000u) != 0) {
      if (this_._internal_tcpi_last_data_sent() != 0) {
        total_size += 2 + ::_pbi::WireFormatLite::UInt32Size(
                                        this_._internal_tcpi_last_data_sent());
      }
    }
    // uint32 tcpi_last_ack_sent = 19;
    if ((cached_has_bits & 0x00040000u) != 0) {
      if (this_._internal_tcpi_last_ack_sent() != 0) {
        total_size += 2 + ::_pbi::WireFormatLite::UInt32Size(
                                        this_._internal_tcpi_last_ack_sent());
      }
    }
    // uint32 tcpi_last_data_recv = 20;
    if ((cached_has_bits & 0x00080000u) != 0) {
      if (this_._internal_tcpi_last_data_recv() != 0) {
        total_size += 2 + ::_pbi::WireFormatLite::UInt32Size(
                                        this_._internal_tcpi_last_data_recv());
      }
    }
    // uint32 tcpi_last_ack_recv = 21;
    if ((cached_has_bits & 0x00100000u) != 0) {
      if (this_._internal_tcpi_last_ack_recv() != 0) {
        total_size += 2 + ::_pbi::WireFormatLite::UInt32Size(
                                        this_._internal_tcpi_last_ack_recv());
      }
    }
    // uint32 tcpi_pmtu = 22;
    if ((cached_has_bits & 0x00200000u) != 0) {
      if (this_._internal_tcpi_pmtu() != 0) {
        total_size += 2 + ::_pbi::WireFormatLite::UInt32Size(
                                        this_._internal_tcpi_pmtu());
      }
    }
    // uint32 tcpi_rcv_ssthresh = 23;
    if ((cached_has_bits & 0x00400000u) != 0) {
      if (this_._internal_tcpi_rcv_ssthresh() != 0) {
        total_size += 2 + ::_pbi::WireFormatLite::UInt32Size(
                                        this_._internal_tcpi_rcv_ssthresh());
      }
    }
    // uint32 tcpi_rtt = 24;
    if ((cached_has_bits & 0x00800000u) != 0) {
      if (this_._internal_tcpi_rtt() != 0) {
        total_size += 2 + ::_pbi::WireFormatLite::UInt32Size(
                                        this_._internal_tcpi_rtt());
      }
    }
  }
  if ((cached_has_bits & 0x1f000000u) != 0) {
    // uint32 tcpi_rttvar = 25;
    if ((cached_has_bits & 0x01000000u) != 0) {
      if (this_._internal_tcpi_rttvar() != 0) {
        total_size += 2 + ::_pbi::WireFormatLite::UInt32Size(
                                        this_._internal_tcpi_rttvar());
      }
    }
    // uint32 tcpi_snd_ssthresh = 26;
    if ((cached_has_bits & 0x02000000u) != 0) {
      if (this_._internal_tcpi_snd_ssthresh() != 0) {
        total_size += 2 + ::_pbi::WireFormatLite::UInt32Size(
                                        this_._internal_tcpi_snd_ssthresh());
      }
    }
    // uint32 tcpi_snd_cwnd = 27;
    if ((cached_has_bits & 0x04000000u) != 0) {
      if (this_._internal_tcpi_snd_cwnd() != 0) {
        total_size += 2 + ::_pbi::WireFormatLite::UInt32Size(
                                        this_._internal_tcpi_snd_cwnd());
      }
    }
    // uint32 tcpi_advmss = 28;
    if ((cached_has_bits & 0x08000000u) != 0) {
      if (this_._internal_tcpi_advmss() != 0) {
        total_size += 2 + ::_pbi::WireFormatLite::UInt32Size(
                                        this_._internal_tcpi_advmss());
      }
    }
    // uint32 tcpi_reordering = 29;
    if ((cached_has_bits & 0x10000000u) != 0) {
      if (this_._internal_tcpi_reordering() != 0) {
        total_size += 2 + ::_pbi::WireFormatLite::UInt32Size(
                                        this_._internal_tcpi_reordering());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void SocketOptionTcpInfo::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SocketOptionTcpInfo*>(&to_msg);
  auto& from = static_cast<const SocketOptionTcpInfo&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:grpc.channelz.v1.SocketOptionTcpInfo)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x000000ffu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (from._internal_tcpi_state() != 0) {
        _this->_impl_.tcpi_state_ = from._impl_.tcpi_state_;
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (from._internal_tcpi_ca_state() != 0) {
        _this->_impl_.tcpi_ca_state_ = from._impl_.tcpi_ca_state_;
      }
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (from._internal_tcpi_retransmits() != 0) {
        _this->_impl_.tcpi_retransmits_ = from._impl_.tcpi_retransmits_;
      }
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      if (from._internal_tcpi_probes() != 0) {
        _this->_impl_.tcpi_probes_ = from._impl_.tcpi_probes_;
      }
    }
    if ((cached_has_bits & 0x00000010u) != 0) {
      if (from._internal_tcpi_backoff() != 0) {
        _this->_impl_.tcpi_backoff_ = from._impl_.tcpi_backoff_;
      }
    }
    if ((cached_has_bits & 0x00000020u) != 0) {
      if (from._internal_tcpi_options() != 0) {
        _this->_impl_.tcpi_options_ = from._impl_.tcpi_options_;
      }
    }
    if ((cached_has_bits & 0x00000040u) != 0) {
      if (from._internal_tcpi_snd_wscale() != 0) {
        _this->_impl_.tcpi_snd_wscale_ = from._impl_.tcpi_snd_wscale_;
      }
    }
    if ((cached_has_bits & 0x00000080u) != 0) {
      if (from._internal_tcpi_rcv_wscale() != 0) {
        _this->_impl_.tcpi_rcv_wscale_ = from._impl_.tcpi_rcv_wscale_;
      }
    }
  }
  if ((cached_has_bits & 0x0000ff00u) != 0) {
    if ((cached_has_bits & 0x00000100u) != 0) {
      if (from._internal_tcpi_rto() != 0) {
        _this->_impl_.tcpi_rto_ = from._impl_.tcpi_rto_;
      }
    }
    if ((cached_has_bits & 0x00000200u) != 0) {
      if (from._internal_tcpi_ato() != 0) {
        _this->_impl_.tcpi_ato_ = from._impl_.tcpi_ato_;
      }
    }
    if ((cached_has_bits & 0x00000400u) != 0) {
      if (from._internal_tcpi_snd_mss() != 0) {
        _this->_impl_.tcpi_snd_mss_ = from._impl_.tcpi_snd_mss_;
      }
    }
    if ((cached_has_bits & 0x00000800u) != 0) {
      if (from._internal_tcpi_rcv_mss() != 0) {
        _this->_impl_.tcpi_rcv_mss_ = from._impl_.tcpi_rcv_mss_;
      }
    }
    if ((cached_has_bits & 0x00001000u) != 0) {
      if (from._internal_tcpi_unacked() != 0) {
        _this->_impl_.tcpi_unacked_ = from._impl_.tcpi_unacked_;
      }
    }
    if ((cached_has_bits & 0x00002000u) != 0) {
      if (from._internal_tcpi_sacked() != 0) {
        _this->_impl_.tcpi_sacked_ = from._impl_.tcpi_sacked_;
      }
    }
    if ((cached_has_bits & 0x00004000u) != 0) {
      if (from._internal_tcpi_lost() != 0) {
        _this->_impl_.tcpi_lost_ = from._impl_.tcpi_lost_;
      }
    }
    if ((cached_has_bits & 0x00008000u) != 0) {
      if (from._internal_tcpi_retrans() != 0) {
        _this->_impl_.tcpi_retrans_ = from._impl_.tcpi_retrans_;
      }
    }
  }
  if ((cached_has_bits & 0x00ff0000u) != 0) {
    if ((cached_has_bits & 0x00010000u) != 0) {
      if (from._internal_tcpi_fackets() != 0) {
        _this->_impl_.tcpi_fackets_ = from._impl_.tcpi_fackets_;
      }
    }
    if ((cached_has_bits & 0x00020000u) != 0) {
      if (from._internal_tcpi_last_data_sent() != 0) {
        _this->_impl_.tcpi_last_data_sent_ = from._impl_.tcpi_last_data_sent_;
      }
    }
    if ((cached_has_bits & 0x00040000u) != 0) {
      if (from._internal_tcpi_last_ack_sent() != 0) {
        _this->_impl_.tcpi_last_ack_sent_ = from._impl_.tcpi_last_ack_sent_;
      }
    }
    if ((cached_has_bits & 0x00080000u) != 0) {
      if (from._internal_tcpi_last_data_recv() != 0) {
        _this->_impl_.tcpi_last_data_recv_ = from._impl_.tcpi_last_data_recv_;
      }
    }
    if ((cached_has_bits & 0x00100000u) != 0) {
      if (from._internal_tcpi_last_ack_recv() != 0) {
        _this->_impl_.tcpi_last_ack_recv_ = from._impl_.tcpi_last_ack_recv_;
      }
    }
    if ((cached_has_bits & 0x00200000u) != 0) {
      if (from._internal_tcpi_pmtu() != 0) {
        _this->_impl_.tcpi_pmtu_ = from._impl_.tcpi_pmtu_;
      }
    }
    if ((cached_has_bits & 0x00400000u) != 0) {
      if (from._internal_tcpi_rcv_ssthresh() != 0) {
        _this->_impl_.tcpi_rcv_ssthresh_ = from._impl_.tcpi_rcv_ssthresh_;
      }
    }
    if ((cached_has_bits & 0x00800000u) != 0) {
      if (from._internal_tcpi_rtt() != 0) {
        _this->_impl_.tcpi_rtt_ = from._impl_.tcpi_rtt_;
      }
    }
  }
  if ((cached_has_bits & 0x1f000000u) != 0) {
    if ((cached_has_bits & 0x01000000u) != 0) {
      if (from._internal_tcpi_rttvar() != 0) {
        _this->_impl_.tcpi_rttvar_ = from._impl_.tcpi_rttvar_;
      }
    }
    if ((cached_has_bits & 0x02000000u) != 0) {
      if (from._internal_tcpi_snd_ssthresh() != 0) {
        _this->_impl_.tcpi_snd_ssthresh_ = from._impl_.tcpi_snd_ssthresh_;
      }
    }
    if ((cached_has_bits & 0x04000000u) != 0) {
      if (from._internal_tcpi_snd_cwnd() != 0) {
        _this->_impl_.tcpi_snd_cwnd_ = from._impl_.tcpi_snd_cwnd_;
      }
    }
    if ((cached_has_bits & 0x08000000u) != 0) {
      if (from._internal_tcpi_advmss() != 0) {
        _this->_impl_.tcpi_advmss_ = from._impl_.tcpi_advmss_;
      }
    }
    if ((cached_has_bits & 0x10000000u) != 0) {
      if (from._internal_tcpi_reordering() != 0) {
        _this->_impl_.tcpi_reordering_ = from._impl_.tcpi_reordering_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SocketOptionTcpInfo::CopyFrom(const SocketOptionTcpInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc.channelz.v1.SocketOptionTcpInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SocketOptionTcpInfo::InternalSwap(SocketOptionTcpInfo* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SocketOptionTcpInfo, _impl_.tcpi_reordering_)
      + sizeof(SocketOptionTcpInfo::_impl_.tcpi_reordering_)
      - PROTOBUF_FIELD_OFFSET(SocketOptionTcpInfo, _impl_.tcpi_state_)>(
          reinterpret_cast<char*>(&_impl_.tcpi_state_),
          reinterpret_cast<char*>(&other->_impl_.tcpi_state_));
}

::google::protobuf::Metadata SocketOptionTcpInfo::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class GetTopChannelsRequest::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<GetTopChannelsRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(GetTopChannelsRequest, _impl_._has_bits_);
};

GetTopChannelsRequest::GetTopChannelsRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, GetTopChannelsRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc.channelz.v1.GetTopChannelsRequest)
}
GetTopChannelsRequest::GetTopChannelsRequest(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const GetTopChannelsRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, GetTopChannelsRequest_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
}
PROTOBUF_NDEBUG_INLINE GetTopChannelsRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void GetTopChannelsRequest::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, start_channel_id_),
           0,
           offsetof(Impl_, max_results_) -
               offsetof(Impl_, start_channel_id_) +
               sizeof(Impl_::max_results_));
}
GetTopChannelsRequest::~GetTopChannelsRequest() {
  // @@protoc_insertion_point(destructor:grpc.channelz.v1.GetTopChannelsRequest)
  SharedDtor(*this);
}
inline void GetTopChannelsRequest::SharedDtor(MessageLite& self) {
  GetTopChannelsRequest& this_ = static_cast<GetTopChannelsRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL GetTopChannelsRequest::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) GetTopChannelsRequest(arena);
}
constexpr auto GetTopChannelsRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(GetTopChannelsRequest),
                                            alignof(GetTopChannelsRequest));
}
constexpr auto GetTopChannelsRequest::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_GetTopChannelsRequest_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &GetTopChannelsRequest::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<GetTopChannelsRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &GetTopChannelsRequest::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<GetTopChannelsRequest>(), &GetTopChannelsRequest::ByteSizeLong,
              &GetTopChannelsRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(GetTopChannelsRequest, _impl_._cached_size_),
          false,
      },
      &GetTopChannelsRequest::kDescriptorMethods,
      &descriptor_table_src_2fproto_2fgrpc_2fchannelz_2fchannelz_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull GetTopChannelsRequest_class_data_ =
        GetTopChannelsRequest::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
GetTopChannelsRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&GetTopChannelsRequest_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(GetTopChannelsRequest_class_data_.tc_table);
  return GetTopChannelsRequest_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2>
GetTopChannelsRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(GetTopChannelsRequest, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    GetTopChannelsRequest_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::grpc::channelz::v1::GetTopChannelsRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // int64 max_results = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(GetTopChannelsRequest, _impl_.max_results_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(GetTopChannelsRequest, _impl_.max_results_)}},
    // int64 start_channel_id = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(GetTopChannelsRequest, _impl_.start_channel_id_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(GetTopChannelsRequest, _impl_.start_channel_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int64 start_channel_id = 1;
    {PROTOBUF_FIELD_OFFSET(GetTopChannelsRequest, _impl_.start_channel_id_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
    // int64 max_results = 2;
    {PROTOBUF_FIELD_OFFSET(GetTopChannelsRequest, _impl_.max_results_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
  }},
  // no aux_entries
  {{
  }},
};
PROTOBUF_NOINLINE void GetTopChannelsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc.channelz.v1.GetTopChannelsRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    ::memset(&_impl_.start_channel_id_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.max_results_) -
        reinterpret_cast<char*>(&_impl_.start_channel_id_)) + sizeof(_impl_.max_results_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL GetTopChannelsRequest::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const GetTopChannelsRequest& this_ = static_cast<const GetTopChannelsRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL GetTopChannelsRequest::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const GetTopChannelsRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:grpc.channelz.v1.GetTopChannelsRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int64 start_channel_id = 1;
  if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (this_._internal_start_channel_id() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt64ToArrayWithField<1>(
              stream, this_._internal_start_channel_id(), target);
    }
  }

  // int64 max_results = 2;
  if ((this_._impl_._has_bits_[0] & 0x00000002u) != 0) {
    if (this_._internal_max_results() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt64ToArrayWithField<2>(
              stream, this_._internal_max_results(), target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc.channelz.v1.GetTopChannelsRequest)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t GetTopChannelsRequest::ByteSizeLong(const MessageLite& base) {
  const GetTopChannelsRequest& this_ = static_cast<const GetTopChannelsRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t GetTopChannelsRequest::ByteSizeLong() const {
  const GetTopChannelsRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:grpc.channelz.v1.GetTopChannelsRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    // int64 start_channel_id = 1;
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (this_._internal_start_channel_id() != 0) {
        total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
            this_._internal_start_channel_id());
      }
    }
    // int64 max_results = 2;
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (this_._internal_max_results() != 0) {
        total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
            this_._internal_max_results());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void GetTopChannelsRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<GetTopChannelsRequest*>(&to_msg);
  auto& from = static_cast<const GetTopChannelsRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:grpc.channelz.v1.GetTopChannelsRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (from._internal_start_channel_id() != 0) {
        _this->_impl_.start_channel_id_ = from._impl_.start_channel_id_;
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (from._internal_max_results() != 0) {
        _this->_impl_.max_results_ = from._impl_.max_results_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GetTopChannelsRequest::CopyFrom(const GetTopChannelsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc.channelz.v1.GetTopChannelsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void GetTopChannelsRequest::InternalSwap(GetTopChannelsRequest* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GetTopChannelsRequest, _impl_.max_results_)
      + sizeof(GetTopChannelsRequest::_impl_.max_results_)
      - PROTOBUF_FIELD_OFFSET(GetTopChannelsRequest, _impl_.start_channel_id_)>(
          reinterpret_cast<char*>(&_impl_.start_channel_id_),
          reinterpret_cast<char*>(&other->_impl_.start_channel_id_));
}

::google::protobuf::Metadata GetTopChannelsRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class GetTopChannelsResponse::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<GetTopChannelsResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(GetTopChannelsResponse, _impl_._has_bits_);
};

GetTopChannelsResponse::GetTopChannelsResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, GetTopChannelsResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc.channelz.v1.GetTopChannelsResponse)
}
PROTOBUF_NDEBUG_INLINE GetTopChannelsResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::grpc::channelz::v1::GetTopChannelsResponse& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        channel_{visibility, arena, from.channel_} {}

GetTopChannelsResponse::GetTopChannelsResponse(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const GetTopChannelsResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, GetTopChannelsResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  GetTopChannelsResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.end_ = from._impl_.end_;

  // @@protoc_insertion_point(copy_constructor:grpc.channelz.v1.GetTopChannelsResponse)
}
PROTOBUF_NDEBUG_INLINE GetTopChannelsResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        channel_{visibility, arena} {}

inline void GetTopChannelsResponse::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.end_ = {};
}
GetTopChannelsResponse::~GetTopChannelsResponse() {
  // @@protoc_insertion_point(destructor:grpc.channelz.v1.GetTopChannelsResponse)
  SharedDtor(*this);
}
inline void GetTopChannelsResponse::SharedDtor(MessageLite& self) {
  GetTopChannelsResponse& this_ = static_cast<GetTopChannelsResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL GetTopChannelsResponse::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) GetTopChannelsResponse(arena);
}
constexpr auto GetTopChannelsResponse::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(GetTopChannelsResponse, _impl_.channel_) +
          decltype(GetTopChannelsResponse::_impl_.channel_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(GetTopChannelsResponse), alignof(GetTopChannelsResponse), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&GetTopChannelsResponse::PlacementNew_,
                                 sizeof(GetTopChannelsResponse),
                                 alignof(GetTopChannelsResponse));
  }
}
constexpr auto GetTopChannelsResponse::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_GetTopChannelsResponse_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &GetTopChannelsResponse::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<GetTopChannelsResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &GetTopChannelsResponse::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<GetTopChannelsResponse>(), &GetTopChannelsResponse::ByteSizeLong,
              &GetTopChannelsResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(GetTopChannelsResponse, _impl_._cached_size_),
          false,
      },
      &GetTopChannelsResponse::kDescriptorMethods,
      &descriptor_table_src_2fproto_2fgrpc_2fchannelz_2fchannelz_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull GetTopChannelsResponse_class_data_ =
        GetTopChannelsResponse::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
GetTopChannelsResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&GetTopChannelsResponse_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(GetTopChannelsResponse_class_data_.tc_table);
  return GetTopChannelsResponse_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 0, 2>
GetTopChannelsResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(GetTopChannelsResponse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    GetTopChannelsResponse_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::grpc::channelz::v1::GetTopChannelsResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // bool end = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(GetTopChannelsResponse, _impl_.end_), 0>(),
     {16, 0, 0, PROTOBUF_FIELD_OFFSET(GetTopChannelsResponse, _impl_.end_)}},
    // repeated .grpc.channelz.v1.Channel channel = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(GetTopChannelsResponse, _impl_.channel_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .grpc.channelz.v1.Channel channel = 1;
    {PROTOBUF_FIELD_OFFSET(GetTopChannelsResponse, _impl_.channel_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // bool end = 2;
    {PROTOBUF_FIELD_OFFSET(GetTopChannelsResponse, _impl_.end_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::grpc::channelz::v1::Channel>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void GetTopChannelsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc.channelz.v1.GetTopChannelsResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.channel_.Clear();
  _impl_.end_ = false;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL GetTopChannelsResponse::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const GetTopChannelsResponse& this_ = static_cast<const GetTopChannelsResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL GetTopChannelsResponse::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const GetTopChannelsResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:grpc.channelz.v1.GetTopChannelsResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .grpc.channelz.v1.Channel channel = 1;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this_._internal_channel_size());
       i < n; i++) {
    const auto& repfield = this_._internal_channel().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            1, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  // bool end = 2;
  if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (this_._internal_end() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteBoolToArray(
          2, this_._internal_end(), target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc.channelz.v1.GetTopChannelsResponse)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t GetTopChannelsResponse::ByteSizeLong(const MessageLite& base) {
  const GetTopChannelsResponse& this_ = static_cast<const GetTopChannelsResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t GetTopChannelsResponse::ByteSizeLong() const {
  const GetTopChannelsResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:grpc.channelz.v1.GetTopChannelsResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated .grpc.channelz.v1.Channel channel = 1;
    {
      total_size += 1UL * this_._internal_channel_size();
      for (const auto& msg : this_._internal_channel()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
  }
   {
    // bool end = 2;
    cached_has_bits = this_._impl_._has_bits_[0];
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (this_._internal_end() != 0) {
        total_size += 2;
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void GetTopChannelsResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<GetTopChannelsResponse*>(&to_msg);
  auto& from = static_cast<const GetTopChannelsResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:grpc.channelz.v1.GetTopChannelsResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_channel()->MergeFrom(
      from._internal_channel());
  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    if (from._internal_end() != 0) {
      _this->_impl_.end_ = from._impl_.end_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GetTopChannelsResponse::CopyFrom(const GetTopChannelsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc.channelz.v1.GetTopChannelsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void GetTopChannelsResponse::InternalSwap(GetTopChannelsResponse* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.channel_.InternalSwap(&other->_impl_.channel_);
  swap(_impl_.end_, other->_impl_.end_);
}

::google::protobuf::Metadata GetTopChannelsResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class GetServersRequest::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<GetServersRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(GetServersRequest, _impl_._has_bits_);
};

GetServersRequest::GetServersRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, GetServersRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc.channelz.v1.GetServersRequest)
}
GetServersRequest::GetServersRequest(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const GetServersRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, GetServersRequest_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
}
PROTOBUF_NDEBUG_INLINE GetServersRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void GetServersRequest::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, start_server_id_),
           0,
           offsetof(Impl_, max_results_) -
               offsetof(Impl_, start_server_id_) +
               sizeof(Impl_::max_results_));
}
GetServersRequest::~GetServersRequest() {
  // @@protoc_insertion_point(destructor:grpc.channelz.v1.GetServersRequest)
  SharedDtor(*this);
}
inline void GetServersRequest::SharedDtor(MessageLite& self) {
  GetServersRequest& this_ = static_cast<GetServersRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL GetServersRequest::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) GetServersRequest(arena);
}
constexpr auto GetServersRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(GetServersRequest),
                                            alignof(GetServersRequest));
}
constexpr auto GetServersRequest::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_GetServersRequest_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &GetServersRequest::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<GetServersRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &GetServersRequest::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<GetServersRequest>(), &GetServersRequest::ByteSizeLong,
              &GetServersRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(GetServersRequest, _impl_._cached_size_),
          false,
      },
      &GetServersRequest::kDescriptorMethods,
      &descriptor_table_src_2fproto_2fgrpc_2fchannelz_2fchannelz_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull GetServersRequest_class_data_ =
        GetServersRequest::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
GetServersRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&GetServersRequest_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(GetServersRequest_class_data_.tc_table);
  return GetServersRequest_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2>
GetServersRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(GetServersRequest, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    GetServersRequest_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::grpc::channelz::v1::GetServersRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // int64 max_results = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(GetServersRequest, _impl_.max_results_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(GetServersRequest, _impl_.max_results_)}},
    // int64 start_server_id = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(GetServersRequest, _impl_.start_server_id_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(GetServersRequest, _impl_.start_server_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int64 start_server_id = 1;
    {PROTOBUF_FIELD_OFFSET(GetServersRequest, _impl_.start_server_id_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
    // int64 max_results = 2;
    {PROTOBUF_FIELD_OFFSET(GetServersRequest, _impl_.max_results_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
  }},
  // no aux_entries
  {{
  }},
};
PROTOBUF_NOINLINE void GetServersRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc.channelz.v1.GetServersRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    ::memset(&_impl_.start_server_id_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.max_results_) -
        reinterpret_cast<char*>(&_impl_.start_server_id_)) + sizeof(_impl_.max_results_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL GetServersRequest::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const GetServersRequest& this_ = static_cast<const GetServersRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL GetServersRequest::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const GetServersRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:grpc.channelz.v1.GetServersRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int64 start_server_id = 1;
  if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (this_._internal_start_server_id() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt64ToArrayWithField<1>(
              stream, this_._internal_start_server_id(), target);
    }
  }

  // int64 max_results = 2;
  if ((this_._impl_._has_bits_[0] & 0x00000002u) != 0) {
    if (this_._internal_max_results() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt64ToArrayWithField<2>(
              stream, this_._internal_max_results(), target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc.channelz.v1.GetServersRequest)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t GetServersRequest::ByteSizeLong(const MessageLite& base) {
  const GetServersRequest& this_ = static_cast<const GetServersRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t GetServersRequest::ByteSizeLong() const {
  const GetServersRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:grpc.channelz.v1.GetServersRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    // int64 start_server_id = 1;
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (this_._internal_start_server_id() != 0) {
        total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
            this_._internal_start_server_id());
      }
    }
    // int64 max_results = 2;
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (this_._internal_max_results() != 0) {
        total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
            this_._internal_max_results());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void GetServersRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<GetServersRequest*>(&to_msg);
  auto& from = static_cast<const GetServersRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:grpc.channelz.v1.GetServersRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (from._internal_start_server_id() != 0) {
        _this->_impl_.start_server_id_ = from._impl_.start_server_id_;
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (from._internal_max_results() != 0) {
        _this->_impl_.max_results_ = from._impl_.max_results_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GetServersRequest::CopyFrom(const GetServersRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc.channelz.v1.GetServersRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void GetServersRequest::InternalSwap(GetServersRequest* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GetServersRequest, _impl_.max_results_)
      + sizeof(GetServersRequest::_impl_.max_results_)
      - PROTOBUF_FIELD_OFFSET(GetServersRequest, _impl_.start_server_id_)>(
          reinterpret_cast<char*>(&_impl_.start_server_id_),
          reinterpret_cast<char*>(&other->_impl_.start_server_id_));
}

::google::protobuf::Metadata GetServersRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class GetServersResponse::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<GetServersResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(GetServersResponse, _impl_._has_bits_);
};

GetServersResponse::GetServersResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, GetServersResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc.channelz.v1.GetServersResponse)
}
PROTOBUF_NDEBUG_INLINE GetServersResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::grpc::channelz::v1::GetServersResponse& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        server_{visibility, arena, from.server_} {}

GetServersResponse::GetServersResponse(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const GetServersResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, GetServersResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  GetServersResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.end_ = from._impl_.end_;

  // @@protoc_insertion_point(copy_constructor:grpc.channelz.v1.GetServersResponse)
}
PROTOBUF_NDEBUG_INLINE GetServersResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        server_{visibility, arena} {}

inline void GetServersResponse::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.end_ = {};
}
GetServersResponse::~GetServersResponse() {
  // @@protoc_insertion_point(destructor:grpc.channelz.v1.GetServersResponse)
  SharedDtor(*this);
}
inline void GetServersResponse::SharedDtor(MessageLite& self) {
  GetServersResponse& this_ = static_cast<GetServersResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL GetServersResponse::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) GetServersResponse(arena);
}
constexpr auto GetServersResponse::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(GetServersResponse, _impl_.server_) +
          decltype(GetServersResponse::_impl_.server_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(GetServersResponse), alignof(GetServersResponse), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&GetServersResponse::PlacementNew_,
                                 sizeof(GetServersResponse),
                                 alignof(GetServersResponse));
  }
}
constexpr auto GetServersResponse::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_GetServersResponse_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &GetServersResponse::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<GetServersResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &GetServersResponse::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<GetServersResponse>(), &GetServersResponse::ByteSizeLong,
              &GetServersResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(GetServersResponse, _impl_._cached_size_),
          false,
      },
      &GetServersResponse::kDescriptorMethods,
      &descriptor_table_src_2fproto_2fgrpc_2fchannelz_2fchannelz_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull GetServersResponse_class_data_ =
        GetServersResponse::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
GetServersResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&GetServersResponse_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(GetServersResponse_class_data_.tc_table);
  return GetServersResponse_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 0, 2>
GetServersResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(GetServersResponse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    GetServersResponse_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::grpc::channelz::v1::GetServersResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // bool end = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(GetServersResponse, _impl_.end_), 0>(),
     {16, 0, 0, PROTOBUF_FIELD_OFFSET(GetServersResponse, _impl_.end_)}},
    // repeated .grpc.channelz.v1.Server server = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(GetServersResponse, _impl_.server_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .grpc.channelz.v1.Server server = 1;
    {PROTOBUF_FIELD_OFFSET(GetServersResponse, _impl_.server_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // bool end = 2;
    {PROTOBUF_FIELD_OFFSET(GetServersResponse, _impl_.end_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::grpc::channelz::v1::Server>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void GetServersResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc.channelz.v1.GetServersResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.server_.Clear();
  _impl_.end_ = false;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL GetServersResponse::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const GetServersResponse& this_ = static_cast<const GetServersResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL GetServersResponse::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const GetServersResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:grpc.channelz.v1.GetServersResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .grpc.channelz.v1.Server server = 1;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this_._internal_server_size());
       i < n; i++) {
    const auto& repfield = this_._internal_server().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            1, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  // bool end = 2;
  if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (this_._internal_end() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteBoolToArray(
          2, this_._internal_end(), target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc.channelz.v1.GetServersResponse)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t GetServersResponse::ByteSizeLong(const MessageLite& base) {
  const GetServersResponse& this_ = static_cast<const GetServersResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t GetServersResponse::ByteSizeLong() const {
  const GetServersResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:grpc.channelz.v1.GetServersResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated .grpc.channelz.v1.Server server = 1;
    {
      total_size += 1UL * this_._internal_server_size();
      for (const auto& msg : this_._internal_server()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
  }
   {
    // bool end = 2;
    cached_has_bits = this_._impl_._has_bits_[0];
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (this_._internal_end() != 0) {
        total_size += 2;
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void GetServersResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<GetServersResponse*>(&to_msg);
  auto& from = static_cast<const GetServersResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:grpc.channelz.v1.GetServersResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_server()->MergeFrom(
      from._internal_server());
  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    if (from._internal_end() != 0) {
      _this->_impl_.end_ = from._impl_.end_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GetServersResponse::CopyFrom(const GetServersResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc.channelz.v1.GetServersResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void GetServersResponse::InternalSwap(GetServersResponse* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.server_.InternalSwap(&other->_impl_.server_);
  swap(_impl_.end_, other->_impl_.end_);
}

::google::protobuf::Metadata GetServersResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class GetServerRequest::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<GetServerRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(GetServerRequest, _impl_._has_bits_);
};

GetServerRequest::GetServerRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, GetServerRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc.channelz.v1.GetServerRequest)
}
GetServerRequest::GetServerRequest(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const GetServerRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, GetServerRequest_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
}
PROTOBUF_NDEBUG_INLINE GetServerRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void GetServerRequest::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.server_id_ = {};
}
GetServerRequest::~GetServerRequest() {
  // @@protoc_insertion_point(destructor:grpc.channelz.v1.GetServerRequest)
  SharedDtor(*this);
}
inline void GetServerRequest::SharedDtor(MessageLite& self) {
  GetServerRequest& this_ = static_cast<GetServerRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL GetServerRequest::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) GetServerRequest(arena);
}
constexpr auto GetServerRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(GetServerRequest),
                                            alignof(GetServerRequest));
}
constexpr auto GetServerRequest::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_GetServerRequest_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &GetServerRequest::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<GetServerRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &GetServerRequest::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<GetServerRequest>(), &GetServerRequest::ByteSizeLong,
              &GetServerRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(GetServerRequest, _impl_._cached_size_),
          false,
      },
      &GetServerRequest::kDescriptorMethods,
      &descriptor_table_src_2fproto_2fgrpc_2fchannelz_2fchannelz_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull GetServerRequest_class_data_ =
        GetServerRequest::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
GetServerRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&GetServerRequest_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(GetServerRequest_class_data_.tc_table);
  return GetServerRequest_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2>
GetServerRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(GetServerRequest, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    GetServerRequest_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::grpc::channelz::v1::GetServerRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // int64 server_id = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(GetServerRequest, _impl_.server_id_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(GetServerRequest, _impl_.server_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int64 server_id = 1;
    {PROTOBUF_FIELD_OFFSET(GetServerRequest, _impl_.server_id_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
  }},
  // no aux_entries
  {{
  }},
};
PROTOBUF_NOINLINE void GetServerRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc.channelz.v1.GetServerRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.server_id_ = ::int64_t{0};
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL GetServerRequest::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const GetServerRequest& this_ = static_cast<const GetServerRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL GetServerRequest::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const GetServerRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:grpc.channelz.v1.GetServerRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int64 server_id = 1;
  if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (this_._internal_server_id() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt64ToArrayWithField<1>(
              stream, this_._internal_server_id(), target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc.channelz.v1.GetServerRequest)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t GetServerRequest::ByteSizeLong(const MessageLite& base) {
  const GetServerRequest& this_ = static_cast<const GetServerRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t GetServerRequest::ByteSizeLong() const {
  const GetServerRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:grpc.channelz.v1.GetServerRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

   {
    // int64 server_id = 1;
    cached_has_bits = this_._impl_._has_bits_[0];
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (this_._internal_server_id() != 0) {
        total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
            this_._internal_server_id());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void GetServerRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<GetServerRequest*>(&to_msg);
  auto& from = static_cast<const GetServerRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:grpc.channelz.v1.GetServerRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    if (from._internal_server_id() != 0) {
      _this->_impl_.server_id_ = from._impl_.server_id_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GetServerRequest::CopyFrom(const GetServerRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc.channelz.v1.GetServerRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void GetServerRequest::InternalSwap(GetServerRequest* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.server_id_, other->_impl_.server_id_);
}

::google::protobuf::Metadata GetServerRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class GetServerResponse::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<GetServerResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(GetServerResponse, _impl_._has_bits_);
};

GetServerResponse::GetServerResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, GetServerResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc.channelz.v1.GetServerResponse)
}
PROTOBUF_NDEBUG_INLINE GetServerResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::grpc::channelz::v1::GetServerResponse& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

GetServerResponse::GetServerResponse(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const GetServerResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, GetServerResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  GetServerResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.server_ = ((cached_has_bits & 0x00000001u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.server_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:grpc.channelz.v1.GetServerResponse)
}
PROTOBUF_NDEBUG_INLINE GetServerResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void GetServerResponse::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.server_ = {};
}
GetServerResponse::~GetServerResponse() {
  // @@protoc_insertion_point(destructor:grpc.channelz.v1.GetServerResponse)
  SharedDtor(*this);
}
inline void GetServerResponse::SharedDtor(MessageLite& self) {
  GetServerResponse& this_ = static_cast<GetServerResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.server_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL GetServerResponse::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) GetServerResponse(arena);
}
constexpr auto GetServerResponse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(GetServerResponse),
                                            alignof(GetServerResponse));
}
constexpr auto GetServerResponse::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_GetServerResponse_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &GetServerResponse::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<GetServerResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &GetServerResponse::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<GetServerResponse>(), &GetServerResponse::ByteSizeLong,
              &GetServerResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(GetServerResponse, _impl_._cached_size_),
          false,
      },
      &GetServerResponse::kDescriptorMethods,
      &descriptor_table_src_2fproto_2fgrpc_2fchannelz_2fchannelz_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull GetServerResponse_class_data_ =
        GetServerResponse::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
GetServerResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&GetServerResponse_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(GetServerResponse_class_data_.tc_table);
  return GetServerResponse_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2>
GetServerResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(GetServerResponse, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    GetServerResponse_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::grpc::channelz::v1::GetServerResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .grpc.channelz.v1.Server server = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(GetServerResponse, _impl_.server_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .grpc.channelz.v1.Server server = 1;
    {PROTOBUF_FIELD_OFFSET(GetServerResponse, _impl_.server_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::grpc::channelz::v1::Server>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void GetServerResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc.channelz.v1.GetServerResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    ABSL_DCHECK(_impl_.server_ != nullptr);
    _impl_.server_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL GetServerResponse::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const GetServerResponse& this_ = static_cast<const GetServerResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL GetServerResponse::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const GetServerResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:grpc.channelz.v1.GetServerResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // .grpc.channelz.v1.Server server = 1;
  if ((cached_has_bits & 0x00000001u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *this_._impl_.server_, this_._impl_.server_->GetCachedSize(), target,
        stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc.channelz.v1.GetServerResponse)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t GetServerResponse::ByteSizeLong(const MessageLite& base) {
  const GetServerResponse& this_ = static_cast<const GetServerResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t GetServerResponse::ByteSizeLong() const {
  const GetServerResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:grpc.channelz.v1.GetServerResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

   {
    // .grpc.channelz.v1.Server server = 1;
    cached_has_bits = this_._impl_._has_bits_[0];
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.server_);
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void GetServerResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<GetServerResponse*>(&to_msg);
  auto& from = static_cast<const GetServerResponse&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:grpc.channelz.v1.GetServerResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    ABSL_DCHECK(from._impl_.server_ != nullptr);
    if (_this->_impl_.server_ == nullptr) {
      _this->_impl_.server_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.server_);
    } else {
      _this->_impl_.server_->MergeFrom(*from._impl_.server_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GetServerResponse::CopyFrom(const GetServerResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc.channelz.v1.GetServerResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void GetServerResponse::InternalSwap(GetServerResponse* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.server_, other->_impl_.server_);
}

::google::protobuf::Metadata GetServerResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class GetServerSocketsRequest::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<GetServerSocketsRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(GetServerSocketsRequest, _impl_._has_bits_);
};

GetServerSocketsRequest::GetServerSocketsRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, GetServerSocketsRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc.channelz.v1.GetServerSocketsRequest)
}
GetServerSocketsRequest::GetServerSocketsRequest(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const GetServerSocketsRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, GetServerSocketsRequest_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
}
PROTOBUF_NDEBUG_INLINE GetServerSocketsRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void GetServerSocketsRequest::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, server_id_),
           0,
           offsetof(Impl_, max_results_) -
               offsetof(Impl_, server_id_) +
               sizeof(Impl_::max_results_));
}
GetServerSocketsRequest::~GetServerSocketsRequest() {
  // @@protoc_insertion_point(destructor:grpc.channelz.v1.GetServerSocketsRequest)
  SharedDtor(*this);
}
inline void GetServerSocketsRequest::SharedDtor(MessageLite& self) {
  GetServerSocketsRequest& this_ = static_cast<GetServerSocketsRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL GetServerSocketsRequest::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) GetServerSocketsRequest(arena);
}
constexpr auto GetServerSocketsRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(GetServerSocketsRequest),
                                            alignof(GetServerSocketsRequest));
}
constexpr auto GetServerSocketsRequest::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_GetServerSocketsRequest_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &GetServerSocketsRequest::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<GetServerSocketsRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &GetServerSocketsRequest::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<GetServerSocketsRequest>(), &GetServerSocketsRequest::ByteSizeLong,
              &GetServerSocketsRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(GetServerSocketsRequest, _impl_._cached_size_),
          false,
      },
      &GetServerSocketsRequest::kDescriptorMethods,
      &descriptor_table_src_2fproto_2fgrpc_2fchannelz_2fchannelz_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull GetServerSocketsRequest_class_data_ =
        GetServerSocketsRequest::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
GetServerSocketsRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&GetServerSocketsRequest_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(GetServerSocketsRequest_class_data_.tc_table);
  return GetServerSocketsRequest_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 0, 2>
GetServerSocketsRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(GetServerSocketsRequest, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    GetServerSocketsRequest_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::grpc::channelz::v1::GetServerSocketsRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // int64 server_id = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(GetServerSocketsRequest, _impl_.server_id_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(GetServerSocketsRequest, _impl_.server_id_)}},
    // int64 start_socket_id = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(GetServerSocketsRequest, _impl_.start_socket_id_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(GetServerSocketsRequest, _impl_.start_socket_id_)}},
    // int64 max_results = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(GetServerSocketsRequest, _impl_.max_results_), 2>(),
     {24, 2, 0, PROTOBUF_FIELD_OFFSET(GetServerSocketsRequest, _impl_.max_results_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int64 server_id = 1;
    {PROTOBUF_FIELD_OFFSET(GetServerSocketsRequest, _impl_.server_id_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
    // int64 start_socket_id = 2;
    {PROTOBUF_FIELD_OFFSET(GetServerSocketsRequest, _impl_.start_socket_id_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
    // int64 max_results = 3;
    {PROTOBUF_FIELD_OFFSET(GetServerSocketsRequest, _impl_.max_results_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
  }},
  // no aux_entries
  {{
  }},
};
PROTOBUF_NOINLINE void GetServerSocketsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc.channelz.v1.GetServerSocketsRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    ::memset(&_impl_.server_id_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.max_results_) -
        reinterpret_cast<char*>(&_impl_.server_id_)) + sizeof(_impl_.max_results_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL GetServerSocketsRequest::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const GetServerSocketsRequest& this_ = static_cast<const GetServerSocketsRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL GetServerSocketsRequest::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const GetServerSocketsRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:grpc.channelz.v1.GetServerSocketsRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int64 server_id = 1;
  if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (this_._internal_server_id() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt64ToArrayWithField<1>(
              stream, this_._internal_server_id(), target);
    }
  }

  // int64 start_socket_id = 2;
  if ((this_._impl_._has_bits_[0] & 0x00000002u) != 0) {
    if (this_._internal_start_socket_id() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt64ToArrayWithField<2>(
              stream, this_._internal_start_socket_id(), target);
    }
  }

  // int64 max_results = 3;
  if ((this_._impl_._has_bits_[0] & 0x00000004u) != 0) {
    if (this_._internal_max_results() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt64ToArrayWithField<3>(
              stream, this_._internal_max_results(), target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc.channelz.v1.GetServerSocketsRequest)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t GetServerSocketsRequest::ByteSizeLong(const MessageLite& base) {
  const GetServerSocketsRequest& this_ = static_cast<const GetServerSocketsRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t GetServerSocketsRequest::ByteSizeLong() const {
  const GetServerSocketsRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:grpc.channelz.v1.GetServerSocketsRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    // int64 server_id = 1;
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (this_._internal_server_id() != 0) {
        total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
            this_._internal_server_id());
      }
    }
    // int64 start_socket_id = 2;
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (this_._internal_start_socket_id() != 0) {
        total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
            this_._internal_start_socket_id());
      }
    }
    // int64 max_results = 3;
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (this_._internal_max_results() != 0) {
        total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
            this_._internal_max_results());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void GetServerSocketsRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<GetServerSocketsRequest*>(&to_msg);
  auto& from = static_cast<const GetServerSocketsRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:grpc.channelz.v1.GetServerSocketsRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (from._internal_server_id() != 0) {
        _this->_impl_.server_id_ = from._impl_.server_id_;
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (from._internal_start_socket_id() != 0) {
        _this->_impl_.start_socket_id_ = from._impl_.start_socket_id_;
      }
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (from._internal_max_results() != 0) {
        _this->_impl_.max_results_ = from._impl_.max_results_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GetServerSocketsRequest::CopyFrom(const GetServerSocketsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc.channelz.v1.GetServerSocketsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void GetServerSocketsRequest::InternalSwap(GetServerSocketsRequest* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GetServerSocketsRequest, _impl_.max_results_)
      + sizeof(GetServerSocketsRequest::_impl_.max_results_)
      - PROTOBUF_FIELD_OFFSET(GetServerSocketsRequest, _impl_.server_id_)>(
          reinterpret_cast<char*>(&_impl_.server_id_),
          reinterpret_cast<char*>(&other->_impl_.server_id_));
}

::google::protobuf::Metadata GetServerSocketsRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class GetServerSocketsResponse::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<GetServerSocketsResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(GetServerSocketsResponse, _impl_._has_bits_);
};

GetServerSocketsResponse::GetServerSocketsResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, GetServerSocketsResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc.channelz.v1.GetServerSocketsResponse)
}
PROTOBUF_NDEBUG_INLINE GetServerSocketsResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::grpc::channelz::v1::GetServerSocketsResponse& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        socket_ref_{visibility, arena, from.socket_ref_} {}

GetServerSocketsResponse::GetServerSocketsResponse(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const GetServerSocketsResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, GetServerSocketsResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  GetServerSocketsResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.end_ = from._impl_.end_;

  // @@protoc_insertion_point(copy_constructor:grpc.channelz.v1.GetServerSocketsResponse)
}
PROTOBUF_NDEBUG_INLINE GetServerSocketsResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        socket_ref_{visibility, arena} {}

inline void GetServerSocketsResponse::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.end_ = {};
}
GetServerSocketsResponse::~GetServerSocketsResponse() {
  // @@protoc_insertion_point(destructor:grpc.channelz.v1.GetServerSocketsResponse)
  SharedDtor(*this);
}
inline void GetServerSocketsResponse::SharedDtor(MessageLite& self) {
  GetServerSocketsResponse& this_ = static_cast<GetServerSocketsResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL GetServerSocketsResponse::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) GetServerSocketsResponse(arena);
}
constexpr auto GetServerSocketsResponse::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(GetServerSocketsResponse, _impl_.socket_ref_) +
          decltype(GetServerSocketsResponse::_impl_.socket_ref_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(GetServerSocketsResponse), alignof(GetServerSocketsResponse), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&GetServerSocketsResponse::PlacementNew_,
                                 sizeof(GetServerSocketsResponse),
                                 alignof(GetServerSocketsResponse));
  }
}
constexpr auto GetServerSocketsResponse::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_GetServerSocketsResponse_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &GetServerSocketsResponse::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<GetServerSocketsResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &GetServerSocketsResponse::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<GetServerSocketsResponse>(), &GetServerSocketsResponse::ByteSizeLong,
              &GetServerSocketsResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(GetServerSocketsResponse, _impl_._cached_size_),
          false,
      },
      &GetServerSocketsResponse::kDescriptorMethods,
      &descriptor_table_src_2fproto_2fgrpc_2fchannelz_2fchannelz_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull GetServerSocketsResponse_class_data_ =
        GetServerSocketsResponse::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
GetServerSocketsResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&GetServerSocketsResponse_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(GetServerSocketsResponse_class_data_.tc_table);
  return GetServerSocketsResponse_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 0, 2>
GetServerSocketsResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(GetServerSocketsResponse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    GetServerSocketsResponse_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::grpc::channelz::v1::GetServerSocketsResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // bool end = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(GetServerSocketsResponse, _impl_.end_), 0>(),
     {16, 0, 0, PROTOBUF_FIELD_OFFSET(GetServerSocketsResponse, _impl_.end_)}},
    // repeated .grpc.channelz.v1.SocketRef socket_ref = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(GetServerSocketsResponse, _impl_.socket_ref_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .grpc.channelz.v1.SocketRef socket_ref = 1;
    {PROTOBUF_FIELD_OFFSET(GetServerSocketsResponse, _impl_.socket_ref_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // bool end = 2;
    {PROTOBUF_FIELD_OFFSET(GetServerSocketsResponse, _impl_.end_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::grpc::channelz::v1::SocketRef>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void GetServerSocketsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc.channelz.v1.GetServerSocketsResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.socket_ref_.Clear();
  _impl_.end_ = false;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL GetServerSocketsResponse::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const GetServerSocketsResponse& this_ = static_cast<const GetServerSocketsResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL GetServerSocketsResponse::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const GetServerSocketsResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:grpc.channelz.v1.GetServerSocketsResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .grpc.channelz.v1.SocketRef socket_ref = 1;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this_._internal_socket_ref_size());
       i < n; i++) {
    const auto& repfield = this_._internal_socket_ref().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            1, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  // bool end = 2;
  if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (this_._internal_end() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteBoolToArray(
          2, this_._internal_end(), target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc.channelz.v1.GetServerSocketsResponse)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t GetServerSocketsResponse::ByteSizeLong(const MessageLite& base) {
  const GetServerSocketsResponse& this_ = static_cast<const GetServerSocketsResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t GetServerSocketsResponse::ByteSizeLong() const {
  const GetServerSocketsResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:grpc.channelz.v1.GetServerSocketsResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated .grpc.channelz.v1.SocketRef socket_ref = 1;
    {
      total_size += 1UL * this_._internal_socket_ref_size();
      for (const auto& msg : this_._internal_socket_ref()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
  }
   {
    // bool end = 2;
    cached_has_bits = this_._impl_._has_bits_[0];
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (this_._internal_end() != 0) {
        total_size += 2;
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void GetServerSocketsResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<GetServerSocketsResponse*>(&to_msg);
  auto& from = static_cast<const GetServerSocketsResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:grpc.channelz.v1.GetServerSocketsResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_socket_ref()->MergeFrom(
      from._internal_socket_ref());
  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    if (from._internal_end() != 0) {
      _this->_impl_.end_ = from._impl_.end_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GetServerSocketsResponse::CopyFrom(const GetServerSocketsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc.channelz.v1.GetServerSocketsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void GetServerSocketsResponse::InternalSwap(GetServerSocketsResponse* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.socket_ref_.InternalSwap(&other->_impl_.socket_ref_);
  swap(_impl_.end_, other->_impl_.end_);
}

::google::protobuf::Metadata GetServerSocketsResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class GetChannelRequest::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<GetChannelRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(GetChannelRequest, _impl_._has_bits_);
};

GetChannelRequest::GetChannelRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, GetChannelRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc.channelz.v1.GetChannelRequest)
}
GetChannelRequest::GetChannelRequest(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const GetChannelRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, GetChannelRequest_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
}
PROTOBUF_NDEBUG_INLINE GetChannelRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void GetChannelRequest::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.channel_id_ = {};
}
GetChannelRequest::~GetChannelRequest() {
  // @@protoc_insertion_point(destructor:grpc.channelz.v1.GetChannelRequest)
  SharedDtor(*this);
}
inline void GetChannelRequest::SharedDtor(MessageLite& self) {
  GetChannelRequest& this_ = static_cast<GetChannelRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL GetChannelRequest::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) GetChannelRequest(arena);
}
constexpr auto GetChannelRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(GetChannelRequest),
                                            alignof(GetChannelRequest));
}
constexpr auto GetChannelRequest::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_GetChannelRequest_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &GetChannelRequest::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<GetChannelRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &GetChannelRequest::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<GetChannelRequest>(), &GetChannelRequest::ByteSizeLong,
              &GetChannelRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(GetChannelRequest, _impl_._cached_size_),
          false,
      },
      &GetChannelRequest::kDescriptorMethods,
      &descriptor_table_src_2fproto_2fgrpc_2fchannelz_2fchannelz_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull GetChannelRequest_class_data_ =
        GetChannelRequest::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
GetChannelRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&GetChannelRequest_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(GetChannelRequest_class_data_.tc_table);
  return GetChannelRequest_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2>
GetChannelRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(GetChannelRequest, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    GetChannelRequest_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::grpc::channelz::v1::GetChannelRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // int64 channel_id = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(GetChannelRequest, _impl_.channel_id_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(GetChannelRequest, _impl_.channel_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int64 channel_id = 1;
    {PROTOBUF_FIELD_OFFSET(GetChannelRequest, _impl_.channel_id_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
  }},
  // no aux_entries
  {{
  }},
};
PROTOBUF_NOINLINE void GetChannelRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc.channelz.v1.GetChannelRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.channel_id_ = ::int64_t{0};
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL GetChannelRequest::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const GetChannelRequest& this_ = static_cast<const GetChannelRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL GetChannelRequest::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const GetChannelRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:grpc.channelz.v1.GetChannelRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int64 channel_id = 1;
  if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (this_._internal_channel_id() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt64ToArrayWithField<1>(
              stream, this_._internal_channel_id(), target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc.channelz.v1.GetChannelRequest)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t GetChannelRequest::ByteSizeLong(const MessageLite& base) {
  const GetChannelRequest& this_ = static_cast<const GetChannelRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t GetChannelRequest::ByteSizeLong() const {
  const GetChannelRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:grpc.channelz.v1.GetChannelRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

   {
    // int64 channel_id = 1;
    cached_has_bits = this_._impl_._has_bits_[0];
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (this_._internal_channel_id() != 0) {
        total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
            this_._internal_channel_id());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void GetChannelRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<GetChannelRequest*>(&to_msg);
  auto& from = static_cast<const GetChannelRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:grpc.channelz.v1.GetChannelRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    if (from._internal_channel_id() != 0) {
      _this->_impl_.channel_id_ = from._impl_.channel_id_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GetChannelRequest::CopyFrom(const GetChannelRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc.channelz.v1.GetChannelRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void GetChannelRequest::InternalSwap(GetChannelRequest* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.channel_id_, other->_impl_.channel_id_);
}

::google::protobuf::Metadata GetChannelRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class GetChannelResponse::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<GetChannelResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(GetChannelResponse, _impl_._has_bits_);
};

GetChannelResponse::GetChannelResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, GetChannelResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc.channelz.v1.GetChannelResponse)
}
PROTOBUF_NDEBUG_INLINE GetChannelResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::grpc::channelz::v1::GetChannelResponse& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

GetChannelResponse::GetChannelResponse(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const GetChannelResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, GetChannelResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  GetChannelResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.channel_ = ((cached_has_bits & 0x00000001u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.channel_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:grpc.channelz.v1.GetChannelResponse)
}
PROTOBUF_NDEBUG_INLINE GetChannelResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void GetChannelResponse::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.channel_ = {};
}
GetChannelResponse::~GetChannelResponse() {
  // @@protoc_insertion_point(destructor:grpc.channelz.v1.GetChannelResponse)
  SharedDtor(*this);
}
inline void GetChannelResponse::SharedDtor(MessageLite& self) {
  GetChannelResponse& this_ = static_cast<GetChannelResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.channel_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL GetChannelResponse::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) GetChannelResponse(arena);
}
constexpr auto GetChannelResponse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(GetChannelResponse),
                                            alignof(GetChannelResponse));
}
constexpr auto GetChannelResponse::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_GetChannelResponse_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &GetChannelResponse::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<GetChannelResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &GetChannelResponse::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<GetChannelResponse>(), &GetChannelResponse::ByteSizeLong,
              &GetChannelResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(GetChannelResponse, _impl_._cached_size_),
          false,
      },
      &GetChannelResponse::kDescriptorMethods,
      &descriptor_table_src_2fproto_2fgrpc_2fchannelz_2fchannelz_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull GetChannelResponse_class_data_ =
        GetChannelResponse::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
GetChannelResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&GetChannelResponse_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(GetChannelResponse_class_data_.tc_table);
  return GetChannelResponse_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2>
GetChannelResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(GetChannelResponse, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    GetChannelResponse_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::grpc::channelz::v1::GetChannelResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .grpc.channelz.v1.Channel channel = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(GetChannelResponse, _impl_.channel_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .grpc.channelz.v1.Channel channel = 1;
    {PROTOBUF_FIELD_OFFSET(GetChannelResponse, _impl_.channel_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::grpc::channelz::v1::Channel>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void GetChannelResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc.channelz.v1.GetChannelResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    ABSL_DCHECK(_impl_.channel_ != nullptr);
    _impl_.channel_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL GetChannelResponse::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const GetChannelResponse& this_ = static_cast<const GetChannelResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL GetChannelResponse::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const GetChannelResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:grpc.channelz.v1.GetChannelResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // .grpc.channelz.v1.Channel channel = 1;
  if ((cached_has_bits & 0x00000001u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *this_._impl_.channel_, this_._impl_.channel_->GetCachedSize(), target,
        stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc.channelz.v1.GetChannelResponse)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t GetChannelResponse::ByteSizeLong(const MessageLite& base) {
  const GetChannelResponse& this_ = static_cast<const GetChannelResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t GetChannelResponse::ByteSizeLong() const {
  const GetChannelResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:grpc.channelz.v1.GetChannelResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

   {
    // .grpc.channelz.v1.Channel channel = 1;
    cached_has_bits = this_._impl_._has_bits_[0];
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.channel_);
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void GetChannelResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<GetChannelResponse*>(&to_msg);
  auto& from = static_cast<const GetChannelResponse&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:grpc.channelz.v1.GetChannelResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    ABSL_DCHECK(from._impl_.channel_ != nullptr);
    if (_this->_impl_.channel_ == nullptr) {
      _this->_impl_.channel_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.channel_);
    } else {
      _this->_impl_.channel_->MergeFrom(*from._impl_.channel_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GetChannelResponse::CopyFrom(const GetChannelResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc.channelz.v1.GetChannelResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void GetChannelResponse::InternalSwap(GetChannelResponse* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.channel_, other->_impl_.channel_);
}

::google::protobuf::Metadata GetChannelResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class GetSubchannelRequest::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<GetSubchannelRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(GetSubchannelRequest, _impl_._has_bits_);
};

GetSubchannelRequest::GetSubchannelRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, GetSubchannelRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc.channelz.v1.GetSubchannelRequest)
}
GetSubchannelRequest::GetSubchannelRequest(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const GetSubchannelRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, GetSubchannelRequest_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
}
PROTOBUF_NDEBUG_INLINE GetSubchannelRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void GetSubchannelRequest::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.subchannel_id_ = {};
}
GetSubchannelRequest::~GetSubchannelRequest() {
  // @@protoc_insertion_point(destructor:grpc.channelz.v1.GetSubchannelRequest)
  SharedDtor(*this);
}
inline void GetSubchannelRequest::SharedDtor(MessageLite& self) {
  GetSubchannelRequest& this_ = static_cast<GetSubchannelRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL GetSubchannelRequest::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) GetSubchannelRequest(arena);
}
constexpr auto GetSubchannelRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(GetSubchannelRequest),
                                            alignof(GetSubchannelRequest));
}
constexpr auto GetSubchannelRequest::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_GetSubchannelRequest_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &GetSubchannelRequest::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<GetSubchannelRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &GetSubchannelRequest::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<GetSubchannelRequest>(), &GetSubchannelRequest::ByteSizeLong,
              &GetSubchannelRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(GetSubchannelRequest, _impl_._cached_size_),
          false,
      },
      &GetSubchannelRequest::kDescriptorMethods,
      &descriptor_table_src_2fproto_2fgrpc_2fchannelz_2fchannelz_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull GetSubchannelRequest_class_data_ =
        GetSubchannelRequest::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
GetSubchannelRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&GetSubchannelRequest_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(GetSubchannelRequest_class_data_.tc_table);
  return GetSubchannelRequest_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2>
GetSubchannelRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(GetSubchannelRequest, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    GetSubchannelRequest_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::grpc::channelz::v1::GetSubchannelRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // int64 subchannel_id = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(GetSubchannelRequest, _impl_.subchannel_id_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(GetSubchannelRequest, _impl_.subchannel_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int64 subchannel_id = 1;
    {PROTOBUF_FIELD_OFFSET(GetSubchannelRequest, _impl_.subchannel_id_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
  }},
  // no aux_entries
  {{
  }},
};
PROTOBUF_NOINLINE void GetSubchannelRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc.channelz.v1.GetSubchannelRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.subchannel_id_ = ::int64_t{0};
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL GetSubchannelRequest::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const GetSubchannelRequest& this_ = static_cast<const GetSubchannelRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL GetSubchannelRequest::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const GetSubchannelRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:grpc.channelz.v1.GetSubchannelRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int64 subchannel_id = 1;
  if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (this_._internal_subchannel_id() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt64ToArrayWithField<1>(
              stream, this_._internal_subchannel_id(), target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc.channelz.v1.GetSubchannelRequest)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t GetSubchannelRequest::ByteSizeLong(const MessageLite& base) {
  const GetSubchannelRequest& this_ = static_cast<const GetSubchannelRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t GetSubchannelRequest::ByteSizeLong() const {
  const GetSubchannelRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:grpc.channelz.v1.GetSubchannelRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

   {
    // int64 subchannel_id = 1;
    cached_has_bits = this_._impl_._has_bits_[0];
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (this_._internal_subchannel_id() != 0) {
        total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
            this_._internal_subchannel_id());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void GetSubchannelRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<GetSubchannelRequest*>(&to_msg);
  auto& from = static_cast<const GetSubchannelRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:grpc.channelz.v1.GetSubchannelRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    if (from._internal_subchannel_id() != 0) {
      _this->_impl_.subchannel_id_ = from._impl_.subchannel_id_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GetSubchannelRequest::CopyFrom(const GetSubchannelRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc.channelz.v1.GetSubchannelRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void GetSubchannelRequest::InternalSwap(GetSubchannelRequest* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.subchannel_id_, other->_impl_.subchannel_id_);
}

::google::protobuf::Metadata GetSubchannelRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class GetSubchannelResponse::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<GetSubchannelResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(GetSubchannelResponse, _impl_._has_bits_);
};

GetSubchannelResponse::GetSubchannelResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, GetSubchannelResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc.channelz.v1.GetSubchannelResponse)
}
PROTOBUF_NDEBUG_INLINE GetSubchannelResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::grpc::channelz::v1::GetSubchannelResponse& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

GetSubchannelResponse::GetSubchannelResponse(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const GetSubchannelResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, GetSubchannelResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  GetSubchannelResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.subchannel_ = ((cached_has_bits & 0x00000001u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.subchannel_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:grpc.channelz.v1.GetSubchannelResponse)
}
PROTOBUF_NDEBUG_INLINE GetSubchannelResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void GetSubchannelResponse::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.subchannel_ = {};
}
GetSubchannelResponse::~GetSubchannelResponse() {
  // @@protoc_insertion_point(destructor:grpc.channelz.v1.GetSubchannelResponse)
  SharedDtor(*this);
}
inline void GetSubchannelResponse::SharedDtor(MessageLite& self) {
  GetSubchannelResponse& this_ = static_cast<GetSubchannelResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.subchannel_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL GetSubchannelResponse::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) GetSubchannelResponse(arena);
}
constexpr auto GetSubchannelResponse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(GetSubchannelResponse),
                                            alignof(GetSubchannelResponse));
}
constexpr auto GetSubchannelResponse::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_GetSubchannelResponse_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &GetSubchannelResponse::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<GetSubchannelResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &GetSubchannelResponse::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<GetSubchannelResponse>(), &GetSubchannelResponse::ByteSizeLong,
              &GetSubchannelResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(GetSubchannelResponse, _impl_._cached_size_),
          false,
      },
      &GetSubchannelResponse::kDescriptorMethods,
      &descriptor_table_src_2fproto_2fgrpc_2fchannelz_2fchannelz_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull GetSubchannelResponse_class_data_ =
        GetSubchannelResponse::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
GetSubchannelResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&GetSubchannelResponse_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(GetSubchannelResponse_class_data_.tc_table);
  return GetSubchannelResponse_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2>
GetSubchannelResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(GetSubchannelResponse, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    GetSubchannelResponse_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::grpc::channelz::v1::GetSubchannelResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .grpc.channelz.v1.Subchannel subchannel = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(GetSubchannelResponse, _impl_.subchannel_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .grpc.channelz.v1.Subchannel subchannel = 1;
    {PROTOBUF_FIELD_OFFSET(GetSubchannelResponse, _impl_.subchannel_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::grpc::channelz::v1::Subchannel>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void GetSubchannelResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc.channelz.v1.GetSubchannelResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    ABSL_DCHECK(_impl_.subchannel_ != nullptr);
    _impl_.subchannel_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL GetSubchannelResponse::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const GetSubchannelResponse& this_ = static_cast<const GetSubchannelResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL GetSubchannelResponse::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const GetSubchannelResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:grpc.channelz.v1.GetSubchannelResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // .grpc.channelz.v1.Subchannel subchannel = 1;
  if ((cached_has_bits & 0x00000001u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *this_._impl_.subchannel_, this_._impl_.subchannel_->GetCachedSize(), target,
        stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc.channelz.v1.GetSubchannelResponse)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t GetSubchannelResponse::ByteSizeLong(const MessageLite& base) {
  const GetSubchannelResponse& this_ = static_cast<const GetSubchannelResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t GetSubchannelResponse::ByteSizeLong() const {
  const GetSubchannelResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:grpc.channelz.v1.GetSubchannelResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

   {
    // .grpc.channelz.v1.Subchannel subchannel = 1;
    cached_has_bits = this_._impl_._has_bits_[0];
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.subchannel_);
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void GetSubchannelResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<GetSubchannelResponse*>(&to_msg);
  auto& from = static_cast<const GetSubchannelResponse&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:grpc.channelz.v1.GetSubchannelResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    ABSL_DCHECK(from._impl_.subchannel_ != nullptr);
    if (_this->_impl_.subchannel_ == nullptr) {
      _this->_impl_.subchannel_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.subchannel_);
    } else {
      _this->_impl_.subchannel_->MergeFrom(*from._impl_.subchannel_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GetSubchannelResponse::CopyFrom(const GetSubchannelResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc.channelz.v1.GetSubchannelResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void GetSubchannelResponse::InternalSwap(GetSubchannelResponse* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.subchannel_, other->_impl_.subchannel_);
}

::google::protobuf::Metadata GetSubchannelResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class GetSocketRequest::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<GetSocketRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(GetSocketRequest, _impl_._has_bits_);
};

GetSocketRequest::GetSocketRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, GetSocketRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc.channelz.v1.GetSocketRequest)
}
GetSocketRequest::GetSocketRequest(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const GetSocketRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, GetSocketRequest_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
}
PROTOBUF_NDEBUG_INLINE GetSocketRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void GetSocketRequest::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, socket_id_),
           0,
           offsetof(Impl_, summary_) -
               offsetof(Impl_, socket_id_) +
               sizeof(Impl_::summary_));
}
GetSocketRequest::~GetSocketRequest() {
  // @@protoc_insertion_point(destructor:grpc.channelz.v1.GetSocketRequest)
  SharedDtor(*this);
}
inline void GetSocketRequest::SharedDtor(MessageLite& self) {
  GetSocketRequest& this_ = static_cast<GetSocketRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL GetSocketRequest::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) GetSocketRequest(arena);
}
constexpr auto GetSocketRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(GetSocketRequest),
                                            alignof(GetSocketRequest));
}
constexpr auto GetSocketRequest::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_GetSocketRequest_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &GetSocketRequest::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<GetSocketRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &GetSocketRequest::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<GetSocketRequest>(), &GetSocketRequest::ByteSizeLong,
              &GetSocketRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(GetSocketRequest, _impl_._cached_size_),
          false,
      },
      &GetSocketRequest::kDescriptorMethods,
      &descriptor_table_src_2fproto_2fgrpc_2fchannelz_2fchannelz_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull GetSocketRequest_class_data_ =
        GetSocketRequest::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
GetSocketRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&GetSocketRequest_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(GetSocketRequest_class_data_.tc_table);
  return GetSocketRequest_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2>
GetSocketRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(GetSocketRequest, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    GetSocketRequest_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::grpc::channelz::v1::GetSocketRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // bool summary = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(GetSocketRequest, _impl_.summary_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(GetSocketRequest, _impl_.summary_)}},
    // int64 socket_id = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(GetSocketRequest, _impl_.socket_id_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(GetSocketRequest, _impl_.socket_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int64 socket_id = 1;
    {PROTOBUF_FIELD_OFFSET(GetSocketRequest, _impl_.socket_id_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
    // bool summary = 2;
    {PROTOBUF_FIELD_OFFSET(GetSocketRequest, _impl_.summary_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
  }},
  // no aux_entries
  {{
  }},
};
PROTOBUF_NOINLINE void GetSocketRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc.channelz.v1.GetSocketRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    ::memset(&_impl_.socket_id_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.summary_) -
        reinterpret_cast<char*>(&_impl_.socket_id_)) + sizeof(_impl_.summary_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL GetSocketRequest::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const GetSocketRequest& this_ = static_cast<const GetSocketRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL GetSocketRequest::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const GetSocketRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:grpc.channelz.v1.GetSocketRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int64 socket_id = 1;
  if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (this_._internal_socket_id() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt64ToArrayWithField<1>(
              stream, this_._internal_socket_id(), target);
    }
  }

  // bool summary = 2;
  if ((this_._impl_._has_bits_[0] & 0x00000002u) != 0) {
    if (this_._internal_summary() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteBoolToArray(
          2, this_._internal_summary(), target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc.channelz.v1.GetSocketRequest)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t GetSocketRequest::ByteSizeLong(const MessageLite& base) {
  const GetSocketRequest& this_ = static_cast<const GetSocketRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t GetSocketRequest::ByteSizeLong() const {
  const GetSocketRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:grpc.channelz.v1.GetSocketRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    // int64 socket_id = 1;
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (this_._internal_socket_id() != 0) {
        total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
            this_._internal_socket_id());
      }
    }
    // bool summary = 2;
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (this_._internal_summary() != 0) {
        total_size += 2;
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void GetSocketRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<GetSocketRequest*>(&to_msg);
  auto& from = static_cast<const GetSocketRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:grpc.channelz.v1.GetSocketRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (from._internal_socket_id() != 0) {
        _this->_impl_.socket_id_ = from._impl_.socket_id_;
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (from._internal_summary() != 0) {
        _this->_impl_.summary_ = from._impl_.summary_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GetSocketRequest::CopyFrom(const GetSocketRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc.channelz.v1.GetSocketRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void GetSocketRequest::InternalSwap(GetSocketRequest* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GetSocketRequest, _impl_.summary_)
      + sizeof(GetSocketRequest::_impl_.summary_)
      - PROTOBUF_FIELD_OFFSET(GetSocketRequest, _impl_.socket_id_)>(
          reinterpret_cast<char*>(&_impl_.socket_id_),
          reinterpret_cast<char*>(&other->_impl_.socket_id_));
}

::google::protobuf::Metadata GetSocketRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class GetSocketResponse::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<GetSocketResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(GetSocketResponse, _impl_._has_bits_);
};

GetSocketResponse::GetSocketResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, GetSocketResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc.channelz.v1.GetSocketResponse)
}
PROTOBUF_NDEBUG_INLINE GetSocketResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::grpc::channelz::v1::GetSocketResponse& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

GetSocketResponse::GetSocketResponse(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const GetSocketResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, GetSocketResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  GetSocketResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.socket_ = ((cached_has_bits & 0x00000001u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.socket_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:grpc.channelz.v1.GetSocketResponse)
}
PROTOBUF_NDEBUG_INLINE GetSocketResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void GetSocketResponse::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.socket_ = {};
}
GetSocketResponse::~GetSocketResponse() {
  // @@protoc_insertion_point(destructor:grpc.channelz.v1.GetSocketResponse)
  SharedDtor(*this);
}
inline void GetSocketResponse::SharedDtor(MessageLite& self) {
  GetSocketResponse& this_ = static_cast<GetSocketResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.socket_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL GetSocketResponse::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) GetSocketResponse(arena);
}
constexpr auto GetSocketResponse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(GetSocketResponse),
                                            alignof(GetSocketResponse));
}
constexpr auto GetSocketResponse::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_GetSocketResponse_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &GetSocketResponse::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<GetSocketResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &GetSocketResponse::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<GetSocketResponse>(), &GetSocketResponse::ByteSizeLong,
              &GetSocketResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(GetSocketResponse, _impl_._cached_size_),
          false,
      },
      &GetSocketResponse::kDescriptorMethods,
      &descriptor_table_src_2fproto_2fgrpc_2fchannelz_2fchannelz_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull GetSocketResponse_class_data_ =
        GetSocketResponse::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
GetSocketResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&GetSocketResponse_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(GetSocketResponse_class_data_.tc_table);
  return GetSocketResponse_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2>
GetSocketResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(GetSocketResponse, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    GetSocketResponse_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::grpc::channelz::v1::GetSocketResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .grpc.channelz.v1.Socket socket = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(GetSocketResponse, _impl_.socket_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .grpc.channelz.v1.Socket socket = 1;
    {PROTOBUF_FIELD_OFFSET(GetSocketResponse, _impl_.socket_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::grpc::channelz::v1::Socket>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void GetSocketResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc.channelz.v1.GetSocketResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    ABSL_DCHECK(_impl_.socket_ != nullptr);
    _impl_.socket_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL GetSocketResponse::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const GetSocketResponse& this_ = static_cast<const GetSocketResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL GetSocketResponse::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const GetSocketResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:grpc.channelz.v1.GetSocketResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // .grpc.channelz.v1.Socket socket = 1;
  if ((cached_has_bits & 0x00000001u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *this_._impl_.socket_, this_._impl_.socket_->GetCachedSize(), target,
        stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc.channelz.v1.GetSocketResponse)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t GetSocketResponse::ByteSizeLong(const MessageLite& base) {
  const GetSocketResponse& this_ = static_cast<const GetSocketResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t GetSocketResponse::ByteSizeLong() const {
  const GetSocketResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:grpc.channelz.v1.GetSocketResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

   {
    // .grpc.channelz.v1.Socket socket = 1;
    cached_has_bits = this_._impl_._has_bits_[0];
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.socket_);
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void GetSocketResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<GetSocketResponse*>(&to_msg);
  auto& from = static_cast<const GetSocketResponse&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:grpc.channelz.v1.GetSocketResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    ABSL_DCHECK(from._impl_.socket_ != nullptr);
    if (_this->_impl_.socket_ == nullptr) {
      _this->_impl_.socket_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.socket_);
    } else {
      _this->_impl_.socket_->MergeFrom(*from._impl_.socket_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GetSocketResponse::CopyFrom(const GetSocketResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc.channelz.v1.GetSocketResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void GetSocketResponse::InternalSwap(GetSocketResponse* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.socket_, other->_impl_.socket_);
}

::google::protobuf::Metadata GetSocketResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace v1
}  // namespace channelz
}  // namespace grpc
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ [[maybe_unused]] =
        (::_pbi::AddDescriptors(&descriptor_table_src_2fproto_2fgrpc_2fchannelz_2fchannelz_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
